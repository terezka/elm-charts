(function(scope){
'use strict';

function F(arity, fun, wrapper) {
  wrapper.a = arity;
  wrapper.f = fun;
  return wrapper;
}

function F2(fun) {
  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })
}
function F3(fun) {
  return F(3, fun, function(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  });
}
function F4(fun) {
  return F(4, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  });
}
function F5(fun) {
  return F(5, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  });
}
function F6(fun) {
  return F(6, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  });
}
function F7(fun) {
  return F(7, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  });
}
function F8(fun) {
  return F(8, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  });
}
function F9(fun) {
  return F(9, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  });
}

function A2(fun, a, b) {
  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
}
function A3(fun, a, b, c) {
  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
}
function A4(fun, a, b, c, d) {
  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e) {
  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f) {
  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g) {
  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h) {
  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i) {
  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}




// EQUALITY

function _Utils_eq(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

function _Utils_eqHelp(x, y, depth, stack)
{
	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object' || x === null || y === null)
	{
		typeof x === 'function' && _Debug_crash(5);
		return false;
	}

	if (depth > 100)
	{
		stack.push(_Utils_Tuple2(x,y));
		return true;
	}

	/**_UNUSED/
	if (x.$ === 'Set_elm_builtin')
	{
		x = $elm$core$Set$toList(x);
		y = $elm$core$Set$toList(y);
	}
	if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	/**/
	if (x.$ < 0)
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	for (var key in x)
	{
		if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

var _Utils_equal = F2(_Utils_eq);
var _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });



// COMPARISONS

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

function _Utils_cmp(x, y, ord)
{
	if (typeof x !== 'object')
	{
		return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
	}

	/**_UNUSED/
	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? 0 : a < b ? -1 : 1;
	}
	//*/

	/**/
	if (typeof x.$ === 'undefined')
	//*/
	/**_UNUSED/
	if (x.$[0] === '#')
	//*/
	{
		return (ord = _Utils_cmp(x.a, y.a))
			? ord
			: (ord = _Utils_cmp(x.b, y.b))
				? ord
				: _Utils_cmp(x.c, y.c);
	}

	// traverse conses until end of a list or a mismatch
	for (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES
	return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
}

var _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });
var _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });
var _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });
var _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });

var _Utils_compare = F2(function(x, y)
{
	var n = _Utils_cmp(x, y);
	return n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;
});


// COMMON VALUES

var _Utils_Tuple0 = 0;
var _Utils_Tuple0_UNUSED = { $: '#0' };

function _Utils_Tuple2(a, b) { return { a: a, b: b }; }
function _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }

function _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }
function _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }

function _Utils_chr(c) { return c; }
function _Utils_chr_UNUSED(c) { return new String(c); }


// RECORDS

function _Utils_update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


// APPEND

var _Utils_append = F2(_Utils_ap);

function _Utils_ap(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (!xs.b)
	{
		return ys;
	}
	var root = _List_Cons(xs.a, ys);
	xs = xs.b
	for (var curr = root; xs.b; xs = xs.b) // WHILE_CONS
	{
		curr = curr.b = _List_Cons(xs.a, ys);
	}
	return root;
}



var _List_Nil = { $: 0 };
var _List_Nil_UNUSED = { $: '[]' };

function _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }
function _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }


var _List_cons = F2(_List_Cons);

function _List_fromArray(arr)
{
	var out = _List_Nil;
	for (var i = arr.length; i--; )
	{
		out = _List_Cons(arr[i], out);
	}
	return out;
}

function _List_toArray(xs)
{
	for (var out = []; xs.b; xs = xs.b) // WHILE_CONS
	{
		out.push(xs.a);
	}
	return out;
}

var _List_map2 = F3(function(f, xs, ys)
{
	for (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES
	{
		arr.push(A2(f, xs.a, ys.a));
	}
	return _List_fromArray(arr);
});

var _List_map3 = F4(function(f, xs, ys, zs)
{
	for (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A3(f, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map4 = F5(function(f, ws, xs, ys, zs)
{
	for (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map5 = F6(function(f, vs, ws, xs, ys, zs)
{
	for (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_sortBy = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		return _Utils_cmp(f(a), f(b));
	}));
});

var _List_sortWith = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		var ord = A2(f, a, b);
		return ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;
	}));
});



var _JsArray_empty = [];

function _JsArray_singleton(value)
{
    return [value];
}

function _JsArray_length(array)
{
    return array.length;
}

var _JsArray_initialize = F3(function(size, offset, func)
{
    var result = new Array(size);

    for (var i = 0; i < size; i++)
    {
        result[i] = func(offset + i);
    }

    return result;
});

var _JsArray_initializeFromList = F2(function (max, ls)
{
    var result = new Array(max);

    for (var i = 0; i < max && ls.b; i++)
    {
        result[i] = ls.a;
        ls = ls.b;
    }

    result.length = i;
    return _Utils_Tuple2(result, ls);
});

var _JsArray_unsafeGet = F2(function(index, array)
{
    return array[index];
});

var _JsArray_unsafeSet = F3(function(index, value, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[index] = value;
    return result;
});

var _JsArray_push = F2(function(value, array)
{
    var length = array.length;
    var result = new Array(length + 1);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[length] = value;
    return result;
});

var _JsArray_foldl = F3(function(func, acc, array)
{
    var length = array.length;

    for (var i = 0; i < length; i++)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_foldr = F3(function(func, acc, array)
{
    for (var i = array.length - 1; i >= 0; i--)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_map = F2(function(func, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = func(array[i]);
    }

    return result;
});

var _JsArray_indexedMap = F3(function(func, offset, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = A2(func, offset + i, array[i]);
    }

    return result;
});

var _JsArray_slice = F3(function(from, to, array)
{
    return array.slice(from, to);
});

var _JsArray_appendN = F3(function(n, dest, source)
{
    var destLen = dest.length;
    var itemsToCopy = n - destLen;

    if (itemsToCopy > source.length)
    {
        itemsToCopy = source.length;
    }

    var size = destLen + itemsToCopy;
    var result = new Array(size);

    for (var i = 0; i < destLen; i++)
    {
        result[i] = dest[i];
    }

    for (var i = 0; i < itemsToCopy; i++)
    {
        result[i + destLen] = source[i];
    }

    return result;
});



// LOG

var _Debug_log = F2(function(tag, value)
{
	return value;
});

var _Debug_log_UNUSED = F2(function(tag, value)
{
	console.log(tag + ': ' + _Debug_toString(value));
	return value;
});


// TODOS

function _Debug_todo(moduleName, region)
{
	return function(message) {
		_Debug_crash(8, moduleName, region, message);
	};
}

function _Debug_todoCase(moduleName, region, value)
{
	return function(message) {
		_Debug_crash(9, moduleName, region, value, message);
	};
}


// TO STRING

function _Debug_toString(value)
{
	return '<internals>';
}

function _Debug_toString_UNUSED(value)
{
	return _Debug_toAnsiString(false, value);
}

function _Debug_toAnsiString(ansi, value)
{
	if (typeof value === 'function')
	{
		return _Debug_internalColor(ansi, '<function>');
	}

	if (typeof value === 'boolean')
	{
		return _Debug_ctorColor(ansi, value ? 'True' : 'False');
	}

	if (typeof value === 'number')
	{
		return _Debug_numberColor(ansi, value + '');
	}

	if (value instanceof String)
	{
		return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
	}

	if (typeof value === 'string')
	{
		return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (typeof tag === 'number')
		{
			return _Debug_internalColor(ansi, '<internals>');
		}

		if (tag[0] === '#')
		{
			var output = [];
			for (var k in value)
			{
				if (k === '$') continue;
				output.push(_Debug_toAnsiString(ansi, value[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (tag === 'Set_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Set')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));
		}

		if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Dict')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));
		}

		if (tag === 'Array_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Array')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));
		}

		if (tag === '::' || tag === '[]')
		{
			var output = '[';

			value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)

			for (; value.b; value = value.b) // WHILE_CONS
			{
				output += ',' + _Debug_toAnsiString(ansi, value.a);
			}
			return output + ']';
		}

		var output = '';
		for (var i in value)
		{
			if (i === '$') continue;
			var str = _Debug_toAnsiString(ansi, value[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return _Debug_ctorColor(ansi, tag) + output;
	}

	if (typeof DataView === 'function' && value instanceof DataView)
	{
		return _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');
	}

	if (typeof File !== 'undefined' && value instanceof File)
	{
		return _Debug_internalColor(ansi, '<' + value.name + '>');
	}

	if (typeof value === 'object')
	{
		var output = [];
		for (var key in value)
		{
			var field = key[0] === '_' ? key.slice(1) : key;
			output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return _Debug_internalColor(ansi, '<internals>');
}

function _Debug_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');

	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}

function _Debug_ctorColor(ansi, string)
{
	return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
}

function _Debug_numberColor(ansi, string)
{
	return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
}

function _Debug_stringColor(ansi, string)
{
	return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
}

function _Debug_charColor(ansi, string)
{
	return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
}

function _Debug_fadeColor(ansi, string)
{
	return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
}

function _Debug_internalColor(ansi, string)
{
	return ansi ? '\x1b[36m' + string + '\x1b[0m' : string;
}

function _Debug_toHexDigit(n)
{
	return String.fromCharCode(n < 10 ? 48 + n : 55 + n);
}


// CRASH


function _Debug_crash(identifier)
{
	throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
}


function _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)
{
	switch(identifier)
	{
		case 0:
			throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');

		case 1:
			throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');

		case 2:
			var jsonErrorString = fact1;
			throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);

		case 3:
			var portName = fact1;
			throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');

		case 4:
			var portName = fact1;
			var problem = fact2;
			throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);

		case 5:
			throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');

		case 6:
			var moduleName = fact1;
			throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');

		case 8:
			var moduleName = fact1;
			var region = fact2;
			var message = fact3;
			throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);

		case 9:
			var moduleName = fact1;
			var region = fact2;
			var value = fact3;
			var message = fact4;
			throw new Error(
				'TODO in module `' + moduleName + '` from the `case` expression '
				+ _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    '
				+ _Debug_toString(value).replace('\n', '\n    ')
				+ '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    ')
			);

		case 10:
			throw new Error('Bug in https://github.com/elm/virtual-dom/issues');

		case 11:
			throw new Error('Cannot perform mod 0. Division by zero error.');
	}
}

function _Debug_regionToString(region)
{
	if (region.f3.c3 === region.fb.c3)
	{
		return 'on line ' + region.f3.c3;
	}
	return 'on lines ' + region.f3.c3 + ' through ' + region.fb.c3;
}



// MATH

var _Basics_add = F2(function(a, b) { return a + b; });
var _Basics_sub = F2(function(a, b) { return a - b; });
var _Basics_mul = F2(function(a, b) { return a * b; });
var _Basics_fdiv = F2(function(a, b) { return a / b; });
var _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });
var _Basics_pow = F2(Math.pow);

var _Basics_remainderBy = F2(function(b, a) { return a % b; });

// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
var _Basics_modBy = F2(function(modulus, x)
{
	var answer = x % modulus;
	return modulus === 0
		? _Debug_crash(11)
		:
	((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))
		? answer + modulus
		: answer;
});


// TRIGONOMETRY

var _Basics_pi = Math.PI;
var _Basics_e = Math.E;
var _Basics_cos = Math.cos;
var _Basics_sin = Math.sin;
var _Basics_tan = Math.tan;
var _Basics_acos = Math.acos;
var _Basics_asin = Math.asin;
var _Basics_atan = Math.atan;
var _Basics_atan2 = F2(Math.atan2);


// MORE MATH

function _Basics_toFloat(x) { return x; }
function _Basics_truncate(n) { return n | 0; }
function _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }

var _Basics_ceiling = Math.ceil;
var _Basics_floor = Math.floor;
var _Basics_round = Math.round;
var _Basics_sqrt = Math.sqrt;
var _Basics_log = Math.log;
var _Basics_isNaN = isNaN;


// BOOLEANS

function _Basics_not(bool) { return !bool; }
var _Basics_and = F2(function(a, b) { return a && b; });
var _Basics_or  = F2(function(a, b) { return a || b; });
var _Basics_xor = F2(function(a, b) { return a !== b; });



var _String_cons = F2(function(chr, str)
{
	return chr + str;
});

function _String_uncons(string)
{
	var word = string.charCodeAt(0);
	return !isNaN(word)
		? $elm$core$Maybe$Just(
			0xD800 <= word && word <= 0xDBFF
				? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))
				: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))
		)
		: $elm$core$Maybe$Nothing;
}

var _String_append = F2(function(a, b)
{
	return a + b;
});

function _String_length(str)
{
	return str.length;
}

var _String_map = F2(function(func, string)
{
	var len = string.length;
	var array = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = string.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			array[i] = func(_Utils_chr(string[i] + string[i+1]));
			i += 2;
			continue;
		}
		array[i] = func(_Utils_chr(string[i]));
		i++;
	}
	return array.join('');
});

var _String_filter = F2(function(isGood, str)
{
	var arr = [];
	var len = str.length;
	var i = 0;
	while (i < len)
	{
		var char = str[i];
		var word = str.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += str[i];
			i++;
		}

		if (isGood(_Utils_chr(char)))
		{
			arr.push(char);
		}
	}
	return arr.join('');
});

function _String_reverse(str)
{
	var len = str.length;
	var arr = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = str.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			arr[len - i] = str[i + 1];
			i++;
			arr[len - i] = str[i - 1];
			i++;
		}
		else
		{
			arr[len - i] = str[i];
			i++;
		}
	}
	return arr.join('');
}

var _String_foldl = F3(function(func, state, string)
{
	var len = string.length;
	var i = 0;
	while (i < len)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += string[i];
			i++;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_foldr = F3(function(func, state, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_split = F2(function(sep, str)
{
	return str.split(sep);
});

var _String_join = F2(function(sep, strs)
{
	return strs.join(sep);
});

var _String_slice = F3(function(start, end, str) {
	return str.slice(start, end);
});

function _String_trim(str)
{
	return str.trim();
}

function _String_trimLeft(str)
{
	return str.replace(/^\s+/, '');
}

function _String_trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function _String_words(str)
{
	return _List_fromArray(str.trim().split(/\s+/g));
}

function _String_lines(str)
{
	return _List_fromArray(str.split(/\r\n|\r|\n/g));
}

function _String_toUpper(str)
{
	return str.toUpperCase();
}

function _String_toLower(str)
{
	return str.toLowerCase();
}

var _String_any = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (isGood(_Utils_chr(char)))
		{
			return true;
		}
	}
	return false;
});

var _String_all = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (!isGood(_Utils_chr(char)))
		{
			return false;
		}
	}
	return true;
});

var _String_contains = F2(function(sub, str)
{
	return str.indexOf(sub) > -1;
});

var _String_startsWith = F2(function(sub, str)
{
	return str.indexOf(sub) === 0;
});

var _String_endsWith = F2(function(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
});

var _String_indexes = F2(function(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _List_Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _List_fromArray(is);
});


// TO STRING

function _String_fromNumber(number)
{
	return number + '';
}


// INT CONVERSIONS

function _String_toInt(str)
{
	var total = 0;
	var code0 = str.charCodeAt(0);
	var start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;

	for (var i = start; i < str.length; ++i)
	{
		var code = str.charCodeAt(i);
		if (code < 0x30 || 0x39 < code)
		{
			return $elm$core$Maybe$Nothing;
		}
		total = 10 * total + code - 0x30;
	}

	return i == start
		? $elm$core$Maybe$Nothing
		: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);
}


// FLOAT CONVERSIONS

function _String_toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return $elm$core$Maybe$Nothing;
	}
	var n = +s;
	// faster isNaN check
	return n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;
}

function _String_fromList(chars)
{
	return _List_toArray(chars).join('');
}




function _Char_toCode(char)
{
	var code = char.charCodeAt(0);
	if (0xD800 <= code && code <= 0xDBFF)
	{
		return (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000
	}
	return code;
}

function _Char_fromCode(code)
{
	return _Utils_chr(
		(code < 0 || 0x10FFFF < code)
			? '\uFFFD'
			:
		(code <= 0xFFFF)
			? String.fromCharCode(code)
			:
		(code -= 0x10000,
			String.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)
		)
	);
}

function _Char_toUpper(char)
{
	return _Utils_chr(char.toUpperCase());
}

function _Char_toLower(char)
{
	return _Utils_chr(char.toLowerCase());
}

function _Char_toLocaleUpper(char)
{
	return _Utils_chr(char.toLocaleUpperCase());
}

function _Char_toLocaleLower(char)
{
	return _Utils_chr(char.toLocaleLowerCase());
}



/**_UNUSED/
function _Json_errorToString(error)
{
	return $elm$json$Json$Decode$errorToString(error);
}
//*/


// CORE DECODERS

function _Json_succeed(msg)
{
	return {
		$: 0,
		a: msg
	};
}

function _Json_fail(msg)
{
	return {
		$: 1,
		a: msg
	};
}

function _Json_decodePrim(decoder)
{
	return { $: 2, b: decoder };
}

var _Json_decodeInt = _Json_decodePrim(function(value) {
	return (typeof value !== 'number')
		? _Json_expecting('an INT', value)
		:
	(-2147483647 < value && value < 2147483647 && (value | 0) === value)
		? $elm$core$Result$Ok(value)
		:
	(isFinite(value) && !(value % 1))
		? $elm$core$Result$Ok(value)
		: _Json_expecting('an INT', value);
});

var _Json_decodeBool = _Json_decodePrim(function(value) {
	return (typeof value === 'boolean')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a BOOL', value);
});

var _Json_decodeFloat = _Json_decodePrim(function(value) {
	return (typeof value === 'number')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a FLOAT', value);
});

var _Json_decodeValue = _Json_decodePrim(function(value) {
	return $elm$core$Result$Ok(_Json_wrap(value));
});

var _Json_decodeString = _Json_decodePrim(function(value) {
	return (typeof value === 'string')
		? $elm$core$Result$Ok(value)
		: (value instanceof String)
			? $elm$core$Result$Ok(value + '')
			: _Json_expecting('a STRING', value);
});

function _Json_decodeList(decoder) { return { $: 3, b: decoder }; }
function _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }

function _Json_decodeNull(value) { return { $: 5, c: value }; }

var _Json_decodeField = F2(function(field, decoder)
{
	return {
		$: 6,
		d: field,
		b: decoder
	};
});

var _Json_decodeIndex = F2(function(index, decoder)
{
	return {
		$: 7,
		e: index,
		b: decoder
	};
});

function _Json_decodeKeyValuePairs(decoder)
{
	return {
		$: 8,
		b: decoder
	};
}

function _Json_mapMany(f, decoders)
{
	return {
		$: 9,
		f: f,
		g: decoders
	};
}

var _Json_andThen = F2(function(callback, decoder)
{
	return {
		$: 10,
		b: decoder,
		h: callback
	};
});

function _Json_oneOf(decoders)
{
	return {
		$: 11,
		g: decoders
	};
}


// DECODING OBJECTS

var _Json_map1 = F2(function(f, d1)
{
	return _Json_mapMany(f, [d1]);
});

var _Json_map2 = F3(function(f, d1, d2)
{
	return _Json_mapMany(f, [d1, d2]);
});

var _Json_map3 = F4(function(f, d1, d2, d3)
{
	return _Json_mapMany(f, [d1, d2, d3]);
});

var _Json_map4 = F5(function(f, d1, d2, d3, d4)
{
	return _Json_mapMany(f, [d1, d2, d3, d4]);
});

var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5]);
});

var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);
});

var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
});

var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
});


// DECODE

var _Json_runOnString = F2(function(decoder, string)
{
	try
	{
		var value = JSON.parse(string);
		return _Json_runHelp(decoder, value);
	}
	catch (e)
	{
		return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
	}
});

var _Json_run = F2(function(decoder, value)
{
	return _Json_runHelp(decoder, _Json_unwrap(value));
});

function _Json_runHelp(decoder, value)
{
	switch (decoder.$)
	{
		case 2:
			return decoder.b(value);

		case 5:
			return (value === null)
				? $elm$core$Result$Ok(decoder.c)
				: _Json_expecting('null', value);

		case 3:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('a LIST', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);

		case 4:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);

		case 6:
			var field = decoder.d;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
			}
			var result = _Json_runHelp(decoder.b, value[field]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));

		case 7:
			var index = decoder.e;
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			if (index >= value.length)
			{
				return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
			}
			var result = _Json_runHelp(decoder.b, value[index]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));

		case 8:
			if (typeof value !== 'object' || value === null || _Json_isArray(value))
			{
				return _Json_expecting('an OBJECT', value);
			}

			var keyValuePairs = _List_Nil;
			// TODO test perf of Object.keys and switch when support is good enough
			for (var key in value)
			{
				if (value.hasOwnProperty(key))
				{
					var result = _Json_runHelp(decoder.b, value[key]);
					if (!$elm$core$Result$isOk(result))
					{
						return $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));
					}
					keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
				}
			}
			return $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));

		case 9:
			var answer = decoder.f;
			var decoders = decoder.g;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = _Json_runHelp(decoders[i], value);
				if (!$elm$core$Result$isOk(result))
				{
					return result;
				}
				answer = answer(result.a);
			}
			return $elm$core$Result$Ok(answer);

		case 10:
			var result = _Json_runHelp(decoder.b, value);
			return (!$elm$core$Result$isOk(result))
				? result
				: _Json_runHelp(decoder.h(result.a), value);

		case 11:
			var errors = _List_Nil;
			for (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS
			{
				var result = _Json_runHelp(temp.a, value);
				if ($elm$core$Result$isOk(result))
				{
					return result;
				}
				errors = _List_Cons(result.a, errors);
			}
			return $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));

		case 1:
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));

		case 0:
			return $elm$core$Result$Ok(decoder.a);
	}
}

function _Json_runArrayDecoder(decoder, value, toElmValue)
{
	var len = value.length;
	var array = new Array(len);
	for (var i = 0; i < len; i++)
	{
		var result = _Json_runHelp(decoder, value[i]);
		if (!$elm$core$Result$isOk(result))
		{
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));
		}
		array[i] = result.a;
	}
	return $elm$core$Result$Ok(toElmValue(array));
}

function _Json_isArray(value)
{
	return Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);
}

function _Json_toElmArray(array)
{
	return A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });
}

function _Json_expecting(type, value)
{
	return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
}


// EQUALITY

function _Json_equality(x, y)
{
	if (x === y)
	{
		return true;
	}

	if (x.$ !== y.$)
	{
		return false;
	}

	switch (x.$)
	{
		case 0:
		case 1:
			return x.a === y.a;

		case 2:
			return x.b === y.b;

		case 5:
			return x.c === y.c;

		case 3:
		case 4:
		case 8:
			return _Json_equality(x.b, y.b);

		case 6:
			return x.d === y.d && _Json_equality(x.b, y.b);

		case 7:
			return x.e === y.e && _Json_equality(x.b, y.b);

		case 9:
			return x.f === y.f && _Json_listEquality(x.g, y.g);

		case 10:
			return x.h === y.h && _Json_equality(x.b, y.b);

		case 11:
			return _Json_listEquality(x.g, y.g);
	}
}

function _Json_listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!_Json_equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

var _Json_encode = F2(function(indentLevel, value)
{
	return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
});

function _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }
function _Json_unwrap_UNUSED(value) { return value.a; }

function _Json_wrap(value) { return value; }
function _Json_unwrap(value) { return value; }

function _Json_emptyArray() { return []; }
function _Json_emptyObject() { return {}; }

var _Json_addField = F3(function(key, value, object)
{
	object[key] = _Json_unwrap(value);
	return object;
});

function _Json_addEntry(func)
{
	return F2(function(entry, array)
	{
		array.push(_Json_unwrap(func(entry)));
		return array;
	});
}

var _Json_encodeNull = _Json_wrap(null);



// TASKS

function _Scheduler_succeed(value)
{
	return {
		$: 0,
		a: value
	};
}

function _Scheduler_fail(error)
{
	return {
		$: 1,
		a: error
	};
}

function _Scheduler_binding(callback)
{
	return {
		$: 2,
		b: callback,
		c: null
	};
}

var _Scheduler_andThen = F2(function(callback, task)
{
	return {
		$: 3,
		b: callback,
		d: task
	};
});

var _Scheduler_onError = F2(function(callback, task)
{
	return {
		$: 4,
		b: callback,
		d: task
	};
});

function _Scheduler_receive(callback)
{
	return {
		$: 5,
		b: callback
	};
}


// PROCESSES

var _Scheduler_guid = 0;

function _Scheduler_rawSpawn(task)
{
	var proc = {
		$: 0,
		e: _Scheduler_guid++,
		f: task,
		g: null,
		h: []
	};

	_Scheduler_enqueue(proc);

	return proc;
}

function _Scheduler_spawn(task)
{
	return _Scheduler_binding(function(callback) {
		callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
	});
}

function _Scheduler_rawSend(proc, msg)
{
	proc.h.push(msg);
	_Scheduler_enqueue(proc);
}

var _Scheduler_send = F2(function(proc, msg)
{
	return _Scheduler_binding(function(callback) {
		_Scheduler_rawSend(proc, msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});

function _Scheduler_kill(proc)
{
	return _Scheduler_binding(function(callback) {
		var task = proc.f;
		if (task.$ === 2 && task.c)
		{
			task.c();
		}

		proc.f = null;

		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}


/* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/


var _Scheduler_working = false;
var _Scheduler_queue = [];


function _Scheduler_enqueue(proc)
{
	_Scheduler_queue.push(proc);
	if (_Scheduler_working)
	{
		return;
	}
	_Scheduler_working = true;
	while (proc = _Scheduler_queue.shift())
	{
		_Scheduler_step(proc);
	}
	_Scheduler_working = false;
}


function _Scheduler_step(proc)
{
	while (proc.f)
	{
		var rootTag = proc.f.$;
		if (rootTag === 0 || rootTag === 1)
		{
			while (proc.g && proc.g.$ !== rootTag)
			{
				proc.g = proc.g.i;
			}
			if (!proc.g)
			{
				return;
			}
			proc.f = proc.g.b(proc.f.a);
			proc.g = proc.g.i;
		}
		else if (rootTag === 2)
		{
			proc.f.c = proc.f.b(function(newRoot) {
				proc.f = newRoot;
				_Scheduler_enqueue(proc);
			});
			return;
		}
		else if (rootTag === 5)
		{
			if (proc.h.length === 0)
			{
				return;
			}
			proc.f = proc.f.b(proc.h.shift());
		}
		else // if (rootTag === 3 || rootTag === 4)
		{
			proc.g = {
				$: rootTag === 3 ? 0 : 1,
				b: proc.f.b,
				i: proc.g
			};
			proc.f = proc.f.d;
		}
	}
}



function _Process_sleep(time)
{
	return _Scheduler_binding(function(callback) {
		var id = setTimeout(function() {
			callback(_Scheduler_succeed(_Utils_Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}




// PROGRAMS


var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.hO,
		impl.jp,
		impl.iO,
		function() { return function() {} }
	);
});



// INITIALIZE A PROGRAM


function _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)
{
	var result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));
	$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);
	var managers = {};
	var initPair = init(result.a);
	var model = initPair.a;
	var stepper = stepperBuilder(sendToApp, model);
	var ports = _Platform_setupEffects(managers, sendToApp);

	function sendToApp(msg, viewMetadata)
	{
		var pair = A2(update, msg, model);
		stepper(model = pair.a, viewMetadata);
		_Platform_enqueueEffects(managers, pair.b, subscriptions(model));
	}

	_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));

	return ports ? { ports: ports } : {};
}



// TRACK PRELOADS
//
// This is used by code in elm/browser and elm/http
// to register any HTTP requests that are triggered by init.
//


var _Platform_preload;


function _Platform_registerPreload(url)
{
	_Platform_preload.add(url);
}



// EFFECT MANAGERS


var _Platform_effectManagers = {};


function _Platform_setupEffects(managers, sendToApp)
{
	var ports;

	// setup all necessary effect managers
	for (var key in _Platform_effectManagers)
	{
		var manager = _Platform_effectManagers[key];

		if (manager.a)
		{
			ports = ports || {};
			ports[key] = manager.a(key, sendToApp);
		}

		managers[key] = _Platform_instantiateManager(manager, sendToApp);
	}

	return ports;
}


function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)
{
	return {
		b: init,
		c: onEffects,
		d: onSelfMsg,
		e: cmdMap,
		f: subMap
	};
}


function _Platform_instantiateManager(info, sendToApp)
{
	var router = {
		g: sendToApp,
		h: undefined
	};

	var onEffects = info.c;
	var onSelfMsg = info.d;
	var cmdMap = info.e;
	var subMap = info.f;

	function loop(state)
	{
		return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)
		{
			var value = msg.a;

			if (msg.$ === 0)
			{
				return A3(onSelfMsg, router, value, state);
			}

			return cmdMap && subMap
				? A4(onEffects, router, value.i, value.j, state)
				: A3(onEffects, router, cmdMap ? value.i : value.j, state);
		}));
	}

	return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
}



// ROUTING


var _Platform_sendToApp = F2(function(router, msg)
{
	return _Scheduler_binding(function(callback)
	{
		router.g(msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});


var _Platform_sendToSelf = F2(function(router, msg)
{
	return A2(_Scheduler_send, router.h, {
		$: 0,
		a: msg
	});
});



// BAGS


function _Platform_leaf(home)
{
	return function(value)
	{
		return {
			$: 1,
			k: home,
			l: value
		};
	};
}


function _Platform_batch(list)
{
	return {
		$: 2,
		m: list
	};
}


var _Platform_map = F2(function(tagger, bag)
{
	return {
		$: 3,
		n: tagger,
		o: bag
	}
});



// PIPE BAGS INTO EFFECT MANAGERS
//
// Effects must be queued!
//
// Say your init contains a synchronous command, like Time.now or Time.here
//
//   - This will produce a batch of effects (FX_1)
//   - The synchronous task triggers the subsequent `update` call
//   - This will produce a batch of effects (FX_2)
//
// If we just start dispatching FX_2, subscriptions from FX_2 can be processed
// before subscriptions from FX_1. No good! Earlier versions of this code had
// this problem, leading to these reports:
//
//   https://github.com/elm/core/issues/980
//   https://github.com/elm/core/pull/981
//   https://github.com/elm/compiler/issues/1776
//
// The queue is necessary to avoid ordering issues for synchronous commands.


// Why use true/false here? Why not just check the length of the queue?
// The goal is to detect "are we currently dispatching effects?" If we
// are, we need to bail and let the ongoing while loop handle things.
//
// Now say the queue has 1 element. When we dequeue the final element,
// the queue will be empty, but we are still actively dispatching effects.
// So you could get queue jumping in a really tricky category of cases.
//
var _Platform_effectsQueue = [];
var _Platform_effectsActive = false;


function _Platform_enqueueEffects(managers, cmdBag, subBag)
{
	_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });

	if (_Platform_effectsActive) return;

	_Platform_effectsActive = true;
	for (var fx; fx = _Platform_effectsQueue.shift(); )
	{
		_Platform_dispatchEffects(fx.p, fx.q, fx.r);
	}
	_Platform_effectsActive = false;
}


function _Platform_dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	_Platform_gatherEffects(true, cmdBag, effectsDict, null);
	_Platform_gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		_Scheduler_rawSend(managers[home], {
			$: 'fx',
			a: effectsDict[home] || { i: _List_Nil, j: _List_Nil }
		});
	}
}


function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.$)
	{
		case 1:
			var home = bag.k;
			var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
			effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
			return;

		case 2:
			for (var list = bag.m; list.b; list = list.b) // WHILE_CONS
			{
				_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
			}
			return;

		case 3:
			_Platform_gatherEffects(isCmd, bag.o, effectsDict, {
				s: bag.n,
				t: taggers
			});
			return;
	}
}


function _Platform_toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		for (var temp = taggers; temp; temp = temp.t)
		{
			x = temp.s(x);
		}
		return x;
	}

	var map = isCmd
		? _Platform_effectManagers[home].e
		: _Platform_effectManagers[home].f;

	return A2(map, applyTaggers, value)
}


function _Platform_insert(isCmd, newEffect, effects)
{
	effects = effects || { i: _List_Nil, j: _List_Nil };

	isCmd
		? (effects.i = _List_Cons(newEffect, effects.i))
		: (effects.j = _List_Cons(newEffect, effects.j));

	return effects;
}



// PORTS


function _Platform_checkPortName(name)
{
	if (_Platform_effectManagers[name])
	{
		_Debug_crash(3, name)
	}
}



// OUTGOING PORTS


function _Platform_outgoingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		e: _Platform_outgoingPortMap,
		u: converter,
		a: _Platform_setupOutgoingPort
	};
	return _Platform_leaf(name);
}


var _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });


function _Platform_setupOutgoingPort(name)
{
	var subs = [];
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Process_sleep(0);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, cmdList, state)
	{
		for ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = _Json_unwrap(converter(cmdList.a));
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
		}
		return init;
	});

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}



// INCOMING PORTS


function _Platform_incomingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		f: _Platform_incomingPortMap,
		u: converter,
		a: _Platform_setupIncomingPort
	};
	return _Platform_leaf(name);
}


var _Platform_incomingPortMap = F2(function(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});


function _Platform_setupIncomingPort(name, sendToApp)
{
	var subs = _List_Nil;
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Scheduler_succeed(null);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, subList, state)
	{
		subs = subList;
		return init;
	});

	// PUBLIC API

	function send(incomingValue)
	{
		var result = A2(_Json_run, converter, _Json_wrap(incomingValue));

		$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);

		var value = result.a;
		for (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS
		{
			sendToApp(temp.a(value));
		}
	}

	return { send: send };
}



// EXPORT ELM MODULES
//
// Have DEBUG and PROD versions so that we can (1) give nicer errors in
// debug mode and (2) not pay for the bits needed for that in prod mode.
//


function _Platform_export(exports)
{
	scope['Elm']
		? _Platform_mergeExportsProd(scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsProd(obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6)
				: _Platform_mergeExportsProd(obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}


function _Platform_export_UNUSED(exports)
{
	scope['Elm']
		? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsDebug(moduleName, obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6, moduleName)
				: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}




// HELPERS


var _VirtualDom_divertHrefToApp;

var _VirtualDom_doc = typeof document !== 'undefined' ? document : {};


function _VirtualDom_appendChild(parent, child)
{
	parent.appendChild(child);
}

var _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)
{
	// NOTE: this function needs _Platform_export available to work

	/**/
	var node = args['node'];
	//*/
	/**_UNUSED/
	var node = args && args['node'] ? args['node'] : _Debug_crash(0);
	//*/

	node.parentNode.replaceChild(
		_VirtualDom_render(virtualNode, function() {}),
		node
	);

	return {};
});



// TEXT


function _VirtualDom_text(string)
{
	return {
		$: 0,
		a: string
	};
}



// NODE


var _VirtualDom_nodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 1,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_node = _VirtualDom_nodeNS(undefined);



// KEYED NODE


var _VirtualDom_keyedNodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 2,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);



// CUSTOM


function _VirtualDom_custom(factList, model, render, diff)
{
	return {
		$: 3,
		d: _VirtualDom_organizeFacts(factList),
		g: model,
		h: render,
		i: diff
	};
}



// MAP


var _VirtualDom_map = F2(function(tagger, node)
{
	return {
		$: 4,
		j: tagger,
		k: node,
		b: 1 + (node.b || 0)
	};
});



// LAZY


function _VirtualDom_thunk(refs, thunk)
{
	return {
		$: 5,
		l: refs,
		m: thunk,
		k: undefined
	};
}

var _VirtualDom_lazy = F2(function(func, a)
{
	return _VirtualDom_thunk([func, a], function() {
		return func(a);
	});
});

var _VirtualDom_lazy2 = F3(function(func, a, b)
{
	return _VirtualDom_thunk([func, a, b], function() {
		return A2(func, a, b);
	});
});

var _VirtualDom_lazy3 = F4(function(func, a, b, c)
{
	return _VirtualDom_thunk([func, a, b, c], function() {
		return A3(func, a, b, c);
	});
});

var _VirtualDom_lazy4 = F5(function(func, a, b, c, d)
{
	return _VirtualDom_thunk([func, a, b, c, d], function() {
		return A4(func, a, b, c, d);
	});
});

var _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)
{
	return _VirtualDom_thunk([func, a, b, c, d, e], function() {
		return A5(func, a, b, c, d, e);
	});
});

var _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f], function() {
		return A6(func, a, b, c, d, e, f);
	});
});

var _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {
		return A7(func, a, b, c, d, e, f, g);
	});
});

var _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {
		return A8(func, a, b, c, d, e, f, g, h);
	});
});



// FACTS


var _VirtualDom_on = F2(function(key, handler)
{
	return {
		$: 'a0',
		n: key,
		o: handler
	};
});
var _VirtualDom_style = F2(function(key, value)
{
	return {
		$: 'a1',
		n: key,
		o: value
	};
});
var _VirtualDom_property = F2(function(key, value)
{
	return {
		$: 'a2',
		n: key,
		o: value
	};
});
var _VirtualDom_attribute = F2(function(key, value)
{
	return {
		$: 'a3',
		n: key,
		o: value
	};
});
var _VirtualDom_attributeNS = F3(function(namespace, key, value)
{
	return {
		$: 'a4',
		n: key,
		o: { f: namespace, o: value }
	};
});



// XSS ATTACK VECTOR CHECKS


function _VirtualDom_noScript(tag)
{
	return tag == 'script' ? 'p' : tag;
}

function _VirtualDom_noOnOrFormAction(key)
{
	return /^(on|formAction$)/i.test(key) ? 'data-' + key : key;
}

function _VirtualDom_noInnerHtmlOrFormAction(key)
{
	return key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;
}

function _VirtualDom_noJavaScriptUri(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,'')) ? '' : value;
}

function _VirtualDom_noJavaScriptUri_UNUSED(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,''))
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlUri(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value) ? '' : value;
}

function _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value)
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}



// MAP FACTS


var _VirtualDom_mapAttribute = F2(function(func, attr)
{
	return (attr.$ === 'a0')
		? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))
		: attr;
});

function _VirtualDom_mapHandler(func, handler)
{
	var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

	// 0 = Normal
	// 1 = MayStopPropagation
	// 2 = MayPreventDefault
	// 3 = Custom

	return {
		$: handler.$,
		a:
			!tag
				? A2($elm$json$Json$Decode$map, func, handler.a)
				:
			A3($elm$json$Json$Decode$map2,
				tag < 3
					? _VirtualDom_mapEventTuple
					: _VirtualDom_mapEventRecord,
				$elm$json$Json$Decode$succeed(func),
				handler.a
			)
	};
}

var _VirtualDom_mapEventTuple = F2(function(func, tuple)
{
	return _Utils_Tuple2(func(tuple.a), tuple.b);
});

var _VirtualDom_mapEventRecord = F2(function(func, record)
{
	return {
		au: func(record.au),
		eK: record.eK,
		ev: record.ev
	}
});



// ORGANIZE FACTS


function _VirtualDom_organizeFacts(factList)
{
	for (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS
	{
		var entry = factList.a;

		var tag = entry.$;
		var key = entry.n;
		var value = entry.o;

		if (tag === 'a2')
		{
			(key === 'className')
				? _VirtualDom_addClass(facts, key, _Json_unwrap(value))
				: facts[key] = _Json_unwrap(value);

			continue;
		}

		var subFacts = facts[tag] || (facts[tag] = {});
		(tag === 'a3' && key === 'class')
			? _VirtualDom_addClass(subFacts, key, value)
			: subFacts[key] = value;
	}

	return facts;
}

function _VirtualDom_addClass(object, key, newClass)
{
	var classes = object[key];
	object[key] = classes ? classes + ' ' + newClass : newClass;
}



// RENDER


function _VirtualDom_render(vNode, eventNode)
{
	var tag = vNode.$;

	if (tag === 5)
	{
		return _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);
	}

	if (tag === 0)
	{
		return _VirtualDom_doc.createTextNode(vNode.a);
	}

	if (tag === 4)
	{
		var subNode = vNode.k;
		var tagger = vNode.j;

		while (subNode.$ === 4)
		{
			typeof tagger !== 'object'
				? tagger = [tagger, subNode.j]
				: tagger.push(subNode.j);

			subNode = subNode.k;
		}

		var subEventRoot = { j: tagger, p: eventNode };
		var domNode = _VirtualDom_render(subNode, subEventRoot);
		domNode.elm_event_node_ref = subEventRoot;
		return domNode;
	}

	if (tag === 3)
	{
		var domNode = vNode.h(vNode.g);
		_VirtualDom_applyFacts(domNode, eventNode, vNode.d);
		return domNode;
	}

	// at this point `tag` must be 1 or 2

	var domNode = vNode.f
		? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)
		: _VirtualDom_doc.createElement(vNode.c);

	if (_VirtualDom_divertHrefToApp && vNode.c == 'a')
	{
		domNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));
	}

	_VirtualDom_applyFacts(domNode, eventNode, vNode.d);

	for (var kids = vNode.e, i = 0; i < kids.length; i++)
	{
		_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));
	}

	return domNode;
}



// APPLY FACTS


function _VirtualDom_applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		key === 'a1'
			? _VirtualDom_applyStyles(domNode, value)
			:
		key === 'a0'
			? _VirtualDom_applyEvents(domNode, eventNode, value)
			:
		key === 'a3'
			? _VirtualDom_applyAttrs(domNode, value)
			:
		key === 'a4'
			? _VirtualDom_applyAttrsNS(domNode, value)
			:
		((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);
	}
}



// APPLY STYLES


function _VirtualDom_applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}



// APPLY ATTRS


function _VirtualDom_applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		typeof value !== 'undefined'
			? domNode.setAttribute(key, value)
			: domNode.removeAttribute(key);
	}
}



// APPLY NAMESPACED ATTRS


function _VirtualDom_applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.f;
		var value = pair.o;

		typeof value !== 'undefined'
			? domNode.setAttributeNS(namespace, key, value)
			: domNode.removeAttributeNS(namespace, key);
	}
}



// APPLY EVENTS


function _VirtualDom_applyEvents(domNode, eventNode, events)
{
	var allCallbacks = domNode.elmFs || (domNode.elmFs = {});

	for (var key in events)
	{
		var newHandler = events[key];
		var oldCallback = allCallbacks[key];

		if (!newHandler)
		{
			domNode.removeEventListener(key, oldCallback);
			allCallbacks[key] = undefined;
			continue;
		}

		if (oldCallback)
		{
			var oldHandler = oldCallback.q;
			if (oldHandler.$ === newHandler.$)
			{
				oldCallback.q = newHandler;
				continue;
			}
			domNode.removeEventListener(key, oldCallback);
		}

		oldCallback = _VirtualDom_makeCallback(eventNode, newHandler);
		domNode.addEventListener(key, oldCallback,
			_VirtualDom_passiveSupported
			&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }
		);
		allCallbacks[key] = oldCallback;
	}
}



// PASSIVE EVENTS


var _VirtualDom_passiveSupported;

try
{
	window.addEventListener('t', null, Object.defineProperty({}, 'passive', {
		get: function() { _VirtualDom_passiveSupported = true; }
	}));
}
catch(e) {}



// EVENT HANDLERS


function _VirtualDom_makeCallback(eventNode, initialHandler)
{
	function callback(event)
	{
		var handler = callback.q;
		var result = _Json_runHelp(handler.a, event);

		if (!$elm$core$Result$isOk(result))
		{
			return;
		}

		var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

		// 0 = Normal
		// 1 = MayStopPropagation
		// 2 = MayPreventDefault
		// 3 = Custom

		var value = result.a;
		var message = !tag ? value : tag < 3 ? value.a : value.au;
		var stopPropagation = tag == 1 ? value.b : tag == 3 && value.eK;
		var currentEventNode = (
			stopPropagation && event.stopPropagation(),
			(tag == 2 ? value.b : tag == 3 && value.ev) && event.preventDefault(),
			eventNode
		);
		var tagger;
		var i;
		while (tagger = currentEventNode.j)
		{
			if (typeof tagger == 'function')
			{
				message = tagger(message);
			}
			else
			{
				for (var i = tagger.length; i--; )
				{
					message = tagger[i](message);
				}
			}
			currentEventNode = currentEventNode.p;
		}
		currentEventNode(message, stopPropagation); // stopPropagation implies isSync
	}

	callback.q = initialHandler;

	return callback;
}

function _VirtualDom_equalEvents(x, y)
{
	return x.$ == y.$ && _Json_equality(x.a, y.a);
}



// DIFF


// TODO: Should we do patches like in iOS?
//
// type Patch
//   = At Int Patch
//   | Batch (List Patch)
//   | Change ...
//
// How could it not be better?
//
function _VirtualDom_diff(x, y)
{
	var patches = [];
	_VirtualDom_diffHelp(x, y, patches, 0);
	return patches;
}


function _VirtualDom_pushPatch(patches, type, index, data)
{
	var patch = {
		$: type,
		r: index,
		s: data,
		t: undefined,
		u: undefined
	};
	patches.push(patch);
	return patch;
}


function _VirtualDom_diffHelp(x, y, patches, index)
{
	if (x === y)
	{
		return;
	}

	var xType = x.$;
	var yType = y.$;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (xType !== yType)
	{
		if (xType === 1 && yType === 2)
		{
			y = _VirtualDom_dekey(y);
			yType = 1;
		}
		else
		{
			_VirtualDom_pushPatch(patches, 0, index, y);
			return;
		}
	}

	// Now we know that both nodes are the same $.
	switch (yType)
	{
		case 5:
			var xRefs = x.l;
			var yRefs = y.l;
			var i = xRefs.length;
			var same = i === yRefs.length;
			while (same && i--)
			{
				same = xRefs[i] === yRefs[i];
			}
			if (same)
			{
				y.k = x.k;
				return;
			}
			y.k = y.m();
			var subPatches = [];
			_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);
			subPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);
			return;

		case 4:
			// gather nested taggers
			var xTaggers = x.j;
			var yTaggers = y.j;
			var nesting = false;

			var xSubNode = x.k;
			while (xSubNode.$ === 4)
			{
				nesting = true;

				typeof xTaggers !== 'object'
					? xTaggers = [xTaggers, xSubNode.j]
					: xTaggers.push(xSubNode.j);

				xSubNode = xSubNode.k;
			}

			var ySubNode = y.k;
			while (ySubNode.$ === 4)
			{
				nesting = true;

				typeof yTaggers !== 'object'
					? yTaggers = [yTaggers, ySubNode.j]
					: yTaggers.push(ySubNode.j);

				ySubNode = ySubNode.k;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && xTaggers.length !== yTaggers.length)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)
			{
				_VirtualDom_pushPatch(patches, 2, index, yTaggers);
			}

			// diff everything below the taggers
			_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);
			return;

		case 0:
			if (x.a !== y.a)
			{
				_VirtualDom_pushPatch(patches, 3, index, y.a);
			}
			return;

		case 1:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);
			return;

		case 2:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);
			return;

		case 3:
			if (x.h !== y.h)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
			factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

			var patch = y.i(x.g, y.g);
			patch && _VirtualDom_pushPatch(patches, 5, index, patch);

			return;
	}
}

// assumes the incoming arrays are the same length
function _VirtualDom_pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}

function _VirtualDom_diffNodes(x, y, patches, index, diffKids)
{
	// Bail if obvious indicators have changed. Implies more serious
	// structural changes such that it's not worth it to diff.
	if (x.c !== y.c || x.f !== y.f)
	{
		_VirtualDom_pushPatch(patches, 0, index, y);
		return;
	}

	var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
	factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

	diffKids(x, y, patches, index);
}



// DIFF FACTS


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function _VirtualDom_diffFacts(x, y, category)
{
	var diff;

	// look for changes and removals
	for (var xKey in x)
	{
		if (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')
		{
			var subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[xKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(xKey in y))
		{
			diff = diff || {};
			diff[xKey] =
				!category
					? (typeof x[xKey] === 'string' ? '' : null)
					:
				(category === 'a1')
					? ''
					:
				(category === 'a0' || category === 'a3')
					? undefined
					:
				{ f: x[xKey].f, o: undefined };

			continue;
		}

		var xValue = x[xKey];
		var yValue = y[xKey];

		// reference equal, so don't worry about it
		if (xValue === yValue && xKey !== 'value' && xKey !== 'checked'
			|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))
		{
			continue;
		}

		diff = diff || {};
		diff[xKey] = yValue;
	}

	// add new stuff
	for (var yKey in y)
	{
		if (!(yKey in x))
		{
			diff = diff || {};
			diff[yKey] = y[yKey];
		}
	}

	return diff;
}



// DIFF KIDS


function _VirtualDom_diffKids(xParent, yParent, patches, index)
{
	var xKids = xParent.e;
	var yKids = yParent.e;

	var xLen = xKids.length;
	var yLen = yKids.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (xLen > yLen)
	{
		_VirtualDom_pushPatch(patches, 6, index, {
			v: yLen,
			i: xLen - yLen
		});
	}
	else if (xLen < yLen)
	{
		_VirtualDom_pushPatch(patches, 7, index, {
			v: xLen,
			e: yKids
		});
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	for (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)
	{
		var xKid = xKids[i];
		_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);
		index += xKid.b || 0;
	}
}



// KEYED DIFF


function _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var xKids = xParent.e;
	var yKids = yParent.e;
	var xLen = xKids.length;
	var yLen = yKids.length;
	var xIndex = 0;
	var yIndex = 0;

	var index = rootIndex;

	while (xIndex < xLen && yIndex < yLen)
	{
		var x = xKids[xIndex];
		var y = yKids[yIndex];

		var xKey = x.a;
		var yKey = y.a;
		var xNode = x.b;
		var yNode = y.b;

		var newMatch = undefined;
		var oldMatch = undefined;

		// check if keys match

		if (xKey === yKey)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNode, localPatches, index);
			index += xNode.b || 0;

			xIndex++;
			yIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var xNext = xKids[xIndex + 1];
		var yNext = yKids[yIndex + 1];

		if (xNext)
		{
			var xNextKey = xNext.a;
			var xNextNode = xNext.b;
			oldMatch = yKey === xNextKey;
		}

		if (yNext)
		{
			var yNextKey = yNext.a;
			var yNextNode = yNext.b;
			newMatch = xKey === yNextKey;
		}


		// swap x and y
		if (newMatch && oldMatch)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		// insert y
		if (newMatch)
		{
			index++;
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			index += xNode.b || 0;

			xIndex += 1;
			yIndex += 2;
			continue;
		}

		// remove x
		if (oldMatch)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 1;
			continue;
		}

		// remove x, insert y
		if (xNext && xNextKey === yNextKey)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (xIndex < xLen)
	{
		index++;
		var x = xKids[xIndex];
		var xNode = x.b;
		_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);
		index += xNode.b || 0;
		xIndex++;
	}

	while (yIndex < yLen)
	{
		var endInserts = endInserts || [];
		var y = yKids[yIndex];
		_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);
		yIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || endInserts)
	{
		_VirtualDom_pushPatch(patches, 8, rootIndex, {
			w: localPatches,
			x: inserts,
			y: endInserts
		});
	}
}



// CHANGES FROM KEYED DIFF


var _VirtualDom_POSTFIX = '_elmW6BL';


function _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		entry = {
			c: 0,
			z: vnode,
			r: yIndex,
			s: undefined
		};

		inserts.push({ r: yIndex, A: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.c === 1)
	{
		inserts.push({ r: yIndex, A: entry });

		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);
		entry.r = yIndex;
		entry.s.s = {
			w: subPatches,
			A: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);
}


function _VirtualDom_removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		var patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);

		changes[key] = {
			c: 1,
			z: vnode,
			r: index,
			s: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.c === 0)
	{
		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);

		_VirtualDom_pushPatch(localPatches, 9, index, {
			w: subPatches,
			A: entry
		});

		return;
	}

	// this key has already been removed or moved, a duplicate!
	_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);
}



// ADD DOM NODES
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)
{
	_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.r;

	while (index === low)
	{
		var patchType = patch.$;

		if (patchType === 1)
		{
			_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);
		}
		else if (patchType === 8)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var subPatches = patch.s.w;
			if (subPatches.length > 0)
			{
				_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 9)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var data = patch.s;
			if (data)
			{
				data.A.s = domNode;
				var subPatches = data.w;
				if (subPatches.length > 0)
				{
					_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.t = domNode;
			patch.u = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.r) > high)
		{
			return i;
		}
	}

	var tag = vNode.$;

	if (tag === 4)
	{
		var subNode = vNode.k;

		while (subNode.$ === 4)
		{
			subNode = subNode.k;
		}

		return _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);
	}

	// tag must be 1 or 2 at this point

	var vKids = vNode.e;
	var childNodes = domNode.childNodes;
	for (var j = 0; j < vKids.length; j++)
	{
		low++;
		var vKid = tag === 1 ? vKids[j] : vKids[j].b;
		var nextLow = low + (vKid.b || 0);
		if (low <= index && index <= nextLow)
		{
			i = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);
			if (!(patch = patches[i]) || (index = patch.r) > high)
			{
				return i;
			}
		}
		low = nextLow;
	}
	return i;
}



// APPLY PATCHES


function _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return _VirtualDom_applyPatchesHelp(rootDomNode, patches);
}

function _VirtualDom_applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.t
		var newNode = _VirtualDom_applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function _VirtualDom_applyPatch(domNode, patch)
{
	switch (patch.$)
	{
		case 0:
			return _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);

		case 4:
			_VirtualDom_applyFacts(domNode, patch.u, patch.s);
			return domNode;

		case 3:
			domNode.replaceData(0, domNode.length, patch.s);
			return domNode;

		case 1:
			return _VirtualDom_applyPatchesHelp(domNode, patch.s);

		case 2:
			if (domNode.elm_event_node_ref)
			{
				domNode.elm_event_node_ref.j = patch.s;
			}
			else
			{
				domNode.elm_event_node_ref = { j: patch.s, p: patch.u };
			}
			return domNode;

		case 6:
			var data = patch.s;
			for (var i = 0; i < data.i; i++)
			{
				domNode.removeChild(domNode.childNodes[data.v]);
			}
			return domNode;

		case 7:
			var data = patch.s;
			var kids = data.e;
			var i = data.v;
			var theEnd = domNode.childNodes[i];
			for (; i < kids.length; i++)
			{
				domNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);
			}
			return domNode;

		case 9:
			var data = patch.s;
			if (!data)
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.A;
			if (typeof entry.r !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);
			return domNode;

		case 8:
			return _VirtualDom_applyPatchReorder(domNode, patch);

		case 5:
			return patch.s(domNode);

		default:
			_Debug_crash(10); // 'Ran into an unknown patch!'
	}
}


function _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = _VirtualDom_render(vNode, eventNode);

	if (!newNode.elm_event_node_ref)
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function _VirtualDom_applyPatchReorder(domNode, patch)
{
	var data = patch.s;

	// remove end inserts
	var frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);

	// removals
	domNode = _VirtualDom_applyPatchesHelp(domNode, data.w);

	// inserts
	var inserts = data.x;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.A;
		var node = entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u);
		domNode.insertBefore(node, domNode.childNodes[insert.r]);
	}

	// add end inserts
	if (frag)
	{
		_VirtualDom_appendChild(domNode, frag);
	}

	return domNode;
}


function _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (!endInserts)
	{
		return;
	}

	var frag = _VirtualDom_doc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.A;
		_VirtualDom_appendChild(frag, entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u)
		);
	}
	return frag;
}


function _VirtualDom_virtualize(node)
{
	// TEXT NODES

	if (node.nodeType === 3)
	{
		return _VirtualDom_text(node.textContent);
	}


	// WEIRD NODES

	if (node.nodeType !== 1)
	{
		return _VirtualDom_text('');
	}


	// ELEMENT NODES

	var attrList = _List_Nil;
	var attrs = node.attributes;
	for (var i = attrs.length; i--; )
	{
		var attr = attrs[i];
		var name = attr.name;
		var value = attr.value;
		attrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );
	}

	var tag = node.tagName.toLowerCase();
	var kidList = _List_Nil;
	var kids = node.childNodes;

	for (var i = kids.length; i--; )
	{
		kidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);
	}
	return A3(_VirtualDom_node, tag, attrList, kidList);
}

function _VirtualDom_dekey(keyedNode)
{
	var keyedKids = keyedNode.e;
	var len = keyedKids.length;
	var kids = new Array(len);
	for (var i = 0; i < len; i++)
	{
		kids[i] = keyedKids[i].b;
	}

	return {
		$: 1,
		c: keyedNode.c,
		d: keyedNode.d,
		e: kids,
		f: keyedNode.f,
		b: keyedNode.b
	};
}




// ELEMENT


var _Debugger_element;

var _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.hO,
		impl.jp,
		impl.iO,
		function(sendToApp, initialModel) {
			var view = impl.js;
			/**/
			var domNode = args['node'];
			//*/
			/**_UNUSED/
			var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
			//*/
			var currNode = _VirtualDom_virtualize(domNode);

			return _Browser_makeAnimator(initialModel, function(model)
			{
				var nextNode = view(model);
				var patches = _VirtualDom_diff(currNode, nextNode);
				domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
				currNode = nextNode;
			});
		}
	);
});



// DOCUMENT


var _Debugger_document;

var _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.hO,
		impl.jp,
		impl.iO,
		function(sendToApp, initialModel) {
			var divertHrefToApp = impl.eC && impl.eC(sendToApp)
			var view = impl.js;
			var title = _VirtualDom_doc.title;
			var bodyNode = _VirtualDom_doc.body;
			var currNode = _VirtualDom_virtualize(bodyNode);
			return _Browser_makeAnimator(initialModel, function(model)
			{
				_VirtualDom_divertHrefToApp = divertHrefToApp;
				var doc = view(model);
				var nextNode = _VirtualDom_node('body')(_List_Nil)(doc.dr);
				var patches = _VirtualDom_diff(currNode, nextNode);
				bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
				currNode = nextNode;
				_VirtualDom_divertHrefToApp = 0;
				(title !== doc.i5) && (_VirtualDom_doc.title = title = doc.i5);
			});
		}
	);
});



// ANIMATION


var _Browser_cancelAnimationFrame =
	typeof cancelAnimationFrame !== 'undefined'
		? cancelAnimationFrame
		: function(id) { clearTimeout(id); };

var _Browser_requestAnimationFrame =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { return setTimeout(callback, 1000 / 60); };


function _Browser_makeAnimator(model, draw)
{
	draw(model);

	var state = 0;

	function updateIfNeeded()
	{
		state = state === 1
			? 0
			: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );
	}

	return function(nextModel, isSync)
	{
		model = nextModel;

		isSync
			? ( draw(model),
				state === 2 && (state = 1)
				)
			: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),
				state = 2
				);
	};
}



// APPLICATION


function _Browser_application(impl)
{
	var onUrlChange = impl.ic;
	var onUrlRequest = impl.id;
	var key = function() { key.a(onUrlChange(_Browser_getUrl())); };

	return _Browser_document({
		eC: function(sendToApp)
		{
			key.a = sendToApp;
			_Browser_window.addEventListener('popstate', key);
			_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);

			return F2(function(domNode, event)
			{
				if (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))
				{
					event.preventDefault();
					var href = domNode.href;
					var curr = _Browser_getUrl();
					var next = $elm$url$Url$fromString(href).a;
					sendToApp(onUrlRequest(
						(next
							&& curr.fR === next.fR
							&& curr.fo === next.fo
							&& curr.fO.a === next.fO.a
						)
							? $elm$browser$Browser$Internal(next)
							: $elm$browser$Browser$External(href)
					));
				}
			});
		},
		hO: function(flags)
		{
			return A3(impl.hO, flags, _Browser_getUrl(), key);
		},
		js: impl.js,
		jp: impl.jp,
		iO: impl.iO
	});
}

function _Browser_getUrl()
{
	return $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);
}

var _Browser_go = F2(function(key, n)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		n && history.go(n);
		key();
	}));
});

var _Browser_pushUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.pushState({}, '', url);
		key();
	}));
});

var _Browser_replaceUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.replaceState({}, '', url);
		key();
	}));
});



// GLOBAL EVENTS


var _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };
var _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;
var _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;

var _Browser_on = F3(function(node, eventName, sendToSelf)
{
	return _Scheduler_spawn(_Scheduler_binding(function(callback)
	{
		function handler(event)	{ _Scheduler_rawSpawn(sendToSelf(event)); }
		node.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });
		return function() { node.removeEventListener(eventName, handler); };
	}));
});

var _Browser_decodeEvent = F2(function(decoder, event)
{
	var result = _Json_runHelp(decoder, event);
	return $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;
});



// PAGE VISIBILITY


function _Browser_visibilityInfo()
{
	return (typeof _VirtualDom_doc.hidden !== 'undefined')
		? { hD: 'hidden', ha: 'visibilitychange' }
		:
	(typeof _VirtualDom_doc.mozHidden !== 'undefined')
		? { hD: 'mozHidden', ha: 'mozvisibilitychange' }
		:
	(typeof _VirtualDom_doc.msHidden !== 'undefined')
		? { hD: 'msHidden', ha: 'msvisibilitychange' }
		:
	(typeof _VirtualDom_doc.webkitHidden !== 'undefined')
		? { hD: 'webkitHidden', ha: 'webkitvisibilitychange' }
		: { hD: 'hidden', ha: 'visibilitychange' };
}



// ANIMATION FRAMES


function _Browser_rAF()
{
	return _Scheduler_binding(function(callback)
	{
		var id = _Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(Date.now()));
		});

		return function() {
			_Browser_cancelAnimationFrame(id);
		};
	});
}


function _Browser_now()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(Date.now()));
	});
}



// DOM STUFF


function _Browser_withNode(id, doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			var node = document.getElementById(id);
			callback(node
				? _Scheduler_succeed(doStuff(node))
				: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))
			);
		});
	});
}


function _Browser_withWindow(doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(doStuff()));
		});
	});
}


// FOCUS and BLUR


var _Browser_call = F2(function(functionName, id)
{
	return _Browser_withNode(id, function(node) {
		node[functionName]();
		return _Utils_Tuple0;
	});
});



// WINDOW VIEWPORT


function _Browser_getViewport()
{
	return {
		fZ: _Browser_getScene(),
		gf: {
			b: _Browser_window.pageXOffset,
			a: _Browser_window.pageYOffset,
			h: _Browser_doc.documentElement.clientWidth,
			U: _Browser_doc.documentElement.clientHeight
		}
	};
}

function _Browser_getScene()
{
	var body = _Browser_doc.body;
	var elem = _Browser_doc.documentElement;
	return {
		h: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),
		U: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)
	};
}

var _Browser_setViewport = F2(function(x, y)
{
	return _Browser_withWindow(function()
	{
		_Browser_window.scroll(x, y);
		return _Utils_Tuple0;
	});
});



// ELEMENT VIEWPORT


function _Browser_getViewportOf(id)
{
	return _Browser_withNode(id, function(node)
	{
		return {
			fZ: {
				h: node.scrollWidth,
				U: node.scrollHeight
			},
			gf: {
				b: node.scrollLeft,
				a: node.scrollTop,
				h: node.clientWidth,
				U: node.clientHeight
			}
		};
	});
}


var _Browser_setViewportOf = F3(function(id, x, y)
{
	return _Browser_withNode(id, function(node)
	{
		node.scrollLeft = x;
		node.scrollTop = y;
		return _Utils_Tuple0;
	});
});



// ELEMENT


function _Browser_getElement(id)
{
	return _Browser_withNode(id, function(node)
	{
		var rect = node.getBoundingClientRect();
		var x = _Browser_window.pageXOffset;
		var y = _Browser_window.pageYOffset;
		return {
			fZ: _Browser_getScene(),
			gf: {
				b: x,
				a: y,
				h: _Browser_doc.documentElement.clientWidth,
				U: _Browser_doc.documentElement.clientHeight
			},
			hr: {
				b: x + rect.left,
				a: y + rect.top,
				h: rect.width,
				U: rect.height
			}
		};
	});
}



// LOAD and RELOAD


function _Browser_reload(skipCache)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		_VirtualDom_doc.location.reload(skipCache);
	}));
}

function _Browser_load(url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		try
		{
			_Browser_window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			_VirtualDom_doc.location.reload(false);
		}
	}));
}


function _Url_percentEncode(string)
{
	return encodeURIComponent(string);
}

function _Url_percentDecode(string)
{
	try
	{
		return $elm$core$Maybe$Just(decodeURIComponent(string));
	}
	catch (e)
	{
		return $elm$core$Maybe$Nothing;
	}
}


var _Bitwise_and = F2(function(a, b)
{
	return a & b;
});

var _Bitwise_or = F2(function(a, b)
{
	return a | b;
});

var _Bitwise_xor = F2(function(a, b)
{
	return a ^ b;
});

function _Bitwise_complement(a)
{
	return ~a;
};

var _Bitwise_shiftLeftBy = F2(function(offset, a)
{
	return a << offset;
});

var _Bitwise_shiftRightBy = F2(function(offset, a)
{
	return a >> offset;
});

var _Bitwise_shiftRightZfBy = F2(function(offset, a)
{
	return a >>> offset;
});




// STRINGS


var _Parser_isSubString = F5(function(smallString, offset, row, col, bigString)
{
	var smallLength = smallString.length;
	var isGood = offset + smallLength <= bigString.length;

	for (var i = 0; isGood && i < smallLength; )
	{
		var code = bigString.charCodeAt(offset);
		isGood =
			smallString[i++] === bigString[offset++]
			&& (
				code === 0x000A /* \n */
					? ( row++, col=1 )
					: ( col++, (code & 0xF800) === 0xD800 ? smallString[i++] === bigString[offset++] : 1 )
			)
	}

	return _Utils_Tuple3(isGood ? offset : -1, row, col);
});



// CHARS


var _Parser_isSubChar = F3(function(predicate, offset, string)
{
	return (
		string.length <= offset
			? -1
			:
		(string.charCodeAt(offset) & 0xF800) === 0xD800
			? (predicate(_Utils_chr(string.substr(offset, 2))) ? offset + 2 : -1)
			:
		(predicate(_Utils_chr(string[offset]))
			? ((string[offset] === '\n') ? -2 : (offset + 1))
			: -1
		)
	);
});


var _Parser_isAsciiCode = F3(function(code, offset, string)
{
	return string.charCodeAt(offset) === code;
});



// NUMBERS


var _Parser_chompBase10 = F2(function(offset, string)
{
	for (; offset < string.length; offset++)
	{
		var code = string.charCodeAt(offset);
		if (code < 0x30 || 0x39 < code)
		{
			return offset;
		}
	}
	return offset;
});


var _Parser_consumeBase = F3(function(base, offset, string)
{
	for (var total = 0; offset < string.length; offset++)
	{
		var digit = string.charCodeAt(offset) - 0x30;
		if (digit < 0 || base <= digit) break;
		total = base * total + digit;
	}
	return _Utils_Tuple2(offset, total);
});


var _Parser_consumeBase16 = F2(function(offset, string)
{
	for (var total = 0; offset < string.length; offset++)
	{
		var code = string.charCodeAt(offset);
		if (0x30 <= code && code <= 0x39)
		{
			total = 16 * total + code - 0x30;
		}
		else if (0x41 <= code && code <= 0x46)
		{
			total = 16 * total + code - 55;
		}
		else if (0x61 <= code && code <= 0x66)
		{
			total = 16 * total + code - 87;
		}
		else
		{
			break;
		}
	}
	return _Utils_Tuple2(offset, total);
});



// FIND STRING


var _Parser_findSubString = F5(function(smallString, offset, row, col, bigString)
{
	var newOffset = bigString.indexOf(smallString, offset);
	var target = newOffset < 0 ? bigString.length : newOffset + smallString.length;

	while (offset < target)
	{
		var code = bigString.charCodeAt(offset++);
		code === 0x000A /* \n */
			? ( col=1, row++ )
			: ( col++, (code & 0xF800) === 0xD800 && offset++ )
	}

	return _Utils_Tuple3(newOffset, row, col);
});
var $author$project$Main$ChangedUrl = function (a) {
	return {$: 0, a: a};
};
var $author$project$Main$ClickedLink = function (a) {
	return {$: 1, a: a};
};
var $elm$core$Basics$EQ = 1;
var $elm$core$Basics$GT = 2;
var $elm$core$Basics$LT = 0;
var $elm$core$List$cons = _List_cons;
var $elm$core$Dict$foldr = F3(
	function (func, acc, t) {
		foldr:
		while (true) {
			if (t.$ === -2) {
				return acc;
			} else {
				var key = t.b;
				var value = t.c;
				var left = t.d;
				var right = t.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldr, func, acc, right)),
					$temp$t = left;
				func = $temp$func;
				acc = $temp$acc;
				t = $temp$t;
				continue foldr;
			}
		}
	});
var $elm$core$Dict$toList = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(key, value),
					list);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Dict$keys = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return A2($elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Set$toList = function (_v0) {
	var dict = _v0;
	return $elm$core$Dict$keys(dict);
};
var $elm$core$Elm$JsArray$foldr = _JsArray_foldr;
var $elm$core$Array$foldr = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (!node.$) {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldr, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldr,
			helper,
			A3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),
			tree);
	});
var $elm$core$Array$toList = function (array) {
	return A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);
};
var $elm$core$Result$Err = function (a) {
	return {$: 1, a: a};
};
var $elm$json$Json$Decode$Failure = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $elm$json$Json$Decode$Field = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$json$Json$Decode$Index = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$core$Result$Ok = function (a) {
	return {$: 0, a: a};
};
var $elm$json$Json$Decode$OneOf = function (a) {
	return {$: 2, a: a};
};
var $elm$core$Basics$False = 1;
var $elm$core$Basics$add = _Basics_add;
var $elm$core$Maybe$Just = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Maybe$Nothing = {$: 1};
var $elm$core$String$all = _String_all;
var $elm$core$Basics$and = _Basics_and;
var $elm$core$Basics$append = _Utils_append;
var $elm$json$Json$Encode$encode = _Json_encode;
var $elm$core$String$fromInt = _String_fromNumber;
var $elm$core$String$join = F2(
	function (sep, chunks) {
		return A2(
			_String_join,
			sep,
			_List_toArray(chunks));
	});
var $elm$core$String$split = F2(
	function (sep, string) {
		return _List_fromArray(
			A2(_String_split, sep, string));
	});
var $elm$json$Json$Decode$indent = function (str) {
	return A2(
		$elm$core$String$join,
		'\n    ',
		A2($elm$core$String$split, '\n', str));
};
var $elm$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			if (!list.b) {
				return acc;
			} else {
				var x = list.a;
				var xs = list.b;
				var $temp$func = func,
					$temp$acc = A2(func, x, acc),
					$temp$list = xs;
				func = $temp$func;
				acc = $temp$acc;
				list = $temp$list;
				continue foldl;
			}
		}
	});
var $elm$core$List$length = function (xs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, i) {
				return i + 1;
			}),
		0,
		xs);
};
var $elm$core$List$map2 = _List_map2;
var $elm$core$Basics$le = _Utils_le;
var $elm$core$Basics$sub = _Basics_sub;
var $elm$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(lo, hi) < 1) {
				var $temp$lo = lo,
					$temp$hi = hi - 1,
					$temp$list = A2($elm$core$List$cons, hi, list);
				lo = $temp$lo;
				hi = $temp$hi;
				list = $temp$list;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var $elm$core$List$range = F2(
	function (lo, hi) {
		return A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);
	});
var $elm$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$map2,
			f,
			A2(
				$elm$core$List$range,
				0,
				$elm$core$List$length(xs) - 1),
			xs);
	});
var $elm$core$Char$toCode = _Char_toCode;
var $elm$core$Char$isLower = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (97 <= code) && (code <= 122);
};
var $elm$core$Char$isUpper = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 90) && (65 <= code);
};
var $elm$core$Basics$or = _Basics_or;
var $elm$core$Char$isAlpha = function (_char) {
	return $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);
};
var $elm$core$Char$isDigit = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 57) && (48 <= code);
};
var $elm$core$Char$isAlphaNum = function (_char) {
	return $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));
};
var $elm$core$List$reverse = function (list) {
	return A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);
};
var $elm$core$String$uncons = _String_uncons;
var $elm$json$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(
			$elm$json$Json$Decode$errorToString(error))));
	});
var $elm$json$Json$Decode$errorToString = function (error) {
	return A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
};
var $elm$json$Json$Decode$errorToStringHelp = F2(
	function (error, context) {
		errorToStringHelp:
		while (true) {
			switch (error.$) {
				case 0:
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _v1 = $elm$core$String$uncons(f);
						if (_v1.$ === 1) {
							return false;
						} else {
							var _v2 = _v1.a;
							var _char = _v2.a;
							var rest = _v2.b;
							return $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 1:
					var i = error.a;
					var err = error.b;
					var indexName = '[' + ($elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 2:
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									$elm$core$String$join,
									'',
									$elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringHelp;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										$elm$core$String$join,
										'',
										$elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(
								$elm$core$List$length(errors)) + ' ways:'));
							return A2(
								$elm$core$String$join,
								'\n\n',
								A2(
									$elm$core$List$cons,
									introduction,
									A2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var json = error.b;
					var introduction = function () {
						if (!context.b) {
							return 'Problem with the given value:\n\n';
						} else {
							return 'Problem with the value at json' + (A2(
								$elm$core$String$join,
								'',
								$elm$core$List$reverse(context)) + ':\n\n    ');
						}
					}();
					return introduction + ($elm$json$Json$Decode$indent(
						A2($elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
			}
		}
	});
var $elm$core$Array$branchFactor = 32;
var $elm$core$Array$Array_elm_builtin = F4(
	function (a, b, c, d) {
		return {$: 0, a: a, b: b, c: c, d: d};
	});
var $elm$core$Elm$JsArray$empty = _JsArray_empty;
var $elm$core$Basics$ceiling = _Basics_ceiling;
var $elm$core$Basics$fdiv = _Basics_fdiv;
var $elm$core$Basics$logBase = F2(
	function (base, number) {
		return _Basics_log(number) / _Basics_log(base);
	});
var $elm$core$Basics$toFloat = _Basics_toFloat;
var $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(
	A2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));
var $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);
var $elm$core$Elm$JsArray$initialize = _JsArray_initialize;
var $elm$core$Array$Leaf = function (a) {
	return {$: 1, a: a};
};
var $elm$core$Basics$apL = F2(
	function (f, x) {
		return f(x);
	});
var $elm$core$Basics$apR = F2(
	function (x, f) {
		return f(x);
	});
var $elm$core$Basics$eq = _Utils_equal;
var $elm$core$Basics$floor = _Basics_floor;
var $elm$core$Elm$JsArray$length = _JsArray_length;
var $elm$core$Basics$gt = _Utils_gt;
var $elm$core$Basics$max = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) > 0) ? x : y;
	});
var $elm$core$Basics$mul = _Basics_mul;
var $elm$core$Array$SubTree = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
var $elm$core$Array$compressNodes = F2(
	function (nodes, acc) {
		compressNodes:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);
			var node = _v0.a;
			var remainingNodes = _v0.b;
			var newAcc = A2(
				$elm$core$List$cons,
				$elm$core$Array$SubTree(node),
				acc);
			if (!remainingNodes.b) {
				return $elm$core$List$reverse(newAcc);
			} else {
				var $temp$nodes = remainingNodes,
					$temp$acc = newAcc;
				nodes = $temp$nodes;
				acc = $temp$acc;
				continue compressNodes;
			}
		}
	});
var $elm$core$Tuple$first = function (_v0) {
	var x = _v0.a;
	return x;
};
var $elm$core$Array$treeFromBuilder = F2(
	function (nodeList, nodeListSize) {
		treeFromBuilder:
		while (true) {
			var newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);
			if (newNodeSize === 1) {
				return A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;
			} else {
				var $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),
					$temp$nodeListSize = newNodeSize;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue treeFromBuilder;
			}
		}
	});
var $elm$core$Array$builderToArray = F2(
	function (reverseNodeList, builder) {
		if (!builder.s) {
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.y),
				$elm$core$Array$shiftStep,
				$elm$core$Elm$JsArray$empty,
				builder.y);
		} else {
			var treeLen = builder.s * $elm$core$Array$branchFactor;
			var depth = $elm$core$Basics$floor(
				A2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));
			var correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.z) : builder.z;
			var tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.s);
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.y) + treeLen,
				A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),
				tree,
				builder.y);
		}
	});
var $elm$core$Basics$idiv = _Basics_idiv;
var $elm$core$Basics$lt = _Utils_lt;
var $elm$core$Array$initializeHelp = F5(
	function (fn, fromIndex, len, nodeList, tail) {
		initializeHelp:
		while (true) {
			if (fromIndex < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					false,
					{z: nodeList, s: (len / $elm$core$Array$branchFactor) | 0, y: tail});
			} else {
				var leaf = $elm$core$Array$Leaf(
					A3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));
				var $temp$fn = fn,
					$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,
					$temp$len = len,
					$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),
					$temp$tail = tail;
				fn = $temp$fn;
				fromIndex = $temp$fromIndex;
				len = $temp$len;
				nodeList = $temp$nodeList;
				tail = $temp$tail;
				continue initializeHelp;
			}
		}
	});
var $elm$core$Basics$remainderBy = _Basics_remainderBy;
var $elm$core$Array$initialize = F2(
	function (len, fn) {
		if (len <= 0) {
			return $elm$core$Array$empty;
		} else {
			var tailLen = len % $elm$core$Array$branchFactor;
			var tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
			var initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;
			return A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
		}
	});
var $elm$core$Basics$True = 0;
var $elm$core$Result$isOk = function (result) {
	if (!result.$) {
		return true;
	} else {
		return false;
	}
};
var $elm$json$Json$Decode$map = _Json_map1;
var $elm$json$Json$Decode$map2 = _Json_map2;
var $elm$json$Json$Decode$succeed = _Json_succeed;
var $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {
	switch (handler.$) {
		case 0:
			return 0;
		case 1:
			return 1;
		case 2:
			return 2;
		default:
			return 3;
	}
};
var $elm$browser$Browser$External = function (a) {
	return {$: 1, a: a};
};
var $elm$browser$Browser$Internal = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Basics$identity = function (x) {
	return x;
};
var $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;
var $elm$url$Url$Http = 0;
var $elm$url$Url$Https = 1;
var $elm$url$Url$Url = F6(
	function (protocol, host, port_, path, query, fragment) {
		return {fg: fragment, fo: host, fL: path, fO: port_, fR: protocol, fU: query};
	});
var $elm$core$String$contains = _String_contains;
var $elm$core$String$length = _String_length;
var $elm$core$String$slice = _String_slice;
var $elm$core$String$dropLeft = F2(
	function (n, string) {
		return (n < 1) ? string : A3(
			$elm$core$String$slice,
			n,
			$elm$core$String$length(string),
			string);
	});
var $elm$core$String$indexes = _String_indexes;
var $elm$core$String$isEmpty = function (string) {
	return string === '';
};
var $elm$core$String$left = F2(
	function (n, string) {
		return (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);
	});
var $elm$core$String$toInt = _String_toInt;
var $elm$url$Url$chompBeforePath = F5(
	function (protocol, path, params, frag, str) {
		if ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, ':', str);
			if (!_v0.b) {
				return $elm$core$Maybe$Just(
					A6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));
			} else {
				if (!_v0.b.b) {
					var i = _v0.a;
					var _v1 = $elm$core$String$toInt(
						A2($elm$core$String$dropLeft, i + 1, str));
					if (_v1.$ === 1) {
						return $elm$core$Maybe$Nothing;
					} else {
						var port_ = _v1;
						return $elm$core$Maybe$Just(
							A6(
								$elm$url$Url$Url,
								protocol,
								A2($elm$core$String$left, i, str),
								port_,
								path,
								params,
								frag));
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		}
	});
var $elm$url$Url$chompBeforeQuery = F4(
	function (protocol, params, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '/', str);
			if (!_v0.b) {
				return A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);
			} else {
				var i = _v0.a;
				return A5(
					$elm$url$Url$chompBeforePath,
					protocol,
					A2($elm$core$String$dropLeft, i, str),
					params,
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompBeforeFragment = F3(
	function (protocol, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '?', str);
			if (!_v0.b) {
				return A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);
			} else {
				var i = _v0.a;
				return A4(
					$elm$url$Url$chompBeforeQuery,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompAfterProtocol = F2(
	function (protocol, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '#', str);
			if (!_v0.b) {
				return A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);
			} else {
				var i = _v0.a;
				return A3(
					$elm$url$Url$chompBeforeFragment,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$core$String$startsWith = _String_startsWith;
var $elm$url$Url$fromString = function (str) {
	return A2($elm$core$String$startsWith, 'http://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		0,
		A2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		1,
		A2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);
};
var $elm$core$Basics$never = function (_v0) {
	never:
	while (true) {
		var nvr = _v0;
		var $temp$_v0 = nvr;
		_v0 = $temp$_v0;
		continue never;
	}
};
var $elm$core$Task$Perform = $elm$core$Basics$identity;
var $elm$core$Task$succeed = _Scheduler_succeed;
var $elm$core$Task$init = $elm$core$Task$succeed(0);
var $elm$core$List$foldrHelper = F4(
	function (fn, acc, ctr, ls) {
		if (!ls.b) {
			return acc;
		} else {
			var a = ls.a;
			var r1 = ls.b;
			if (!r1.b) {
				return A2(fn, a, acc);
			} else {
				var b = r1.a;
				var r2 = r1.b;
				if (!r2.b) {
					return A2(
						fn,
						a,
						A2(fn, b, acc));
				} else {
					var c = r2.a;
					var r3 = r2.b;
					if (!r3.b) {
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(fn, c, acc)));
					} else {
						var d = r3.a;
						var r4 = r3.b;
						var res = (ctr > 500) ? A3(
							$elm$core$List$foldl,
							fn,
							acc,
							$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(
									fn,
									c,
									A2(fn, d, res))));
					}
				}
			}
		}
	});
var $elm$core$List$foldr = F3(
	function (fn, acc, ls) {
		return A4($elm$core$List$foldrHelper, fn, acc, 0, ls);
	});
var $elm$core$List$map = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A2(
						$elm$core$List$cons,
						f(x),
						acc);
				}),
			_List_Nil,
			xs);
	});
var $elm$core$Task$andThen = _Scheduler_andThen;
var $elm$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return $elm$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var $elm$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return A2(
					$elm$core$Task$andThen,
					function (b) {
						return $elm$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var $elm$core$Task$sequence = function (tasks) {
	return A3(
		$elm$core$List$foldr,
		$elm$core$Task$map2($elm$core$List$cons),
		$elm$core$Task$succeed(_List_Nil),
		tasks);
};
var $elm$core$Platform$sendToApp = _Platform_sendToApp;
var $elm$core$Task$spawnCmd = F2(
	function (router, _v0) {
		var task = _v0;
		return _Scheduler_spawn(
			A2(
				$elm$core$Task$andThen,
				$elm$core$Platform$sendToApp(router),
				task));
	});
var $elm$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			$elm$core$Task$map,
			function (_v0) {
				return 0;
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Task$spawnCmd(router),
					commands)));
	});
var $elm$core$Task$onSelfMsg = F3(
	function (_v0, _v1, _v2) {
		return $elm$core$Task$succeed(0);
	});
var $elm$core$Task$cmdMap = F2(
	function (tagger, _v0) {
		var task = _v0;
		return A2($elm$core$Task$map, tagger, task);
	});
_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);
var $elm$core$Task$command = _Platform_leaf('Task');
var $elm$core$Task$perform = F2(
	function (toMessage, task) {
		return $elm$core$Task$command(
			A2($elm$core$Task$map, toMessage, task));
	});
var $elm$browser$Browser$application = _Browser_application;
var $author$project$Main$Model = F3(
	function (navigation, session, page) {
		return {E: navigation, aH: page, am: session};
	});
var $author$project$Main$Redirect = {$: 0};
var $author$project$Main$Page_Administration = function (a) {
	return {$: 3, a: a};
};
var $author$project$Main$Page_Administration_Msg = function (a) {
	return {$: 3, a: a};
};
var $author$project$Main$Page_Documentation = function (a) {
	return {$: 4, a: a};
};
var $author$project$Main$Page_Documentation_Msg = function (a) {
	return {$: 4, a: a};
};
var $author$project$Main$Page_Example = function (a) {
	return {$: 6, a: a};
};
var $author$project$Main$Page_Example_Msg = function (a) {
	return {$: 6, a: a};
};
var $author$project$Main$Page_GettingStarted = function (a) {
	return {$: 7, a: a};
};
var $author$project$Main$Page_GettingStarted_Msg = function (a) {
	return {$: 7, a: a};
};
var $author$project$Main$Page_Home = function (a) {
	return {$: 2, a: a};
};
var $author$project$Main$Page_Home_Msg = function (a) {
	return {$: 2, a: a};
};
var $author$project$Main$Page_Section = function (a) {
	return {$: 5, a: a};
};
var $author$project$Main$Page_Section_Msg = function (a) {
	return {$: 5, a: a};
};
var $author$project$Page$Administration$exit = F2(
	function (model, session) {
		return session;
	});
var $author$project$Page$Documentation$exit = F2(
	function (model, session) {
		return session;
	});
var $author$project$Page$Example$exit = F2(
	function (model, session) {
		return session;
	});
var $author$project$Page$GettingStarted$exit = F2(
	function (model, session) {
		return session;
	});
var $author$project$Page$Home$exit = F2(
	function (model, session) {
		return _Utils_update(
			session,
			{a$: model.a$});
	});
var $author$project$Page$Section$exit = F2(
	function (model, session) {
		return session;
	});
var $author$project$Main$exit = function (model) {
	var _v0 = model.aH;
	switch (_v0.$) {
		case 0:
			return model.am;
		case 1:
			return model.am;
		case 2:
			var subModel = _v0.a;
			return A2($author$project$Page$Home$exit, subModel, model.am);
		case 3:
			var subModel = _v0.a;
			return A2($author$project$Page$Administration$exit, subModel, model.am);
		case 4:
			var subModel = _v0.a;
			return A2($author$project$Page$Documentation$exit, subModel, model.am);
		case 5:
			var subModel = _v0.a;
			return A2($author$project$Page$Section$exit, subModel, model.am);
		case 6:
			var subModel = _v0.a;
			return A2($author$project$Page$Example$exit, subModel, model.am);
		default:
			var subModel = _v0.a;
			return A2($author$project$Page$GettingStarted$exit, subModel, model.am);
	}
};
var $author$project$Ui$Menu$init = {aT: false};
var $elm$core$Platform$Cmd$batch = _Platform_batch;
var $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);
var $author$project$Page$Administration$init = F3(
	function (key, session, params) {
		return _Utils_Tuple2(
			{c4: $author$project$Ui$Menu$init, a$: session.a$},
			$elm$core$Platform$Cmd$none);
	});
var $author$project$Ui$Thumbnail$Group = F3(
	function (title, order, ids) {
		return {dJ: ids, $8: order, i5: title};
	});
var $author$project$Examples$BarCharts__BarLabels = 5;
var $author$project$Examples$BarCharts__Basic = 22;
var $author$project$Examples$BarCharts__BinLabels = 16;
var $author$project$Examples$BarCharts__BinLabelsAdvanced = 8;
var $author$project$Examples$BarCharts__Borders = 19;
var $author$project$Examples$BarCharts__Color = 12;
var $author$project$Examples$BarCharts__Corners = 14;
var $author$project$Examples$BarCharts__DataDependent = 11;
var $author$project$Examples$BarCharts__Gradient = 0;
var $author$project$Examples$BarCharts__Highlight = 10;
var $author$project$Examples$BarCharts__Histogram = 7;
var $author$project$Examples$BarCharts__Legends = 21;
var $author$project$Examples$BarCharts__Margin = 18;
var $author$project$Examples$BarCharts__Opacity = 20;
var $author$project$Examples$BarCharts__Pattern = 6;
var $author$project$Examples$BarCharts__Spacing = 9;
var $author$project$Examples$BarCharts__Stacked = 17;
var $author$project$Examples$BarCharts__Title = 2;
var $author$project$Examples$BarCharts__Tooltip = 4;
var $author$project$Examples$BarCharts__TooltipBin = 13;
var $author$project$Examples$BarCharts__TooltipStack = 3;
var $author$project$Examples$BarCharts__Ungroup = 15;
var $author$project$Examples$BarCharts__VariableWidth = 1;
var $author$project$Examples$Frame__Amount = 39;
var $author$project$Examples$Frame__Arbitrary = 47;
var $author$project$Examples$Frame__AxisLength = 46;
var $author$project$Examples$Frame__Background = 30;
var $author$project$Examples$Frame__Basic = 49;
var $author$project$Examples$Frame__Color = 38;
var $author$project$Examples$Frame__Coordinates = 25;
var $author$project$Examples$Frame__CustomElements = 28;
var $author$project$Examples$Frame__CustomFormat = 45;
var $author$project$Examples$Frame__CustomLabels = 41;
var $author$project$Examples$Frame__Dimensions = 27;
var $author$project$Examples$Frame__DotGrid = 44;
var $author$project$Examples$Frame__Ellipsis = 37;
var $author$project$Examples$Frame__GridColor = 35;
var $author$project$Examples$Frame__GridFilter = 26;
var $author$project$Examples$Frame__LabelWithLine = 43;
var $author$project$Examples$Frame__Legends = 48;
var $author$project$Examples$Frame__Lines = 23;
var $author$project$Examples$Frame__Margin = 42;
var $author$project$Examples$Frame__NoArrow = 29;
var $author$project$Examples$Frame__Offset = 36;
var $author$project$Examples$Frame__OnlyInts = 34;
var $author$project$Examples$Frame__Padding = 32;
var $author$project$Examples$Frame__Position = 24;
var $author$project$Examples$Frame__Rect = 31;
var $author$project$Examples$Frame__Times = 33;
var $author$project$Examples$Frame__Titles = 40;
var $author$project$Examples$Frontpage__BasicArea = 91;
var $author$project$Examples$Frontpage__BasicBar = 90;
var $author$project$Examples$Frontpage__BasicBubble = 88;
var $author$project$Examples$Frontpage__BasicLine = 93;
var $author$project$Examples$Frontpage__BasicNavigation = 89;
var $author$project$Examples$Frontpage__BasicScatter = 94;
var $author$project$Examples$Frontpage__Concise = 92;
var $author$project$Examples$Frontpage__Familiar = 95;
var $author$project$Examples$Interactivity__Background = 61;
var $author$project$Examples$Interactivity__BasicArea = 63;
var $author$project$Examples$Interactivity__BasicBar = 62;
var $author$project$Examples$Interactivity__BasicBin = 55;
var $author$project$Examples$Interactivity__BasicLine = 67;
var $author$project$Examples$Interactivity__BasicStack = 56;
var $author$project$Examples$Interactivity__Border = 53;
var $author$project$Examples$Interactivity__ChangeContent = 50;
var $author$project$Examples$Interactivity__ChangeDot = 52;
var $author$project$Examples$Interactivity__ChangeName = 58;
var $author$project$Examples$Interactivity__ChangeUnit = 70;
var $author$project$Examples$Interactivity__Coordinates = 57;
var $author$project$Examples$Interactivity__Direction = 51;
var $author$project$Examples$Interactivity__DoubleSearch = 69;
var $author$project$Examples$Interactivity__FilterSearch = 60;
var $author$project$Examples$Interactivity__Focal = 71;
var $author$project$Examples$Interactivity__Multiple = 66;
var $author$project$Examples$Interactivity__NoArrow = 59;
var $author$project$Examples$Interactivity__Offset = 68;
var $author$project$Examples$Interactivity__TrickyTooltip = 65;
var $author$project$Examples$Interactivity__Zoom = 54;
var $author$project$Examples$Interactivity__ZoomAlt = 64;
var $author$project$Examples$LineCharts__Area = 72;
var $author$project$Examples$LineCharts__Basic = 87;
var $author$project$Examples$LineCharts__Color = 81;
var $author$project$Examples$LineCharts__Dashed = 80;
var $author$project$Examples$LineCharts__Dots = 79;
var $author$project$Examples$LineCharts__Gradient = 73;
var $author$project$Examples$LineCharts__Labels = 84;
var $author$project$Examples$LineCharts__Legends = 86;
var $author$project$Examples$LineCharts__Missing = 85;
var $author$project$Examples$LineCharts__Montone = 77;
var $author$project$Examples$LineCharts__Pattern = 78;
var $author$project$Examples$LineCharts__Stacked = 83;
var $author$project$Examples$LineCharts__Stepped = 82;
var $author$project$Examples$LineCharts__Tooltip = 76;
var $author$project$Examples$LineCharts__TooltipStack = 75;
var $author$project$Examples$LineCharts__Width = 74;
var $author$project$Examples$ScatterCharts__Basic = 106;
var $author$project$Examples$ScatterCharts__Borders = 101;
var $author$project$Examples$ScatterCharts__Colors = 96;
var $author$project$Examples$ScatterCharts__DataDependent = 100;
var $author$project$Examples$ScatterCharts__Highlight = 99;
var $author$project$Examples$ScatterCharts__Labels = 102;
var $author$project$Examples$ScatterCharts__Legends = 105;
var $author$project$Examples$ScatterCharts__Opacity = 103;
var $author$project$Examples$ScatterCharts__Shapes = 97;
var $author$project$Examples$ScatterCharts__Sizes = 104;
var $author$project$Examples$ScatterCharts__Tooltip = 98;
var $author$project$Examples$all = _List_fromArray(
	[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106]);
var $elm$core$Dict$RBEmpty_elm_builtin = {$: -2};
var $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;
var $author$project$Examples$BarCharts$BarLabels$meta = {g8: 'Bar charts', g9: 1, ho: 'Add custom bar labels.', dO: 'Labels for bars', $8: 15};
var $author$project$Examples$BarCharts$Basic$meta = {g8: 'Bar charts', g9: 1, ho: 'Make a basic bar chart.', dO: 'Basic', $8: 1};
var $author$project$Examples$BarCharts$BinLabels$meta = {g8: 'Bar charts', g9: 1, ho: 'Add bin labels.', dO: 'Labels for bins', $8: 15};
var $author$project$Examples$BarCharts$BinLabelsAdvanced$meta = {g8: 'Bar charts', g9: 1, ho: 'Add custom bin labels.', dO: 'Advanced labels for bins', $8: 15};
var $author$project$Examples$BarCharts$Borders$meta = {g8: 'Bar charts', g9: 1, ho: 'Add border to bar.', dO: 'Borders', $8: 8};
var $author$project$Examples$BarCharts$Color$meta = {g8: 'Bar charts', g9: 1, ho: 'Change bar color.', dO: 'Color', $8: 7};
var $author$project$Examples$BarCharts$Corners$meta = {g8: 'Bar charts', g9: 1, ho: 'Add rounded corners to bar.', dO: 'Corners', $8: 9};
var $author$project$Examples$BarCharts$DataDependent$meta = {g8: 'Bar charts', g9: 1, ho: 'Change bar based on data.', dO: 'Data dependent styling', $8: 12};
var $author$project$Examples$BarCharts$Gradient$meta = {g8: 'Bar charts', g9: 1, ho: 'Add gradient to bar.', dO: 'Gradient', $8: 10};
var $author$project$Examples$BarCharts$Highlight$meta = {g8: 'Bar charts', g9: 1, ho: 'Add highlight to bar.', dO: 'Highlight', $8: 20};
var $author$project$Examples$BarCharts$Histogram$meta = {g8: 'Bar charts', g9: 1, ho: 'Make a histogram (control x value).', dO: 'Histogram', $8: 2};
var $author$project$Examples$BarCharts$Legends$meta = {g8: 'Bar charts', g9: 1, ho: 'Add legends to bar chart.', dO: 'Legends', $8: 16};
var $author$project$Examples$BarCharts$Margin$meta = {g8: 'Bar charts', g9: 1, ho: 'Change margins around bin.', dO: 'Margin', $8: 6};
var $author$project$Examples$BarCharts$Opacity$meta = {g8: 'Bar charts', g9: 1, ho: 'Change opacity of bar.', dO: 'Opacity', $8: 10};
var $author$project$Examples$BarCharts$Pattern$meta = {g8: 'Bar charts', g9: 1, ho: 'Change pattern of bar.', dO: 'Pattern', $8: 11};
var $author$project$Examples$BarCharts$Spacing$meta = {g8: 'Bar charts', g9: 1, ho: 'Remove or add spacing between bars.', dO: 'Spacing', $8: 5};
var $author$project$Examples$BarCharts$Stacked$meta = {g8: 'Bar charts', g9: 1, ho: 'Stack bars.', dO: 'Stacked', $8: 3};
var $author$project$Examples$BarCharts$Title$meta = {g8: 'Bar charts', g9: 1, ho: 'Add labels to bar chart.', dO: 'Titles', $8: 16};
var $author$project$Examples$BarCharts$Tooltip$meta = {g8: 'Bar charts', g9: 1, ho: 'Add a basic tooltip for nearest bar.', dO: 'Tooltip', $8: 12};
var $author$project$Examples$BarCharts$TooltipBin$meta = {g8: 'Bar charts', g9: 1, ho: 'Add a tooltip for nearest bin.', dO: 'Bin tooltip', $8: 13};
var $author$project$Examples$BarCharts$TooltipStack$meta = {g8: 'Bar charts', g9: 1, ho: 'Add a tooltip for nearest stack.', dO: 'Stack tooltip', $8: 14};
var $author$project$Examples$BarCharts$Ungroup$meta = {g8: 'Bar charts', g9: 1, ho: 'Have bars overlap rather than be side-by-side.', dO: 'Ungroup', $8: 4};
var $author$project$Examples$BarCharts$VariableWidth$meta = {g8: 'Bar charts', g9: 1, ho: 'Bars with varying widths.', dO: 'Variable width', $8: 2};
var $author$project$Examples$Frame$Amount$meta = {g8: 'Navigation', g9: 4, ho: 'Change the number of labels or ticks.', dO: 'Amount of labels/ticks', $8: 6};
var $author$project$Examples$Frame$Arbitrary$meta = {g8: 'Navigation', g9: 4, ho: 'Add custom SVG/HTML to your chart.', dO: 'Arbitrary SVG and HTML', $8: 35};
var $author$project$Examples$Frame$AxisLength$meta = {g8: 'Navigation', g9: 4, ho: 'Change the length of your axis line.', dO: 'Adjust axis line', $8: 12};
var $author$project$Examples$Frame$Background$meta = {g8: 'Navigation', g9: 4, ho: 'Color the frame.', dO: 'Background', $8: 18};
var $author$project$Examples$Frame$Basic$meta = {g8: 'Navigation', g9: 4, ho: 'Add grid, axes, ticks, and labels.', dO: 'Basic', $8: 1};
var $author$project$Examples$Frame$Color$meta = {g8: 'Navigation', g9: 4, ho: 'Change color of items.', dO: 'Color', $8: 2};
var $author$project$Examples$Frame$Coordinates$meta = {g8: 'Navigation', g9: 4, ho: 'Using the low level coordinate system.', dO: 'Coordinates', $8: 39};
var $author$project$Examples$Frame$CustomElements$meta = {g8: 'Navigation', g9: 4, ho: 'Add custom tracked elements', dO: 'Custom chart elements', $8: 100};
var $author$project$Examples$Frame$CustomFormat$meta = {g8: 'Navigation', g9: 4, ho: 'Change how your labels are formatted.', dO: 'Custom formatting', $8: 9};
var $author$project$Examples$Frame$CustomLabels$meta = {g8: 'Navigation', g9: 4, ho: 'Control labels entirely.', dO: 'Custom labels', $8: 9};
var $author$project$Examples$Frame$Dimensions$meta = {g8: 'Navigation', g9: 4, ho: 'Limit or extend your range and domain.', dO: 'Control dimensions', $8: 11};
var $author$project$Examples$Frame$DotGrid$meta = {g8: 'Navigation', g9: 4, ho: 'Use dots instead of grid lines.', dO: 'Dotted grid', $8: 13};
var $author$project$Examples$Frame$Ellipsis$meta = {g8: 'Navigation', g9: 4, ho: 'Add ellipsis to labels (Note: uses HTML labels).', dO: 'Ellipsis', $8: 8};
var $author$project$Examples$Frame$GridColor$meta = {g8: 'Navigation', g9: 4, ho: 'Change color of grid.', dO: 'Color of grid', $8: 14};
var $author$project$Examples$Frame$GridFilter$meta = {g8: 'Navigation', g9: 4, ho: 'Prevent automatically added gridlines.', dO: 'Remove grid lines', $8: 15};
var $author$project$Examples$Frame$LabelWithLine$meta = {g8: 'Navigation', g9: 4, ho: 'Add a label and line to chart.', dO: 'Label with line', $8: 20};
var $author$project$Examples$Frame$Legends$meta = {g8: 'Navigation', g9: 4, ho: 'Add legends to chart.', dO: 'Legends', $8: 21};
var $author$project$Examples$Frame$Lines$meta = {g8: 'Navigation', g9: 4, ho: 'Add a guidence line.', dO: 'Lines', $8: 30};
var $author$project$Examples$Frame$Margin$meta = {g8: 'Navigation', g9: 4, ho: 'Add margin to frame.', dO: 'Margin', $8: 17};
var $author$project$Examples$Frame$NoArrow$meta = {g8: 'Navigation', g9: 4, ho: 'Remove arrow from axis line.', dO: 'Remove arrow', $8: 5};
var $author$project$Examples$Frame$Offset$meta = {g8: 'Navigation', g9: 4, ho: 'Change position of labels.', dO: 'Move labels', $8: 4};
var $author$project$Examples$Frame$OnlyInts$meta = {g8: 'Navigation', g9: 4, ho: 'Only show integer labels.', dO: 'Only integers', $8: 7};
var $author$project$Examples$Frame$Padding$meta = {g8: 'Navigation', g9: 4, ho: 'Add padding to frame.', dO: 'Padding', $8: 16};
var $author$project$Examples$Frame$Position$meta = {g8: 'Navigation', g9: 4, ho: 'Change position of items.', dO: 'Position', $8: 3};
var $author$project$Examples$Frame$Rect$meta = {g8: 'Navigation', g9: 4, ho: 'Add a rectangle.', dO: 'Rectangle', $8: 31};
var $author$project$Examples$Frame$Times$meta = {g8: 'Navigation', g9: 4, ho: 'Use dates as labels.', dO: 'Timeline', $8: 7};
var $author$project$Examples$Frame$Titles$meta = {g8: 'Navigation', g9: 4, ho: 'Add titles to chart.', dO: 'Titles', $8: 20};
var $author$project$Examples$Frontpage$BasicArea$meta = {g8: 'Basic', g9: 2, ho: 'Make a basic area chart.', dO: 'Area chart', $8: 1};
var $author$project$Examples$Frontpage$BasicBar$meta = {g8: 'Basic', g9: 1, ho: 'Make a basic bar chart.', dO: 'Bar chart', $8: 1};
var $author$project$Examples$Frontpage$BasicBubble$meta = {g8: 'Basic', g9: 3, ho: 'Make a basic bubble chart.', dO: 'Bubble chart', $8: 1};
var $author$project$Examples$Frontpage$BasicLine$meta = {g8: 'Basic', g9: 3, ho: 'Make a basic line chart.', dO: 'Line chart', $8: 1};
var $author$project$Examples$Frontpage$BasicNavigation$meta = {g8: 'Basic', g9: 1, ho: 'Add basic navigation items to chart.', dO: 'Basic navigation', $8: 1};
var $author$project$Examples$Frontpage$BasicScatter$meta = {g8: 'Basic', g9: 2, ho: 'Make a basic scatter chart.', dO: 'Scatter chart', $8: 1};
var $author$project$Examples$Frontpage$Concise$meta = {g8: 'Front page', g9: 1, ho: 'Add custom bar labels.', dO: 'Labels for bars', $8: 15};
var $author$project$Examples$Frontpage$Familiar$meta = {g8: 'Front page', g9: 2, ho: 'Make a basic scatter chart.', dO: 'Basic', $8: 1};
var $author$project$Examples$Interactivity$Background$meta = {g8: 'Interactivity', g9: 5, ho: 'Change background of tooltip.', dO: 'Edit background', $8: 12};
var $author$project$Examples$Interactivity$BasicArea$meta = {g8: 'Interactivity', g9: 5, ho: 'Add tooltip for nearest stack in line or scatter chart.', dO: 'Basic tooltip for area charts', $8: 5};
var $author$project$Examples$Interactivity$BasicBar$meta = {g8: 'Interactivity', g9: 5, ho: 'Add a tooltip for nearest bar.', dO: 'Basic bar tooltip', $8: 1};
var $author$project$Examples$Interactivity$BasicBin$meta = {g8: 'Interactivity', g9: 5, ho: 'Add a tooltip for nearest bin.', dO: 'Basic bin tooltip', $8: 3};
var $author$project$Examples$Interactivity$BasicLine$meta = {g8: 'Interactivity', g9: 5, ho: 'Add basic tooltip for line or scatter charts.', dO: 'Basic tooltip for dots', $8: 4};
var $author$project$Examples$Interactivity$BasicStack$meta = {g8: 'Interactivity', g9: 5, ho: 'Add a tooltip for nearest stack.', dO: 'Basic stack tooltip', $8: 2};
var $author$project$Examples$Interactivity$Border$meta = {g8: 'Interactivity', g9: 5, ho: 'Change border of tooltip.', dO: 'Edit border', $8: 11};
var $author$project$Examples$Interactivity$ChangeContent$meta = {g8: 'Interactivity', g9: 5, ho: 'Change the content of the tooltip.', dO: 'Change content', $8: 7};
var $author$project$Examples$Interactivity$ChangeDot$meta = {g8: 'Interactivity', g9: 5, ho: 'Change styling if hovered.', dO: 'Change style based on events', $8: 7};
var $author$project$Examples$Interactivity$ChangeName$meta = {g8: 'Interactivity', g9: 5, ho: 'Change the default series name in tooltip.', dO: 'Change name', $8: 6};
var $author$project$Examples$Interactivity$ChangeUnit$meta = {g8: 'Interactivity', g9: 5, ho: 'Change the value print in the tooltip.', dO: 'Change value formatting', $8: 7};
var $elm$core$Basics$negate = function (n) {
	return -n;
};
var $author$project$Examples$Interactivity$Coordinates$meta = {g8: 'Interactivity', g9: 5, ho: 'Get the hovered coordinates.', dO: 'Basic coordinates', $8: -1};
var $author$project$Examples$Interactivity$Direction$meta = {g8: 'Interactivity', g9: 5, ho: 'Change direction of tooltip.', dO: 'Direction', $8: 8};
var $author$project$Examples$Interactivity$DoubleSearch$meta = {g8: 'Interactivity', g9: 5, ho: 'Add more than one search.', dO: 'Multiple tooltips', $8: 17};
var $author$project$Examples$Interactivity$FilterSearch$meta = {g8: 'Interactivity', g9: 5, ho: 'Narrow down tooltip item search.', dO: 'Filter item search', $8: 15};
var $author$project$Examples$Interactivity$Focal$meta = {g8: 'Interactivity', g9: 5, ho: 'Determine where tooltip is placed in relation to item.', dO: 'Set focal point', $8: 11};
var $author$project$Examples$Interactivity$Multiple$meta = {g8: 'Interactivity', g9: 5, ho: 'Add a tooltip for bars and series.', dO: 'Mixed chart types', $8: 13};
var $author$project$Examples$Interactivity$NoArrow$meta = {g8: 'Interactivity', g9: 5, ho: 'Don\'t add pointer to tooltip.', dO: 'Remove pointer', $8: 8};
var $author$project$Examples$Interactivity$Offset$meta = {g8: 'Interactivity', g9: 5, ho: 'Change distance of tooltip to item.', dO: 'Edit offset', $8: 9};
var $author$project$Examples$Interactivity$TrickyTooltip$meta = {g8: 'Interactivity', g9: 5, ho: 'Add tooltip for each stack in hovered bin.', dO: 'Multiple tooltips for single group', $8: 20};
var $author$project$Examples$Interactivity$Zoom$meta = {g8: 'Interactivity', g9: 5, ho: 'Add zoom effect.', dO: 'Zoom box', $8: 21};
var $author$project$Examples$Interactivity$ZoomAlt$meta = {g8: 'Interactivity', g9: 5, ho: 'Add zoom effect.', dO: 'Zoom', $8: 20};
var $author$project$Examples$LineCharts$Area$meta = {g8: 'Line charts', g9: 3, ho: 'Set opacity of the area under curve.', dO: 'Area under curve', $8: 9};
var $author$project$Examples$LineCharts$Basic$meta = {g8: 'Line charts', g9: 3, ho: 'Use a linear interpolation.', dO: 'Linear', $8: 1};
var $author$project$Examples$LineCharts$Color$meta = {g8: 'Line charts', g9: 3, ho: 'Change color of line.', dO: 'Color', $8: 4};
var $author$project$Examples$LineCharts$Dashed$meta = {g8: 'Line charts', g9: 3, ho: 'Make a line dashed.', dO: 'Dashed', $8: 6};
var $author$project$Examples$LineCharts$Dots$meta = {g8: 'Line charts', g9: 3, ho: 'Add dots to a line.', dO: 'Dots', $8: 7};
var $author$project$Examples$LineCharts$Gradient$meta = {g8: 'Line charts', g9: 3, ho: 'Add a gradient to your area under the curve.', dO: 'Gradient', $8: 10};
var $author$project$Examples$LineCharts$Labels$meta = {g8: 'Line charts', g9: 3, ho: 'Add custom labels on each data point.', dO: 'Labels for each point', $8: 12};
var $author$project$Examples$LineCharts$Legends$meta = {g8: 'Line charts', g9: 3, ho: 'Add legends to your chart.', dO: 'Legends', $8: 12};
var $author$project$Examples$LineCharts$Missing$meta = {g8: 'Line charts', g9: 3, ho: 'Handle missing data.', dO: 'Missing data', $8: 4};
var $author$project$Examples$LineCharts$Montone$meta = {g8: 'Line charts', g9: 3, ho: 'Use a monotone interpolation.', dO: 'Monotone', $8: 2};
var $author$project$Examples$LineCharts$Pattern$meta = {g8: 'Line charts', g9: 3, ho: 'Add a pattern to the area under the curve.', dO: 'Pattern', $8: 11};
var $author$project$Examples$LineCharts$Stacked$meta = {g8: 'Line charts', g9: 3, ho: 'Stack lines.', dO: 'Stacked', $8: 8};
var $author$project$Examples$LineCharts$Stepped$meta = {g8: 'Line charts', g9: 3, ho: 'Use a stepped interpolation.', dO: 'Stepped', $8: 3};
var $author$project$Examples$LineCharts$Tooltip$meta = {g8: 'Line charts', g9: 3, ho: 'Add basic tooltip.', dO: 'Tooltip', $8: 13};
var $author$project$Examples$LineCharts$TooltipStack$meta = {g8: 'Line charts', g9: 3, ho: 'Add tooltip for nearest stack.', dO: 'Tooltip for stacks', $8: 14};
var $author$project$Examples$LineCharts$Width$meta = {g8: 'Line charts', g9: 3, ho: 'Change width of line.', dO: 'Width', $8: 5};
var $author$project$Examples$ScatterCharts$Basic$meta = {g8: 'Scatter charts', g9: 2, ho: 'Make a basic scatter chart.', dO: 'Basic', $8: 1};
var $author$project$Examples$ScatterCharts$Borders$meta = {g8: 'Scatter charts', g9: 2, ho: 'Change border of dots.', dO: 'Borders', $8: 5};
var $author$project$Examples$ScatterCharts$Colors$meta = {g8: 'Scatter charts', g9: 2, ho: 'Change color of dots.', dO: 'Color', $8: 3};
var $author$project$Examples$ScatterCharts$DataDependent$meta = {g8: 'Scatter charts', g9: 2, ho: 'Change styling of individual dots.', dO: 'Data dependent styling', $8: 7};
var $author$project$Examples$ScatterCharts$Highlight$meta = {g8: 'Scatter charts', g9: 2, ho: 'Highlight dots.', dO: 'Highlight', $8: 6};
var $author$project$Examples$ScatterCharts$Labels$meta = {g8: 'Scatter charts', g9: 2, ho: 'Add labels to each dot.', dO: 'Labels', $8: 9};
var $author$project$Examples$ScatterCharts$Legends$meta = {g8: 'Scatter charts', g9: 2, ho: 'Add legends to scatter chart.', dO: 'Legends', $8: 10};
var $author$project$Examples$ScatterCharts$Opacity$meta = {g8: 'Scatter charts', g9: 2, ho: 'Change opacity of dots.', dO: 'Opacity', $8: 6};
var $author$project$Examples$ScatterCharts$Shapes$meta = {g8: 'Scatter charts', g9: 2, ho: 'Change shape of dots.', dO: 'Shapes', $8: 2};
var $author$project$Examples$ScatterCharts$Sizes$meta = {g8: 'Scatter charts', g9: 2, ho: 'Change size of dots.', dO: 'Sizes', $8: 4};
var $author$project$Examples$ScatterCharts$Tooltip$meta = {g8: 'Scatter charts', g9: 2, ho: 'Add basic tooltip.', dO: 'Tooltip', $8: 8};
var $author$project$Examples$meta = function (chosen) {
	switch (chosen) {
		case 0:
			return $author$project$Examples$BarCharts$Gradient$meta;
		case 1:
			return $author$project$Examples$BarCharts$VariableWidth$meta;
		case 2:
			return $author$project$Examples$BarCharts$Title$meta;
		case 3:
			return $author$project$Examples$BarCharts$TooltipStack$meta;
		case 4:
			return $author$project$Examples$BarCharts$Tooltip$meta;
		case 5:
			return $author$project$Examples$BarCharts$BarLabels$meta;
		case 6:
			return $author$project$Examples$BarCharts$Pattern$meta;
		case 7:
			return $author$project$Examples$BarCharts$Histogram$meta;
		case 8:
			return $author$project$Examples$BarCharts$BinLabelsAdvanced$meta;
		case 9:
			return $author$project$Examples$BarCharts$Spacing$meta;
		case 10:
			return $author$project$Examples$BarCharts$Highlight$meta;
		case 11:
			return $author$project$Examples$BarCharts$DataDependent$meta;
		case 12:
			return $author$project$Examples$BarCharts$Color$meta;
		case 13:
			return $author$project$Examples$BarCharts$TooltipBin$meta;
		case 14:
			return $author$project$Examples$BarCharts$Corners$meta;
		case 15:
			return $author$project$Examples$BarCharts$Ungroup$meta;
		case 16:
			return $author$project$Examples$BarCharts$BinLabels$meta;
		case 17:
			return $author$project$Examples$BarCharts$Stacked$meta;
		case 18:
			return $author$project$Examples$BarCharts$Margin$meta;
		case 19:
			return $author$project$Examples$BarCharts$Borders$meta;
		case 20:
			return $author$project$Examples$BarCharts$Opacity$meta;
		case 21:
			return $author$project$Examples$BarCharts$Legends$meta;
		case 22:
			return $author$project$Examples$BarCharts$Basic$meta;
		case 23:
			return $author$project$Examples$Frame$Lines$meta;
		case 24:
			return $author$project$Examples$Frame$Position$meta;
		case 25:
			return $author$project$Examples$Frame$Coordinates$meta;
		case 26:
			return $author$project$Examples$Frame$GridFilter$meta;
		case 27:
			return $author$project$Examples$Frame$Dimensions$meta;
		case 28:
			return $author$project$Examples$Frame$CustomElements$meta;
		case 29:
			return $author$project$Examples$Frame$NoArrow$meta;
		case 30:
			return $author$project$Examples$Frame$Background$meta;
		case 31:
			return $author$project$Examples$Frame$Rect$meta;
		case 32:
			return $author$project$Examples$Frame$Padding$meta;
		case 33:
			return $author$project$Examples$Frame$Times$meta;
		case 34:
			return $author$project$Examples$Frame$OnlyInts$meta;
		case 35:
			return $author$project$Examples$Frame$GridColor$meta;
		case 36:
			return $author$project$Examples$Frame$Offset$meta;
		case 37:
			return $author$project$Examples$Frame$Ellipsis$meta;
		case 38:
			return $author$project$Examples$Frame$Color$meta;
		case 39:
			return $author$project$Examples$Frame$Amount$meta;
		case 40:
			return $author$project$Examples$Frame$Titles$meta;
		case 41:
			return $author$project$Examples$Frame$CustomLabels$meta;
		case 42:
			return $author$project$Examples$Frame$Margin$meta;
		case 43:
			return $author$project$Examples$Frame$LabelWithLine$meta;
		case 44:
			return $author$project$Examples$Frame$DotGrid$meta;
		case 45:
			return $author$project$Examples$Frame$CustomFormat$meta;
		case 46:
			return $author$project$Examples$Frame$AxisLength$meta;
		case 47:
			return $author$project$Examples$Frame$Arbitrary$meta;
		case 48:
			return $author$project$Examples$Frame$Legends$meta;
		case 49:
			return $author$project$Examples$Frame$Basic$meta;
		case 50:
			return $author$project$Examples$Interactivity$ChangeContent$meta;
		case 51:
			return $author$project$Examples$Interactivity$Direction$meta;
		case 52:
			return $author$project$Examples$Interactivity$ChangeDot$meta;
		case 53:
			return $author$project$Examples$Interactivity$Border$meta;
		case 54:
			return $author$project$Examples$Interactivity$Zoom$meta;
		case 55:
			return $author$project$Examples$Interactivity$BasicBin$meta;
		case 56:
			return $author$project$Examples$Interactivity$BasicStack$meta;
		case 57:
			return $author$project$Examples$Interactivity$Coordinates$meta;
		case 58:
			return $author$project$Examples$Interactivity$ChangeName$meta;
		case 59:
			return $author$project$Examples$Interactivity$NoArrow$meta;
		case 60:
			return $author$project$Examples$Interactivity$FilterSearch$meta;
		case 61:
			return $author$project$Examples$Interactivity$Background$meta;
		case 62:
			return $author$project$Examples$Interactivity$BasicBar$meta;
		case 63:
			return $author$project$Examples$Interactivity$BasicArea$meta;
		case 64:
			return $author$project$Examples$Interactivity$ZoomAlt$meta;
		case 65:
			return $author$project$Examples$Interactivity$TrickyTooltip$meta;
		case 66:
			return $author$project$Examples$Interactivity$Multiple$meta;
		case 67:
			return $author$project$Examples$Interactivity$BasicLine$meta;
		case 68:
			return $author$project$Examples$Interactivity$Offset$meta;
		case 69:
			return $author$project$Examples$Interactivity$DoubleSearch$meta;
		case 70:
			return $author$project$Examples$Interactivity$ChangeUnit$meta;
		case 71:
			return $author$project$Examples$Interactivity$Focal$meta;
		case 72:
			return $author$project$Examples$LineCharts$Area$meta;
		case 73:
			return $author$project$Examples$LineCharts$Gradient$meta;
		case 74:
			return $author$project$Examples$LineCharts$Width$meta;
		case 75:
			return $author$project$Examples$LineCharts$TooltipStack$meta;
		case 76:
			return $author$project$Examples$LineCharts$Tooltip$meta;
		case 77:
			return $author$project$Examples$LineCharts$Montone$meta;
		case 78:
			return $author$project$Examples$LineCharts$Pattern$meta;
		case 79:
			return $author$project$Examples$LineCharts$Dots$meta;
		case 80:
			return $author$project$Examples$LineCharts$Dashed$meta;
		case 81:
			return $author$project$Examples$LineCharts$Color$meta;
		case 82:
			return $author$project$Examples$LineCharts$Stepped$meta;
		case 83:
			return $author$project$Examples$LineCharts$Stacked$meta;
		case 84:
			return $author$project$Examples$LineCharts$Labels$meta;
		case 85:
			return $author$project$Examples$LineCharts$Missing$meta;
		case 86:
			return $author$project$Examples$LineCharts$Legends$meta;
		case 87:
			return $author$project$Examples$LineCharts$Basic$meta;
		case 88:
			return $author$project$Examples$Frontpage$BasicBubble$meta;
		case 89:
			return $author$project$Examples$Frontpage$BasicNavigation$meta;
		case 90:
			return $author$project$Examples$Frontpage$BasicBar$meta;
		case 91:
			return $author$project$Examples$Frontpage$BasicArea$meta;
		case 92:
			return $author$project$Examples$Frontpage$Concise$meta;
		case 93:
			return $author$project$Examples$Frontpage$BasicLine$meta;
		case 94:
			return $author$project$Examples$Frontpage$BasicScatter$meta;
		case 95:
			return $author$project$Examples$Frontpage$Familiar$meta;
		case 96:
			return $author$project$Examples$ScatterCharts$Colors$meta;
		case 97:
			return $author$project$Examples$ScatterCharts$Shapes$meta;
		case 98:
			return $author$project$Examples$ScatterCharts$Tooltip$meta;
		case 99:
			return $author$project$Examples$ScatterCharts$Highlight$meta;
		case 100:
			return $author$project$Examples$ScatterCharts$DataDependent$meta;
		case 101:
			return $author$project$Examples$ScatterCharts$Borders$meta;
		case 102:
			return $author$project$Examples$ScatterCharts$Labels$meta;
		case 103:
			return $author$project$Examples$ScatterCharts$Opacity$meta;
		case 104:
			return $author$project$Examples$ScatterCharts$Sizes$meta;
		case 105:
			return $author$project$Examples$ScatterCharts$Legends$meta;
		default:
			return $author$project$Examples$ScatterCharts$Basic$meta;
	}
};
var $elm$core$Basics$composeR = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var $elm$core$String$replace = F3(
	function (before, after, string) {
		return A2(
			$elm$core$String$join,
			after,
			A2($elm$core$String$split, before, string));
	});
var $elm$core$String$toLower = _String_toLower;
var $author$project$Ui$Thumbnail$urlify = A2(
	$elm$core$Basics$composeR,
	A2($elm$core$String$replace, ' ', '-'),
	A2(
		$elm$core$Basics$composeR,
		A2($elm$core$String$replace, '/', '-'),
		$elm$core$String$toLower));
var $author$project$Ui$Thumbnail$toUrlGroup = function (title) {
	return '/documentation/' + $author$project$Ui$Thumbnail$urlify(title);
};
var $elm$core$Basics$compare = _Utils_compare;
var $elm$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			if (dict.$ === -2) {
				return $elm$core$Maybe$Nothing;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var _v1 = A2($elm$core$Basics$compare, targetKey, key);
				switch (_v1) {
					case 0:
						var $temp$targetKey = targetKey,
							$temp$dict = left;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
					case 1:
						return $elm$core$Maybe$Just(value);
					default:
						var $temp$targetKey = targetKey,
							$temp$dict = right;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
				}
			}
		}
	});
var $elm$core$Dict$Black = 1;
var $elm$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {$: -1, a: a, b: b, c: c, d: d, e: e};
	});
var $elm$core$Dict$Red = 0;
var $elm$core$Dict$balance = F5(
	function (color, key, value, left, right) {
		if ((right.$ === -1) && (!right.a)) {
			var _v1 = right.a;
			var rK = right.b;
			var rV = right.c;
			var rLeft = right.d;
			var rRight = right.e;
			if ((left.$ === -1) && (!left.a)) {
				var _v3 = left.a;
				var lK = left.b;
				var lV = left.c;
				var lLeft = left.d;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					0,
					key,
					value,
					A5($elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					rK,
					rV,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),
					rRight);
			}
		} else {
			if ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {
				var _v5 = left.a;
				var lK = left.b;
				var lV = left.c;
				var _v6 = left.d;
				var _v7 = _v6.a;
				var llK = _v6.b;
				var llV = _v6.c;
				var llLeft = _v6.d;
				var llRight = _v6.e;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					0,
					lK,
					lV,
					A5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));
			} else {
				return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);
			}
		}
	});
var $elm$core$Dict$insertHelp = F3(
	function (key, value, dict) {
		if (dict.$ === -2) {
			return A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
		} else {
			var nColor = dict.a;
			var nKey = dict.b;
			var nValue = dict.c;
			var nLeft = dict.d;
			var nRight = dict.e;
			var _v1 = A2($elm$core$Basics$compare, key, nKey);
			switch (_v1) {
				case 0:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						A3($elm$core$Dict$insertHelp, key, value, nLeft),
						nRight);
				case 1:
					return A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);
				default:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						nLeft,
						A3($elm$core$Dict$insertHelp, key, value, nRight));
			}
		}
	});
var $elm$core$Dict$insert = F3(
	function (key, value, dict) {
		var _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);
		if ((_v0.$ === -1) && (!_v0.a)) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$getMin = function (dict) {
	getMin:
	while (true) {
		if ((dict.$ === -1) && (dict.d.$ === -1)) {
			var left = dict.d;
			var $temp$dict = left;
			dict = $temp$dict;
			continue getMin;
		} else {
			return dict;
		}
	}
};
var $elm$core$Dict$moveRedLeft = function (dict) {
	if (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {
		if ((dict.e.d.$ === -1) && (!dict.e.d.a)) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var lLeft = _v1.d;
			var lRight = _v1.e;
			var _v2 = dict.e;
			var rClr = _v2.a;
			var rK = _v2.b;
			var rV = _v2.c;
			var rLeft = _v2.d;
			var _v3 = rLeft.a;
			var rlK = rLeft.b;
			var rlV = rLeft.c;
			var rlL = rLeft.d;
			var rlR = rLeft.e;
			var rRight = _v2.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				0,
				rlK,
				rlV,
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					rlL),
				A5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rlR, rRight));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v4 = dict.d;
			var lClr = _v4.a;
			var lK = _v4.b;
			var lV = _v4.c;
			var lLeft = _v4.d;
			var lRight = _v4.e;
			var _v5 = dict.e;
			var rClr = _v5.a;
			var rK = _v5.b;
			var rV = _v5.c;
			var rLeft = _v5.d;
			var rRight = _v5.e;
			if (clr === 1) {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$moveRedRight = function (dict) {
	if (((dict.$ === -1) && (dict.d.$ === -1)) && (dict.e.$ === -1)) {
		if ((dict.d.d.$ === -1) && (!dict.d.d.a)) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var _v2 = _v1.d;
			var _v3 = _v2.a;
			var llK = _v2.b;
			var llV = _v2.c;
			var llLeft = _v2.d;
			var llRight = _v2.e;
			var lRight = _v1.e;
			var _v4 = dict.e;
			var rClr = _v4.a;
			var rK = _v4.b;
			var rV = _v4.c;
			var rLeft = _v4.d;
			var rRight = _v4.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				0,
				lK,
				lV,
				A5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					lRight,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight)));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v5 = dict.d;
			var lClr = _v5.a;
			var lK = _v5.b;
			var lV = _v5.c;
			var lLeft = _v5.d;
			var lRight = _v5.e;
			var _v6 = dict.e;
			var rClr = _v6.a;
			var rK = _v6.b;
			var rV = _v6.c;
			var rLeft = _v6.d;
			var rRight = _v6.e;
			if (clr === 1) {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					1,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, 0, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, 0, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$removeHelpPrepEQGT = F7(
	function (targetKey, dict, color, key, value, left, right) {
		if ((left.$ === -1) && (!left.a)) {
			var _v1 = left.a;
			var lK = left.b;
			var lV = left.c;
			var lLeft = left.d;
			var lRight = left.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				lK,
				lV,
				lLeft,
				A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, lRight, right));
		} else {
			_v2$2:
			while (true) {
				if ((right.$ === -1) && (right.a === 1)) {
					if (right.d.$ === -1) {
						if (right.d.a === 1) {
							var _v3 = right.a;
							var _v4 = right.d;
							var _v5 = _v4.a;
							return $elm$core$Dict$moveRedRight(dict);
						} else {
							break _v2$2;
						}
					} else {
						var _v6 = right.a;
						var _v7 = right.d;
						return $elm$core$Dict$moveRedRight(dict);
					}
				} else {
					break _v2$2;
				}
			}
			return dict;
		}
	});
var $elm$core$Dict$removeMin = function (dict) {
	if ((dict.$ === -1) && (dict.d.$ === -1)) {
		var color = dict.a;
		var key = dict.b;
		var value = dict.c;
		var left = dict.d;
		var lColor = left.a;
		var lLeft = left.d;
		var right = dict.e;
		if (lColor === 1) {
			if ((lLeft.$ === -1) && (!lLeft.a)) {
				var _v3 = lLeft.a;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					key,
					value,
					$elm$core$Dict$removeMin(left),
					right);
			} else {
				var _v4 = $elm$core$Dict$moveRedLeft(dict);
				if (_v4.$ === -1) {
					var nColor = _v4.a;
					var nKey = _v4.b;
					var nValue = _v4.c;
					var nLeft = _v4.d;
					var nRight = _v4.e;
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						$elm$core$Dict$removeMin(nLeft),
						nRight);
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			}
		} else {
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				value,
				$elm$core$Dict$removeMin(left),
				right);
		}
	} else {
		return $elm$core$Dict$RBEmpty_elm_builtin;
	}
};
var $elm$core$Dict$removeHelp = F2(
	function (targetKey, dict) {
		if (dict.$ === -2) {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_cmp(targetKey, key) < 0) {
				if ((left.$ === -1) && (left.a === 1)) {
					var _v4 = left.a;
					var lLeft = left.d;
					if ((lLeft.$ === -1) && (!lLeft.a)) {
						var _v6 = lLeft.a;
						return A5(
							$elm$core$Dict$RBNode_elm_builtin,
							color,
							key,
							value,
							A2($elm$core$Dict$removeHelp, targetKey, left),
							right);
					} else {
						var _v7 = $elm$core$Dict$moveRedLeft(dict);
						if (_v7.$ === -1) {
							var nColor = _v7.a;
							var nKey = _v7.b;
							var nValue = _v7.c;
							var nLeft = _v7.d;
							var nRight = _v7.e;
							return A5(
								$elm$core$Dict$balance,
								nColor,
								nKey,
								nValue,
								A2($elm$core$Dict$removeHelp, targetKey, nLeft),
								nRight);
						} else {
							return $elm$core$Dict$RBEmpty_elm_builtin;
						}
					}
				} else {
					return A5(
						$elm$core$Dict$RBNode_elm_builtin,
						color,
						key,
						value,
						A2($elm$core$Dict$removeHelp, targetKey, left),
						right);
				}
			} else {
				return A2(
					$elm$core$Dict$removeHelpEQGT,
					targetKey,
					A7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));
			}
		}
	});
var $elm$core$Dict$removeHelpEQGT = F2(
	function (targetKey, dict) {
		if (dict.$ === -1) {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_eq(targetKey, key)) {
				var _v1 = $elm$core$Dict$getMin(right);
				if (_v1.$ === -1) {
					var minKey = _v1.b;
					var minValue = _v1.c;
					return A5(
						$elm$core$Dict$balance,
						color,
						minKey,
						minValue,
						left,
						$elm$core$Dict$removeMin(right));
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			} else {
				return A5(
					$elm$core$Dict$balance,
					color,
					key,
					value,
					left,
					A2($elm$core$Dict$removeHelp, targetKey, right));
			}
		} else {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		}
	});
var $elm$core$Dict$remove = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$removeHelp, key, dict);
		if ((_v0.$ === -1) && (!_v0.a)) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$update = F3(
	function (targetKey, alter, dictionary) {
		var _v0 = alter(
			A2($elm$core$Dict$get, targetKey, dictionary));
		if (!_v0.$) {
			var value = _v0.a;
			return A3($elm$core$Dict$insert, targetKey, value, dictionary);
		} else {
			return A2($elm$core$Dict$remove, targetKey, dictionary);
		}
	});
var $author$project$Ui$Thumbnail$dictGroups = function () {
	var updateCat = F3(
		function (meta, id, maybeIds) {
			if (!maybeIds.$) {
				var group = maybeIds.a;
				return $elm$core$Maybe$Just(
					_Utils_update(
						group,
						{
							dJ: A2($elm$core$List$cons, id, group.dJ)
						}));
			} else {
				return $elm$core$Maybe$Just(
					A3(
						$author$project$Ui$Thumbnail$Group,
						meta.g8,
						meta.g9,
						_List_fromArray(
							[id])));
			}
		});
	var groupBy = function (id) {
		var meta = $author$project$Examples$meta(id);
		return A2(
			$elm$core$Dict$update,
			$author$project$Ui$Thumbnail$toUrlGroup(meta.g8),
			A2(updateCat, meta, id));
	};
	return A3($elm$core$List$foldl, groupBy, $elm$core$Dict$empty, $author$project$Examples$all);
}();
var $elm$core$List$sortBy = _List_sortBy;
var $elm$core$Dict$values = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, valueList) {
				return A2($elm$core$List$cons, value, valueList);
			}),
		_List_Nil,
		dict);
};
var $author$project$Ui$Thumbnail$groups = A2(
	$elm$core$List$sortBy,
	function ($) {
		return $.$8;
	},
	$elm$core$Dict$values($author$project$Ui$Thumbnail$dictGroups));
var $elm$core$List$head = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(x);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$Maybe$withDefault = F2(
	function (_default, maybe) {
		if (!maybe.$) {
			var value = maybe.a;
			return value;
		} else {
			return _default;
		}
	});
var $author$project$Ui$Thumbnail$firstGroup = A2(
	$elm$core$Maybe$withDefault,
	A3($author$project$Ui$Thumbnail$Group, '', 1, _List_Nil),
	$elm$core$List$head($author$project$Ui$Thumbnail$groups));
var $author$project$Examples$BarCharts$BarLabels$init = 0;
var $author$project$Examples$BarCharts$Basic$init = 0;
var $author$project$Examples$BarCharts$BinLabels$init = 0;
var $author$project$Examples$BarCharts$BinLabelsAdvanced$init = 0;
var $author$project$Examples$BarCharts$Borders$init = 0;
var $author$project$Examples$BarCharts$Color$init = 0;
var $author$project$Examples$BarCharts$Corners$init = 0;
var $author$project$Examples$BarCharts$DataDependent$init = 0;
var $author$project$Examples$BarCharts$Gradient$init = 0;
var $author$project$Examples$BarCharts$Highlight$init = {c$: _List_Nil};
var $author$project$Examples$BarCharts$Histogram$init = 0;
var $author$project$Examples$BarCharts$Legends$init = 0;
var $author$project$Examples$BarCharts$Margin$init = 0;
var $author$project$Examples$BarCharts$Opacity$init = 0;
var $author$project$Examples$BarCharts$Pattern$init = 0;
var $author$project$Examples$BarCharts$Spacing$init = 0;
var $author$project$Examples$BarCharts$Stacked$init = 0;
var $author$project$Examples$BarCharts$Title$init = 0;
var $author$project$Examples$BarCharts$Tooltip$init = {c$: _List_Nil};
var $author$project$Examples$BarCharts$TooltipBin$init = {c$: _List_Nil};
var $author$project$Examples$BarCharts$TooltipStack$init = {c$: _List_Nil};
var $author$project$Examples$BarCharts$Ungroup$init = 0;
var $author$project$Examples$BarCharts$VariableWidth$init = 0;
var $author$project$Examples$Frame$Amount$init = 0;
var $author$project$Examples$Frame$Arbitrary$init = 0;
var $author$project$Examples$Frame$AxisLength$init = 0;
var $author$project$Examples$Frame$Background$init = 0;
var $author$project$Examples$Frame$Basic$init = 0;
var $author$project$Examples$Frame$Color$init = 0;
var $author$project$Examples$Frame$Coordinates$init = 0;
var $author$project$Examples$Frame$CustomElements$init = {c$: _List_Nil};
var $author$project$Examples$Frame$CustomFormat$init = 0;
var $author$project$Examples$Frame$CustomLabels$init = 0;
var $author$project$Examples$Frame$Dimensions$init = 0;
var $author$project$Examples$Frame$DotGrid$init = 0;
var $author$project$Examples$Frame$Ellipsis$init = 0;
var $author$project$Examples$Frame$GridColor$init = 0;
var $author$project$Examples$Frame$GridFilter$init = 0;
var $author$project$Examples$Frame$LabelWithLine$init = 0;
var $author$project$Examples$Frame$Legends$init = 0;
var $author$project$Examples$Frame$Lines$init = 0;
var $author$project$Examples$Frame$Margin$init = 0;
var $author$project$Examples$Frame$NoArrow$init = 0;
var $author$project$Examples$Frame$Offset$init = 0;
var $author$project$Examples$Frame$OnlyInts$init = 0;
var $author$project$Examples$Frame$Padding$init = 0;
var $author$project$Examples$Frame$Position$init = 0;
var $author$project$Examples$Frame$Rect$init = 0;
var $author$project$Examples$Frame$Times$init = 0;
var $author$project$Examples$Frame$Titles$init = 0;
var $author$project$Examples$Frontpage$BasicArea$init = 0;
var $author$project$Examples$Frontpage$BasicBar$init = 0;
var $author$project$Examples$Frontpage$BasicBubble$init = 0;
var $author$project$Examples$Frontpage$BasicLine$init = 0;
var $author$project$Examples$Frontpage$BasicNavigation$init = 0;
var $author$project$Examples$Frontpage$BasicScatter$init = 0;
var $author$project$Examples$Frontpage$Concise$init = {c$: _List_Nil};
var $author$project$Examples$Frontpage$Familiar$init = 0;
var $author$project$Examples$Interactivity$Background$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$BasicArea$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$BasicBar$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$BasicBin$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$BasicLine$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$BasicStack$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$Border$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$ChangeContent$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$ChangeDot$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$ChangeName$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$ChangeUnit$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$Coordinates$init = {c$: $elm$core$Maybe$Nothing};
var $author$project$Examples$Interactivity$Direction$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$DoubleSearch$init = {c0: _List_Nil, dH: _List_Nil};
var $author$project$Examples$Interactivity$FilterSearch$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$Focal$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$Multiple$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$NoArrow$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$Offset$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$TrickyTooltip$init = {c$: _List_Nil};
var $author$project$Examples$Interactivity$Zoom$NoZoom = {$: 0};
var $author$project$Examples$Interactivity$Zoom$init = $author$project$Examples$Interactivity$Zoom$NoZoom;
var $author$project$Examples$Interactivity$ZoomAlt$None = {$: 2};
var $author$project$Examples$Interactivity$ZoomAlt$init = {
	Q: {b: 0, a: 0},
	W: $author$project$Examples$Interactivity$ZoomAlt$None,
	Z: 100
};
var $author$project$Examples$LineCharts$Area$init = 0;
var $author$project$Examples$LineCharts$Basic$init = 0;
var $author$project$Examples$LineCharts$Color$init = 0;
var $author$project$Examples$LineCharts$Dashed$init = 0;
var $author$project$Examples$LineCharts$Dots$init = 0;
var $author$project$Examples$LineCharts$Gradient$init = 0;
var $author$project$Examples$LineCharts$Labels$init = 0;
var $author$project$Examples$LineCharts$Legends$init = 0;
var $author$project$Examples$LineCharts$Missing$init = 0;
var $author$project$Examples$LineCharts$Montone$init = 0;
var $author$project$Examples$LineCharts$Pattern$init = 0;
var $author$project$Examples$LineCharts$Stacked$init = 0;
var $author$project$Examples$LineCharts$Stepped$init = 0;
var $author$project$Examples$LineCharts$Tooltip$init = {c$: _List_Nil};
var $author$project$Examples$LineCharts$TooltipStack$init = {c$: _List_Nil};
var $author$project$Examples$LineCharts$Width$init = 0;
var $author$project$Examples$ScatterCharts$Basic$init = 0;
var $author$project$Examples$ScatterCharts$Borders$init = 0;
var $author$project$Examples$ScatterCharts$Colors$init = 0;
var $author$project$Examples$ScatterCharts$DataDependent$init = 0;
var $author$project$Examples$ScatterCharts$Highlight$init = 0;
var $author$project$Examples$ScatterCharts$Labels$init = 0;
var $author$project$Examples$ScatterCharts$Legends$init = 0;
var $author$project$Examples$ScatterCharts$Opacity$init = 0;
var $author$project$Examples$ScatterCharts$Shapes$init = 0;
var $author$project$Examples$ScatterCharts$Sizes$init = 0;
var $author$project$Examples$ScatterCharts$Tooltip$init = {c$: _List_Nil};
var $author$project$Examples$init = {bh: $author$project$Examples$BarCharts$Gradient$init, bi: $author$project$Examples$BarCharts$VariableWidth$init, bj: $author$project$Examples$BarCharts$Highlight$init, bk: $author$project$Examples$ScatterCharts$DataDependent$init, bl: $author$project$Examples$ScatterCharts$Borders$init, bm: $author$project$Examples$ScatterCharts$Labels$init, bn: $author$project$Examples$ScatterCharts$Opacity$init, bo: $author$project$Examples$ScatterCharts$Sizes$init, bp: $author$project$Examples$ScatterCharts$Legends$init, bq: $author$project$Examples$ScatterCharts$Basic$init, br: $author$project$Examples$BarCharts$DataDependent$init, bs: $author$project$Examples$BarCharts$Color$init, bt: $author$project$Examples$BarCharts$TooltipBin$init, bu: $author$project$Examples$BarCharts$Corners$init, bv: $author$project$Examples$BarCharts$Ungroup$init, bw: $author$project$Examples$BarCharts$BinLabels$init, bx: $author$project$Examples$BarCharts$Stacked$init, by: $author$project$Examples$BarCharts$Margin$init, bz: $author$project$Examples$BarCharts$Borders$init, bA: $author$project$Examples$BarCharts$Title$init, bB: $author$project$Examples$BarCharts$Opacity$init, bC: $author$project$Examples$BarCharts$Legends$init, bD: $author$project$Examples$BarCharts$Basic$init, bE: $author$project$Examples$Frame$Lines$init, bF: $author$project$Examples$Frame$Position$init, bG: $author$project$Examples$Frame$Coordinates$init, bH: $author$project$Examples$Frame$GridFilter$init, bI: $author$project$Examples$Frame$Dimensions$init, bJ: $author$project$Examples$Frame$CustomElements$init, bK: $author$project$Examples$Frame$NoArrow$init, bL: $author$project$Examples$BarCharts$TooltipStack$init, bM: $author$project$Examples$Frame$Background$init, bN: $author$project$Examples$Frame$Rect$init, bO: $author$project$Examples$Frame$Padding$init, bP: $author$project$Examples$Frame$Times$init, bQ: $author$project$Examples$Frame$OnlyInts$init, bR: $author$project$Examples$Frame$GridColor$init, bS: $author$project$Examples$Frame$Offset$init, bT: $author$project$Examples$Frame$Ellipsis$init, bU: $author$project$Examples$Frame$Color$init, bV: $author$project$Examples$Frame$Amount$init, bW: $author$project$Examples$BarCharts$Tooltip$init, bX: $author$project$Examples$Frame$Titles$init, bY: $author$project$Examples$Frame$CustomLabels$init, bZ: $author$project$Examples$Frame$Margin$init, b_: $author$project$Examples$Frame$LabelWithLine$init, b$: $author$project$Examples$Frame$DotGrid$init, b0: $author$project$Examples$Frame$CustomFormat$init, b1: $author$project$Examples$Frame$AxisLength$init, b2: $author$project$Examples$Frame$Arbitrary$init, b3: $author$project$Examples$Frame$Legends$init, b4: $author$project$Examples$Frame$Basic$init, b5: $author$project$Examples$BarCharts$BarLabels$init, b6: $author$project$Examples$Interactivity$ChangeContent$init, b7: $author$project$Examples$Interactivity$Direction$init, b8: $author$project$Examples$Interactivity$ChangeDot$init, b9: $author$project$Examples$Interactivity$Border$init, ca: $author$project$Examples$Interactivity$Zoom$init, cb: $author$project$Examples$Interactivity$BasicBin$init, cc: $author$project$Examples$Interactivity$BasicStack$init, cd: $author$project$Examples$Interactivity$Coordinates$init, ce: $author$project$Examples$Interactivity$ChangeName$init, cf: $author$project$Examples$Interactivity$NoArrow$init, cg: $author$project$Examples$BarCharts$Pattern$init, ch: $author$project$Examples$Interactivity$FilterSearch$init, ci: $author$project$Examples$Interactivity$Background$init, cj: $author$project$Examples$Interactivity$BasicBar$init, ck: $author$project$Examples$Interactivity$BasicArea$init, cl: $author$project$Examples$Interactivity$ZoomAlt$init, cm: $author$project$Examples$Interactivity$TrickyTooltip$init, cn: $author$project$Examples$Interactivity$Multiple$init, co: $author$project$Examples$Interactivity$BasicLine$init, cp: $author$project$Examples$Interactivity$Offset$init, cq: $author$project$Examples$Interactivity$DoubleSearch$init, cr: $author$project$Examples$BarCharts$Histogram$init, cs: $author$project$Examples$Interactivity$ChangeUnit$init, ct: $author$project$Examples$Interactivity$Focal$init, cu: $author$project$Examples$LineCharts$Area$init, cv: $author$project$Examples$LineCharts$Gradient$init, cw: $author$project$Examples$LineCharts$Width$init, cx: $author$project$Examples$LineCharts$TooltipStack$init, cy: $author$project$Examples$LineCharts$Tooltip$init, cz: $author$project$Examples$LineCharts$Montone$init, cA: $author$project$Examples$LineCharts$Pattern$init, cB: $author$project$Examples$LineCharts$Dots$init, cC: $author$project$Examples$BarCharts$BinLabelsAdvanced$init, cD: $author$project$Examples$LineCharts$Dashed$init, cE: $author$project$Examples$LineCharts$Color$init, cF: $author$project$Examples$LineCharts$Stepped$init, cG: $author$project$Examples$LineCharts$Stacked$init, cH: $author$project$Examples$LineCharts$Labels$init, cI: $author$project$Examples$LineCharts$Missing$init, cJ: $author$project$Examples$LineCharts$Legends$init, cK: $author$project$Examples$LineCharts$Basic$init, cL: $author$project$Examples$Frontpage$BasicBubble$init, cM: $author$project$Examples$Frontpage$BasicNavigation$init, cN: $author$project$Examples$BarCharts$Spacing$init, cO: $author$project$Examples$Frontpage$BasicBar$init, cP: $author$project$Examples$Frontpage$BasicArea$init, cQ: $author$project$Examples$Frontpage$Concise$init, cR: $author$project$Examples$Frontpage$BasicLine$init, cS: $author$project$Examples$Frontpage$BasicScatter$init, cT: $author$project$Examples$Frontpage$Familiar$init, cU: $author$project$Examples$ScatterCharts$Colors$init, cV: $author$project$Examples$ScatterCharts$Shapes$init, cW: $author$project$Examples$ScatterCharts$Tooltip$init, cX: $author$project$Examples$ScatterCharts$Highlight$init};
var $author$project$Page$Section$init = F3(
	function (key, session, params) {
		return _Utils_Tuple2(
			{cY: $author$project$Examples$init, c4: $author$project$Ui$Menu$init, dU: params.f$, a$: session.a$},
			$elm$core$Platform$Cmd$none);
	});
var $author$project$Page$Documentation$init = F3(
	function (key, session, params) {
		return A3(
			$author$project$Page$Section$init,
			key,
			session,
			{
				f$: $author$project$Ui$Thumbnail$urlify($author$project$Ui$Thumbnail$firstGroup.i5)
			});
	});
var $author$project$Page$Example$init = F3(
	function (key, session, params) {
		return _Utils_Tuple2(
			{cY: $author$project$Examples$init, c4: $author$project$Ui$Menu$init, dU: params.f$, eB: params.hu, aX: false, a$: session.a$},
			$elm$core$Platform$Cmd$none);
	});
var $author$project$Page$GettingStarted$init = F3(
	function (key, session, params) {
		return _Utils_Tuple2(
			{c4: $author$project$Ui$Menu$init, a$: session.a$},
			$elm$core$Platform$Cmd$none);
	});
var $author$project$Charts$Dashboard1$init = {c$: _List_Nil, c0: _List_Nil};
var $author$project$Charts$Dashboard2$init = {c$: _List_Nil};
var $author$project$Charts$Dashboard3$init = {c$: _List_Nil};
var $author$project$Charts$Dashboard4$init = {c$: _List_Nil};
var $author$project$Charts$Dashboard5$init = {c$: _List_Nil};
var $author$project$Charts$Landing$init = {c$: _List_Nil, c0: _List_Nil};
var $author$project$Page$Home$init = F3(
	function (key, session, params) {
		return _Utils_Tuple2(
			{a8: $author$project$Examples$Frontpage$Concise$init, ba: $author$project$Charts$Dashboard1$init, bb: $author$project$Charts$Dashboard2$init, bc: $author$project$Charts$Dashboard3$init, bd: $author$project$Charts$Dashboard4$init, dA: $author$project$Charts$Dashboard5$init, cZ: true, c$: _List_Nil, dM: $author$project$Charts$Landing$init, c4: $author$project$Ui$Menu$init, a$: session.a$},
			$elm$core$Platform$Cmd$none);
	});
var $elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;
var $elm$core$Platform$Cmd$map = _Platform_map;
var $author$project$Main$updateWith = F4(
	function (toModel, toMsg, model, _v0) {
		var subModel = _v0.a;
		var subCmd = _v0.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					aH: toModel(subModel)
				}),
			A2($elm$core$Platform$Cmd$map, toMsg, subCmd));
	});
var $author$project$Main$changeRouteTo = F2(
	function (maybeRoute, old) {
		var session = $author$project$Main$exit(old);
		var model = _Utils_update(
			old,
			{am: session});
		if (maybeRoute.$ === 1) {
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{aH: $author$project$Main$Redirect}),
				A2($elm$browser$Browser$Navigation$pushUrl, model.E, '/'));
		} else {
			switch (maybeRoute.a.$) {
				case 0:
					var _v1 = maybeRoute.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$Page_Home,
						$author$project$Main$Page_Home_Msg,
						model,
						A3($author$project$Page$Home$init, model.E, session, 0));
				case 1:
					var _v2 = maybeRoute.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$Page_Administration,
						$author$project$Main$Page_Administration_Msg,
						model,
						A3($author$project$Page$Administration$init, model.E, session, 0));
				case 2:
					var _v3 = maybeRoute.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$Page_Documentation,
						$author$project$Main$Page_Documentation_Msg,
						model,
						A3($author$project$Page$Documentation$init, model.E, session, 0));
				case 3:
					var p1 = maybeRoute.a.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$Page_Section,
						$author$project$Main$Page_Section_Msg,
						model,
						A3(
							$author$project$Page$Section$init,
							model.E,
							session,
							{f$: p1}));
				case 4:
					var _v4 = maybeRoute.a;
					var p1 = _v4.a;
					var p2 = _v4.b;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$Page_Example,
						$author$project$Main$Page_Example_Msg,
						model,
						A3(
							$author$project$Page$Example$init,
							model.E,
							session,
							{hu: p2, f$: p1}));
				default:
					var _v5 = maybeRoute.a;
					return A4(
						$author$project$Main$updateWith,
						$author$project$Main$Page_GettingStarted,
						$author$project$Main$Page_GettingStarted_Msg,
						model,
						A3($author$project$Page$GettingStarted$init, model.E, session, 0));
			}
		}
	});
var $elm$url$Url$Parser$State = F5(
	function (visited, unvisited, params, frag, value) {
		return {aC: frag, aI: params, ax: unvisited, ay: value, aM: visited};
	});
var $elm$url$Url$Parser$getFirstMatch = function (states) {
	getFirstMatch:
	while (true) {
		if (!states.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var state = states.a;
			var rest = states.b;
			var _v1 = state.ax;
			if (!_v1.b) {
				return $elm$core$Maybe$Just(state.ay);
			} else {
				if ((_v1.a === '') && (!_v1.b.b)) {
					return $elm$core$Maybe$Just(state.ay);
				} else {
					var $temp$states = rest;
					states = $temp$states;
					continue getFirstMatch;
				}
			}
		}
	}
};
var $elm$url$Url$Parser$removeFinalEmpty = function (segments) {
	if (!segments.b) {
		return _List_Nil;
	} else {
		if ((segments.a === '') && (!segments.b.b)) {
			return _List_Nil;
		} else {
			var segment = segments.a;
			var rest = segments.b;
			return A2(
				$elm$core$List$cons,
				segment,
				$elm$url$Url$Parser$removeFinalEmpty(rest));
		}
	}
};
var $elm$url$Url$Parser$preparePath = function (path) {
	var _v0 = A2($elm$core$String$split, '/', path);
	if (_v0.b && (_v0.a === '')) {
		var segments = _v0.b;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	} else {
		var segments = _v0;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	}
};
var $elm$url$Url$Parser$addToParametersHelp = F2(
	function (value, maybeList) {
		if (maybeList.$ === 1) {
			return $elm$core$Maybe$Just(
				_List_fromArray(
					[value]));
		} else {
			var list = maybeList.a;
			return $elm$core$Maybe$Just(
				A2($elm$core$List$cons, value, list));
		}
	});
var $elm$url$Url$percentDecode = _Url_percentDecode;
var $elm$url$Url$Parser$addParam = F2(
	function (segment, dict) {
		var _v0 = A2($elm$core$String$split, '=', segment);
		if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
			var rawKey = _v0.a;
			var _v1 = _v0.b;
			var rawValue = _v1.a;
			var _v2 = $elm$url$Url$percentDecode(rawKey);
			if (_v2.$ === 1) {
				return dict;
			} else {
				var key = _v2.a;
				var _v3 = $elm$url$Url$percentDecode(rawValue);
				if (_v3.$ === 1) {
					return dict;
				} else {
					var value = _v3.a;
					return A3(
						$elm$core$Dict$update,
						key,
						$elm$url$Url$Parser$addToParametersHelp(value),
						dict);
				}
			}
		} else {
			return dict;
		}
	});
var $elm$url$Url$Parser$prepareQuery = function (maybeQuery) {
	if (maybeQuery.$ === 1) {
		return $elm$core$Dict$empty;
	} else {
		var qry = maybeQuery.a;
		return A3(
			$elm$core$List$foldr,
			$elm$url$Url$Parser$addParam,
			$elm$core$Dict$empty,
			A2($elm$core$String$split, '&', qry));
	}
};
var $elm$url$Url$Parser$parse = F2(
	function (_v0, url) {
		var parser = _v0;
		return $elm$url$Url$Parser$getFirstMatch(
			parser(
				A5(
					$elm$url$Url$Parser$State,
					_List_Nil,
					$elm$url$Url$Parser$preparePath(url.fL),
					$elm$url$Url$Parser$prepareQuery(url.fU),
					url.fg,
					$elm$core$Basics$identity)));
	});
var $author$project$Route$Administration = {$: 1};
var $author$project$Route$Documentation = {$: 2};
var $author$project$Route$Documentation_String_ = function (a) {
	return {$: 3, a: a};
};
var $author$project$Route$Documentation_String__String_ = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $author$project$Route$Getting_started = {$: 5};
var $author$project$Route$Top = {$: 0};
var $elm$url$Url$Parser$Parser = $elm$core$Basics$identity;
var $elm$url$Url$Parser$mapState = F2(
	function (func, _v0) {
		var visited = _v0.aM;
		var unvisited = _v0.ax;
		var params = _v0.aI;
		var frag = _v0.aC;
		var value = _v0.ay;
		return A5(
			$elm$url$Url$Parser$State,
			visited,
			unvisited,
			params,
			frag,
			func(value));
	});
var $elm$url$Url$Parser$map = F2(
	function (subValue, _v0) {
		var parseArg = _v0;
		return function (_v1) {
			var visited = _v1.aM;
			var unvisited = _v1.ax;
			var params = _v1.aI;
			var frag = _v1.aC;
			var value = _v1.ay;
			return A2(
				$elm$core$List$map,
				$elm$url$Url$Parser$mapState(value),
				parseArg(
					A5($elm$url$Url$Parser$State, visited, unvisited, params, frag, subValue)));
		};
	});
var $elm$core$List$append = F2(
	function (xs, ys) {
		if (!ys.b) {
			return xs;
		} else {
			return A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);
		}
	});
var $elm$core$List$concat = function (lists) {
	return A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);
};
var $elm$core$List$concatMap = F2(
	function (f, list) {
		return $elm$core$List$concat(
			A2($elm$core$List$map, f, list));
	});
var $elm$url$Url$Parser$oneOf = function (parsers) {
	return function (state) {
		return A2(
			$elm$core$List$concatMap,
			function (_v0) {
				var parser = _v0;
				return parser(state);
			},
			parsers);
	};
};
var $elm$url$Url$Parser$s = function (str) {
	return function (_v0) {
		var visited = _v0.aM;
		var unvisited = _v0.ax;
		var params = _v0.aI;
		var frag = _v0.aC;
		var value = _v0.ay;
		if (!unvisited.b) {
			return _List_Nil;
		} else {
			var next = unvisited.a;
			var rest = unvisited.b;
			return _Utils_eq(next, str) ? _List_fromArray(
				[
					A5(
					$elm$url$Url$Parser$State,
					A2($elm$core$List$cons, next, visited),
					rest,
					params,
					frag,
					value)
				]) : _List_Nil;
		}
	};
};
var $elm$url$Url$Parser$slash = F2(
	function (_v0, _v1) {
		var parseBefore = _v0;
		var parseAfter = _v1;
		return function (state) {
			return A2(
				$elm$core$List$concatMap,
				parseAfter,
				parseBefore(state));
		};
	});
var $elm$url$Url$Parser$custom = F2(
	function (tipe, stringToSomething) {
		return function (_v0) {
			var visited = _v0.aM;
			var unvisited = _v0.ax;
			var params = _v0.aI;
			var frag = _v0.aC;
			var value = _v0.ay;
			if (!unvisited.b) {
				return _List_Nil;
			} else {
				var next = unvisited.a;
				var rest = unvisited.b;
				var _v2 = stringToSomething(next);
				if (!_v2.$) {
					var nextValue = _v2.a;
					return _List_fromArray(
						[
							A5(
							$elm$url$Url$Parser$State,
							A2($elm$core$List$cons, next, visited),
							rest,
							params,
							frag,
							value(nextValue))
						]);
				} else {
					return _List_Nil;
				}
			}
		};
	});
var $elm$url$Url$Parser$string = A2($elm$url$Url$Parser$custom, 'STRING', $elm$core$Maybe$Just);
var $elm$url$Url$Parser$top = function (state) {
	return _List_fromArray(
		[state]);
};
var $author$project$Route$parser = $elm$url$Url$Parser$oneOf(
	_List_fromArray(
		[
			A2($elm$url$Url$Parser$map, $author$project$Route$Top, $elm$url$Url$Parser$top),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Administration,
			$elm$url$Url$Parser$s('administration')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Documentation,
			$elm$url$Url$Parser$s('documentation')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Documentation_String_,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('documentation'),
				$elm$url$Url$Parser$string)),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Documentation_String__String_,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('documentation'),
				A2($elm$url$Url$Parser$slash, $elm$url$Url$Parser$string, $elm$url$Url$Parser$string))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Getting_started,
			$elm$url$Url$Parser$s('getting-started'))
		]));
var $author$project$Route$fromUrl = function (url) {
	return A2($elm$url$Url$Parser$parse, $author$project$Route$parser, url);
};
var $author$project$Session$Session = function (window) {
	return {a$: window};
};
var $elm$json$Json$Decode$decodeValue = _Json_run;
var $author$project$Session$Window = F2(
	function (width, height) {
		return {U: height, h: width};
	});
var $elm$json$Json$Decode$field = _Json_decodeField;
var $elm$json$Json$Decode$int = _Json_decodeInt;
var $author$project$Session$decoder = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Session$Window,
	A2($elm$json$Json$Decode$field, 'width', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'height', $elm$json$Json$Decode$int));
var $author$project$Session$init = function (json) {
	var _v0 = A2($elm$json$Json$Decode$decodeValue, $author$project$Session$decoder, json);
	if (!_v0.$) {
		var flags = _v0.a;
		return $author$project$Session$Session(flags);
	} else {
		return $author$project$Session$Session(
			{U: 800, h: 1000});
	}
};
var $author$project$Main$init = F3(
	function (flags, url, key) {
		return A2(
			$author$project$Main$changeRouteTo,
			$author$project$Route$fromUrl(url),
			A3(
				$author$project$Main$Model,
				key,
				$author$project$Session$init(flags),
				$author$project$Main$Redirect));
	});
var $elm$core$Platform$Sub$map = _Platform_map;
var $elm$core$Platform$Sub$batch = _Platform_batch;
var $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);
var $author$project$Page$Administration$OnResize = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$browser$Browser$Events$Window = 1;
var $elm$browser$Browser$Events$MySub = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $elm$browser$Browser$Events$State = F2(
	function (subs, pids) {
		return {fN: pids, f5: subs};
	});
var $elm$browser$Browser$Events$init = $elm$core$Task$succeed(
	A2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));
var $elm$browser$Browser$Events$nodeToKey = function (node) {
	if (!node) {
		return 'd_';
	} else {
		return 'w_';
	}
};
var $elm$browser$Browser$Events$addKey = function (sub) {
	var node = sub.a;
	var name = sub.b;
	return _Utils_Tuple2(
		_Utils_ap(
			$elm$browser$Browser$Events$nodeToKey(node),
			name),
		sub);
};
var $elm$core$Dict$fromList = function (assocs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, dict) {
				var key = _v0.a;
				var value = _v0.b;
				return A3($elm$core$Dict$insert, key, value, dict);
			}),
		$elm$core$Dict$empty,
		assocs);
};
var $elm$core$Process$kill = _Scheduler_kill;
var $elm$core$Dict$foldl = F3(
	function (func, acc, dict) {
		foldl:
		while (true) {
			if (dict.$ === -2) {
				return acc;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldl, func, acc, left)),
					$temp$dict = right;
				func = $temp$func;
				acc = $temp$acc;
				dict = $temp$dict;
				continue foldl;
			}
		}
	});
var $elm$core$Dict$merge = F6(
	function (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
		var stepState = F3(
			function (rKey, rValue, _v0) {
				stepState:
				while (true) {
					var list = _v0.a;
					var result = _v0.b;
					if (!list.b) {
						return _Utils_Tuple2(
							list,
							A3(rightStep, rKey, rValue, result));
					} else {
						var _v2 = list.a;
						var lKey = _v2.a;
						var lValue = _v2.b;
						var rest = list.b;
						if (_Utils_cmp(lKey, rKey) < 0) {
							var $temp$rKey = rKey,
								$temp$rValue = rValue,
								$temp$_v0 = _Utils_Tuple2(
								rest,
								A3(leftStep, lKey, lValue, result));
							rKey = $temp$rKey;
							rValue = $temp$rValue;
							_v0 = $temp$_v0;
							continue stepState;
						} else {
							if (_Utils_cmp(lKey, rKey) > 0) {
								return _Utils_Tuple2(
									list,
									A3(rightStep, rKey, rValue, result));
							} else {
								return _Utils_Tuple2(
									rest,
									A4(bothStep, lKey, lValue, rValue, result));
							}
						}
					}
				}
			});
		var _v3 = A3(
			$elm$core$Dict$foldl,
			stepState,
			_Utils_Tuple2(
				$elm$core$Dict$toList(leftDict),
				initialResult),
			rightDict);
		var leftovers = _v3.a;
		var intermediateResult = _v3.b;
		return A3(
			$elm$core$List$foldl,
			F2(
				function (_v4, result) {
					var k = _v4.a;
					var v = _v4.b;
					return A3(leftStep, k, v, result);
				}),
			intermediateResult,
			leftovers);
	});
var $elm$browser$Browser$Events$Event = F2(
	function (key, event) {
		return {fc: event, fy: key};
	});
var $elm$core$Platform$sendToSelf = _Platform_sendToSelf;
var $elm$browser$Browser$Events$spawn = F3(
	function (router, key, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var actualNode = function () {
			if (!node) {
				return _Browser_doc;
			} else {
				return _Browser_window;
			}
		}();
		return A2(
			$elm$core$Task$map,
			function (value) {
				return _Utils_Tuple2(key, value);
			},
			A3(
				_Browser_on,
				actualNode,
				name,
				function (event) {
					return A2(
						$elm$core$Platform$sendToSelf,
						router,
						A2($elm$browser$Browser$Events$Event, key, event));
				}));
	});
var $elm$core$Dict$union = F2(
	function (t1, t2) {
		return A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);
	});
var $elm$browser$Browser$Events$onEffects = F3(
	function (router, subs, state) {
		var stepRight = F3(
			function (key, sub, _v6) {
				var deads = _v6.a;
				var lives = _v6.b;
				var news = _v6.c;
				return _Utils_Tuple3(
					deads,
					lives,
					A2(
						$elm$core$List$cons,
						A3($elm$browser$Browser$Events$spawn, router, key, sub),
						news));
			});
		var stepLeft = F3(
			function (_v4, pid, _v5) {
				var deads = _v5.a;
				var lives = _v5.b;
				var news = _v5.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, pid, deads),
					lives,
					news);
			});
		var stepBoth = F4(
			function (key, pid, _v2, _v3) {
				var deads = _v3.a;
				var lives = _v3.b;
				var news = _v3.c;
				return _Utils_Tuple3(
					deads,
					A3($elm$core$Dict$insert, key, pid, lives),
					news);
			});
		var newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);
		var _v0 = A6(
			$elm$core$Dict$merge,
			stepLeft,
			stepBoth,
			stepRight,
			state.fN,
			$elm$core$Dict$fromList(newSubs),
			_Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));
		var deadPids = _v0.a;
		var livePids = _v0.b;
		var makeNewPids = _v0.c;
		return A2(
			$elm$core$Task$andThen,
			function (pids) {
				return $elm$core$Task$succeed(
					A2(
						$elm$browser$Browser$Events$State,
						newSubs,
						A2(
							$elm$core$Dict$union,
							livePids,
							$elm$core$Dict$fromList(pids))));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$sequence(makeNewPids);
				},
				$elm$core$Task$sequence(
					A2($elm$core$List$map, $elm$core$Process$kill, deadPids))));
	});
var $elm$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _v0 = f(mx);
		if (!_v0.$) {
			var x = _v0.a;
			return A2($elm$core$List$cons, x, xs);
		} else {
			return xs;
		}
	});
var $elm$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			$elm$core$List$maybeCons(f),
			_List_Nil,
			xs);
	});
var $elm$browser$Browser$Events$onSelfMsg = F3(
	function (router, _v0, state) {
		var key = _v0.fy;
		var event = _v0.fc;
		var toMessage = function (_v2) {
			var subKey = _v2.a;
			var _v3 = _v2.b;
			var node = _v3.a;
			var name = _v3.b;
			var decoder = _v3.c;
			return _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;
		};
		var messages = A2($elm$core$List$filterMap, toMessage, state.f5);
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Platform$sendToApp(router),
					messages)));
	});
var $elm$browser$Browser$Events$subMap = F2(
	function (func, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var decoder = _v0.c;
		return A3(
			$elm$browser$Browser$Events$MySub,
			node,
			name,
			A2($elm$json$Json$Decode$map, func, decoder));
	});
_Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);
var $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');
var $elm$browser$Browser$Events$on = F3(
	function (node, name, decoder) {
		return $elm$browser$Browser$Events$subscription(
			A3($elm$browser$Browser$Events$MySub, node, name, decoder));
	});
var $elm$browser$Browser$Events$onResize = function (func) {
	return A3(
		$elm$browser$Browser$Events$on,
		1,
		'resize',
		A2(
			$elm$json$Json$Decode$field,
			'target',
			A3(
				$elm$json$Json$Decode$map2,
				func,
				A2($elm$json$Json$Decode$field, 'innerWidth', $elm$json$Json$Decode$int),
				A2($elm$json$Json$Decode$field, 'innerHeight', $elm$json$Json$Decode$int))));
};
var $author$project$Page$Administration$subscriptions = function (model) {
	return $elm$browser$Browser$Events$onResize($author$project$Page$Administration$OnResize);
};
var $author$project$Page$Section$OnResize = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Page$Section$subscriptions = function (model) {
	return $elm$browser$Browser$Events$onResize($author$project$Page$Section$OnResize);
};
var $author$project$Page$Documentation$subscriptions = $author$project$Page$Section$subscriptions;
var $author$project$Page$Example$OnResize = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Page$Example$subscriptions = function (model) {
	return $elm$browser$Browser$Events$onResize($author$project$Page$Example$OnResize);
};
var $author$project$Page$GettingStarted$OnResize = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Page$GettingStarted$subscriptions = function (model) {
	return $elm$browser$Browser$Events$onResize($author$project$Page$GettingStarted$OnResize);
};
var $author$project$Page$Home$OnResize = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Page$Home$subscriptions = function (model) {
	return $elm$browser$Browser$Events$onResize($author$project$Page$Home$OnResize);
};
var $author$project$Main$subscriptions = function (model) {
	var _v0 = model.aH;
	switch (_v0.$) {
		case 1:
			return $elm$core$Platform$Sub$none;
		case 0:
			return $elm$core$Platform$Sub$none;
		case 2:
			var subModel = _v0.a;
			return A2(
				$elm$core$Platform$Sub$map,
				$author$project$Main$Page_Home_Msg,
				$author$project$Page$Home$subscriptions(subModel));
		case 3:
			var subModel = _v0.a;
			return A2(
				$elm$core$Platform$Sub$map,
				$author$project$Main$Page_Administration_Msg,
				$author$project$Page$Administration$subscriptions(subModel));
		case 4:
			var subModel = _v0.a;
			return A2(
				$elm$core$Platform$Sub$map,
				$author$project$Main$Page_Documentation_Msg,
				$author$project$Page$Documentation$subscriptions(subModel));
		case 5:
			var subModel = _v0.a;
			return A2(
				$elm$core$Platform$Sub$map,
				$author$project$Main$Page_Section_Msg,
				$author$project$Page$Section$subscriptions(subModel));
		case 6:
			var subModel = _v0.a;
			return A2(
				$elm$core$Platform$Sub$map,
				$author$project$Main$Page_Example_Msg,
				$author$project$Page$Example$subscriptions(subModel));
		default:
			var subModel = _v0.a;
			return A2(
				$elm$core$Platform$Sub$map,
				$author$project$Main$Page_GettingStarted_Msg,
				$author$project$Page$GettingStarted$subscriptions(subModel));
	}
};
var $elm$browser$Browser$Navigation$load = _Browser_load;
var $elm$url$Url$addPort = F2(
	function (maybePort, starter) {
		if (maybePort.$ === 1) {
			return starter;
		} else {
			var port_ = maybePort.a;
			return starter + (':' + $elm$core$String$fromInt(port_));
		}
	});
var $elm$url$Url$addPrefixed = F3(
	function (prefix, maybeSegment, starter) {
		if (maybeSegment.$ === 1) {
			return starter;
		} else {
			var segment = maybeSegment.a;
			return _Utils_ap(
				starter,
				_Utils_ap(prefix, segment));
		}
	});
var $elm$url$Url$toString = function (url) {
	var http = function () {
		var _v0 = url.fR;
		if (!_v0) {
			return 'http://';
		} else {
			return 'https://';
		}
	}();
	return A3(
		$elm$url$Url$addPrefixed,
		'#',
		url.fg,
		A3(
			$elm$url$Url$addPrefixed,
			'?',
			url.fU,
			_Utils_ap(
				A2(
					$elm$url$Url$addPort,
					url.fO,
					_Utils_ap(http, url.fo)),
				url.fL)));
};
var $elm$core$Basics$not = _Basics_not;
var $author$project$Ui$Menu$update = F2(
	function (msg, model) {
		return _Utils_update(
			model,
			{aT: !model.aT});
	});
var $author$project$Page$Administration$update = F3(
	function (key, msg, model) {
		if (!msg.$) {
			var width = msg.a;
			var height = msg.b;
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{
						a$: {U: height, h: width}
					}),
				$elm$core$Platform$Cmd$none);
		} else {
			var subMsg = msg.a;
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{
						c4: A2($author$project$Ui$Menu$update, subMsg, model.c4)
					}),
				$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Examples$BarCharts$BarLabels$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Basic$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$BinLabels$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$BinLabelsAdvanced$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Borders$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Color$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Corners$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$DataDependent$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Gradient$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Highlight$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$BarCharts$Histogram$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Legends$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Margin$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Opacity$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Pattern$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Spacing$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Stacked$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Title$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$Tooltip$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$BarCharts$TooltipBin$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$BarCharts$TooltipStack$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$BarCharts$Ungroup$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$BarCharts$VariableWidth$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Amount$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Arbitrary$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$AxisLength$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Background$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Basic$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Color$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Coordinates$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$CustomElements$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Frame$CustomFormat$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$CustomLabels$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Dimensions$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$DotGrid$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Ellipsis$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$GridColor$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$GridFilter$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$LabelWithLine$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Legends$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Lines$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Margin$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$NoArrow$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Offset$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$OnlyInts$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Padding$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Position$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Rect$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Times$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frame$Titles$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frontpage$BasicArea$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frontpage$BasicBar$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frontpage$BasicBubble$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frontpage$BasicLine$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frontpage$BasicNavigation$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frontpage$BasicScatter$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Frontpage$Concise$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Frontpage$Familiar$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$Interactivity$Background$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$BasicArea$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$BasicBar$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$BasicBin$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$BasicLine$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$BasicStack$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$Border$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$ChangeContent$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$ChangeDot$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$ChangeName$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$ChangeUnit$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$Coordinates$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$Direction$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$DoubleSearch$update = F2(
	function (msg, model) {
		var hoveringDots = msg.a;
		var hoveringBars = msg.b;
		return _Utils_update(
			model,
			{c0: hoveringBars, dH: hoveringDots});
	});
var $author$project$Examples$Interactivity$FilterSearch$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$Focal$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$Multiple$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$NoArrow$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$Offset$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$TrickyTooltip$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$Interactivity$Zoom$ReZooming = F4(
	function (a, b, c, d) {
		return {$: 2, a: a, b: b, c: c, d: d};
	});
var $author$project$Examples$Interactivity$Zoom$Zoomed = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $author$project$Examples$Interactivity$Zoom$Zooming = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$core$Basics$min = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) < 0) ? x : y;
	});
var $author$project$Examples$Interactivity$Zoom$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 0:
				var point = msg.a;
				switch (model.$) {
					case 0:
						return A2($author$project$Examples$Interactivity$Zoom$Zooming, point, point);
					case 3:
						var start = model.a;
						var end = model.b;
						return A4($author$project$Examples$Interactivity$Zoom$ReZooming, start, end, point, point);
					default:
						return model;
				}
			case 1:
				var point = msg.a;
				switch (model.$) {
					case 1:
						var start = model.a;
						return A2($author$project$Examples$Interactivity$Zoom$Zooming, start, point);
					case 2:
						var startOld = model.a;
						var endOld = model.b;
						var start = model.c;
						return A4($author$project$Examples$Interactivity$Zoom$ReZooming, startOld, endOld, start, point);
					default:
						return model;
				}
			case 2:
				var point = msg.a;
				switch (model.$) {
					case 1:
						var start = model.a;
						return A2(
							$author$project$Examples$Interactivity$Zoom$Zoomed,
							{
								b: A2($elm$core$Basics$min, start.b, point.b),
								a: A2($elm$core$Basics$min, start.a, point.a)
							},
							{
								b: A2($elm$core$Basics$max, start.b, point.b),
								a: A2($elm$core$Basics$max, start.a, point.a)
							});
					case 2:
						var start = model.c;
						return A2(
							$author$project$Examples$Interactivity$Zoom$Zoomed,
							{
								b: A2($elm$core$Basics$min, start.b, point.b),
								a: A2($elm$core$Basics$min, start.a, point.a)
							},
							{
								b: A2($elm$core$Basics$max, start.b, point.b),
								a: A2($elm$core$Basics$max, start.a, point.a)
							});
					default:
						return model;
				}
			default:
				return $author$project$Examples$Interactivity$Zoom$NoZoom;
		}
	});
var $author$project$Examples$Interactivity$ZoomAlt$CouldStillBeClick = function (a) {
	return {$: 0, a: a};
};
var $author$project$Examples$Interactivity$ZoomAlt$ForSureDragging = function (a) {
	return {$: 1, a: a};
};
var $author$project$Examples$Interactivity$ZoomAlt$updateCenter = F3(
	function (center, prevOffset, offset) {
		return {b: center.b + (prevOffset.b - offset.b), a: center.a + (prevOffset.a - offset.a)};
	});
var $author$project$Examples$Interactivity$ZoomAlt$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 1:
				var offset = msg.a;
				return _Utils_update(
					model,
					{
						W: $author$project$Examples$Interactivity$ZoomAlt$CouldStillBeClick(offset)
					});
			case 0:
				var offset = msg.a;
				var _v1 = model.W;
				switch (_v1.$) {
					case 0:
						var prevOffset = _v1.a;
						return _Utils_eq(prevOffset, offset) ? model : _Utils_update(
							model,
							{
								Q: A3($author$project$Examples$Interactivity$ZoomAlt$updateCenter, model.Q, prevOffset, offset),
								W: $author$project$Examples$Interactivity$ZoomAlt$ForSureDragging(offset)
							});
					case 1:
						var prevOffset = _v1.a;
						return _Utils_update(
							model,
							{
								Q: A3($author$project$Examples$Interactivity$ZoomAlt$updateCenter, model.Q, prevOffset, offset),
								W: $author$project$Examples$Interactivity$ZoomAlt$ForSureDragging(offset)
							});
					default:
						return model;
				}
			case 2:
				var offset = msg.a;
				var coord = msg.b;
				var _v2 = model.W;
				switch (_v2.$) {
					case 0:
						var prevOffset = _v2.a;
						return _Utils_update(
							model,
							{Q: coord, W: $author$project$Examples$Interactivity$ZoomAlt$None});
					case 1:
						var prevOffset = _v2.a;
						return _Utils_update(
							model,
							{
								Q: A3($author$project$Examples$Interactivity$ZoomAlt$updateCenter, model.Q, prevOffset, offset),
								W: $author$project$Examples$Interactivity$ZoomAlt$None
							});
					default:
						return model;
				}
			case 3:
				return _Utils_update(
					model,
					{W: $author$project$Examples$Interactivity$ZoomAlt$None});
			case 4:
				return _Utils_update(
					model,
					{Z: model.Z + 20});
			case 5:
				return _Utils_update(
					model,
					{
						Z: A2($elm$core$Basics$max, 1, model.Z - 20)
					});
			default:
				return _Utils_update(
					model,
					{
						Q: {b: 0, a: 0},
						Z: 100
					});
		}
	});
var $author$project$Examples$LineCharts$Area$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Basic$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Color$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Dashed$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Dots$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Gradient$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Labels$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Legends$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Missing$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Montone$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Pattern$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Stacked$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Stepped$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$LineCharts$Tooltip$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$LineCharts$TooltipStack$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$LineCharts$Width$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$ScatterCharts$Basic$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$ScatterCharts$Borders$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$ScatterCharts$Colors$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$ScatterCharts$DataDependent$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$ScatterCharts$Highlight$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$ScatterCharts$Labels$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$ScatterCharts$Legends$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$ScatterCharts$Opacity$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$ScatterCharts$Shapes$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$ScatterCharts$Sizes$update = F2(
	function (msg, model) {
		return model;
	});
var $author$project$Examples$ScatterCharts$Tooltip$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Examples$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 0:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bh: A2($author$project$Examples$BarCharts$Gradient$update, sub, model.bh)
					});
			case 1:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bi: A2($author$project$Examples$BarCharts$VariableWidth$update, sub, model.bi)
					});
			case 2:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bA: A2($author$project$Examples$BarCharts$Title$update, sub, model.bA)
					});
			case 3:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bL: A2($author$project$Examples$BarCharts$TooltipStack$update, sub, model.bL)
					});
			case 4:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bW: A2($author$project$Examples$BarCharts$Tooltip$update, sub, model.bW)
					});
			case 5:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						b5: A2($author$project$Examples$BarCharts$BarLabels$update, sub, model.b5)
					});
			case 6:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cg: A2($author$project$Examples$BarCharts$Pattern$update, sub, model.cg)
					});
			case 7:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cr: A2($author$project$Examples$BarCharts$Histogram$update, sub, model.cr)
					});
			case 8:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cC: A2($author$project$Examples$BarCharts$BinLabelsAdvanced$update, sub, model.cC)
					});
			case 9:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cN: A2($author$project$Examples$BarCharts$Spacing$update, sub, model.cN)
					});
			case 10:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bj: A2($author$project$Examples$BarCharts$Highlight$update, sub, model.bj)
					});
			case 11:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						br: A2($author$project$Examples$BarCharts$DataDependent$update, sub, model.br)
					});
			case 12:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bs: A2($author$project$Examples$BarCharts$Color$update, sub, model.bs)
					});
			case 13:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bt: A2($author$project$Examples$BarCharts$TooltipBin$update, sub, model.bt)
					});
			case 14:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bu: A2($author$project$Examples$BarCharts$Corners$update, sub, model.bu)
					});
			case 15:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bv: A2($author$project$Examples$BarCharts$Ungroup$update, sub, model.bv)
					});
			case 16:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bw: A2($author$project$Examples$BarCharts$BinLabels$update, sub, model.bw)
					});
			case 17:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bx: A2($author$project$Examples$BarCharts$Stacked$update, sub, model.bx)
					});
			case 18:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						by: A2($author$project$Examples$BarCharts$Margin$update, sub, model.by)
					});
			case 19:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bz: A2($author$project$Examples$BarCharts$Borders$update, sub, model.bz)
					});
			case 20:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bB: A2($author$project$Examples$BarCharts$Opacity$update, sub, model.bB)
					});
			case 21:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bC: A2($author$project$Examples$BarCharts$Legends$update, sub, model.bC)
					});
			case 22:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bD: A2($author$project$Examples$BarCharts$Basic$update, sub, model.bD)
					});
			case 23:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bE: A2($author$project$Examples$Frame$Lines$update, sub, model.bE)
					});
			case 24:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bF: A2($author$project$Examples$Frame$Position$update, sub, model.bF)
					});
			case 25:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bG: A2($author$project$Examples$Frame$Coordinates$update, sub, model.bG)
					});
			case 26:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bH: A2($author$project$Examples$Frame$GridFilter$update, sub, model.bH)
					});
			case 27:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bI: A2($author$project$Examples$Frame$Dimensions$update, sub, model.bI)
					});
			case 28:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bJ: A2($author$project$Examples$Frame$CustomElements$update, sub, model.bJ)
					});
			case 29:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bK: A2($author$project$Examples$Frame$NoArrow$update, sub, model.bK)
					});
			case 30:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bM: A2($author$project$Examples$Frame$Background$update, sub, model.bM)
					});
			case 31:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bN: A2($author$project$Examples$Frame$Rect$update, sub, model.bN)
					});
			case 32:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bO: A2($author$project$Examples$Frame$Padding$update, sub, model.bO)
					});
			case 33:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bP: A2($author$project$Examples$Frame$Times$update, sub, model.bP)
					});
			case 34:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bQ: A2($author$project$Examples$Frame$OnlyInts$update, sub, model.bQ)
					});
			case 35:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bR: A2($author$project$Examples$Frame$GridColor$update, sub, model.bR)
					});
			case 36:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bS: A2($author$project$Examples$Frame$Offset$update, sub, model.bS)
					});
			case 37:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bT: A2($author$project$Examples$Frame$Ellipsis$update, sub, model.bT)
					});
			case 38:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bU: A2($author$project$Examples$Frame$Color$update, sub, model.bU)
					});
			case 39:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bV: A2($author$project$Examples$Frame$Amount$update, sub, model.bV)
					});
			case 40:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bX: A2($author$project$Examples$Frame$Titles$update, sub, model.bX)
					});
			case 41:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bY: A2($author$project$Examples$Frame$CustomLabels$update, sub, model.bY)
					});
			case 42:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bZ: A2($author$project$Examples$Frame$Margin$update, sub, model.bZ)
					});
			case 43:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						b_: A2($author$project$Examples$Frame$LabelWithLine$update, sub, model.b_)
					});
			case 44:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						b$: A2($author$project$Examples$Frame$DotGrid$update, sub, model.b$)
					});
			case 45:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						b0: A2($author$project$Examples$Frame$CustomFormat$update, sub, model.b0)
					});
			case 46:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						b1: A2($author$project$Examples$Frame$AxisLength$update, sub, model.b1)
					});
			case 47:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						b2: A2($author$project$Examples$Frame$Arbitrary$update, sub, model.b2)
					});
			case 48:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						b3: A2($author$project$Examples$Frame$Legends$update, sub, model.b3)
					});
			case 49:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						b4: A2($author$project$Examples$Frame$Basic$update, sub, model.b4)
					});
			case 50:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						b6: A2($author$project$Examples$Interactivity$ChangeContent$update, sub, model.b6)
					});
			case 51:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						b7: A2($author$project$Examples$Interactivity$Direction$update, sub, model.b7)
					});
			case 52:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						b8: A2($author$project$Examples$Interactivity$ChangeDot$update, sub, model.b8)
					});
			case 53:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						b9: A2($author$project$Examples$Interactivity$Border$update, sub, model.b9)
					});
			case 54:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						ca: A2($author$project$Examples$Interactivity$Zoom$update, sub, model.ca)
					});
			case 55:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cb: A2($author$project$Examples$Interactivity$BasicBin$update, sub, model.cb)
					});
			case 56:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cc: A2($author$project$Examples$Interactivity$BasicStack$update, sub, model.cc)
					});
			case 57:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cd: A2($author$project$Examples$Interactivity$Coordinates$update, sub, model.cd)
					});
			case 58:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						ce: A2($author$project$Examples$Interactivity$ChangeName$update, sub, model.ce)
					});
			case 59:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cf: A2($author$project$Examples$Interactivity$NoArrow$update, sub, model.cf)
					});
			case 60:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						ch: A2($author$project$Examples$Interactivity$FilterSearch$update, sub, model.ch)
					});
			case 61:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						ci: A2($author$project$Examples$Interactivity$Background$update, sub, model.ci)
					});
			case 62:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cj: A2($author$project$Examples$Interactivity$BasicBar$update, sub, model.cj)
					});
			case 63:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						ck: A2($author$project$Examples$Interactivity$BasicArea$update, sub, model.ck)
					});
			case 64:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cl: A2($author$project$Examples$Interactivity$ZoomAlt$update, sub, model.cl)
					});
			case 65:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cm: A2($author$project$Examples$Interactivity$TrickyTooltip$update, sub, model.cm)
					});
			case 66:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cn: A2($author$project$Examples$Interactivity$Multiple$update, sub, model.cn)
					});
			case 67:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						co: A2($author$project$Examples$Interactivity$BasicLine$update, sub, model.co)
					});
			case 68:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cp: A2($author$project$Examples$Interactivity$Offset$update, sub, model.cp)
					});
			case 69:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cq: A2($author$project$Examples$Interactivity$DoubleSearch$update, sub, model.cq)
					});
			case 70:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cs: A2($author$project$Examples$Interactivity$ChangeUnit$update, sub, model.cs)
					});
			case 71:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						ct: A2($author$project$Examples$Interactivity$Focal$update, sub, model.ct)
					});
			case 72:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cu: A2($author$project$Examples$LineCharts$Area$update, sub, model.cu)
					});
			case 73:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cv: A2($author$project$Examples$LineCharts$Gradient$update, sub, model.cv)
					});
			case 74:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cw: A2($author$project$Examples$LineCharts$Width$update, sub, model.cw)
					});
			case 75:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cx: A2($author$project$Examples$LineCharts$TooltipStack$update, sub, model.cx)
					});
			case 76:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cy: A2($author$project$Examples$LineCharts$Tooltip$update, sub, model.cy)
					});
			case 77:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cz: A2($author$project$Examples$LineCharts$Montone$update, sub, model.cz)
					});
			case 78:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cA: A2($author$project$Examples$LineCharts$Pattern$update, sub, model.cA)
					});
			case 79:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cB: A2($author$project$Examples$LineCharts$Dots$update, sub, model.cB)
					});
			case 80:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cD: A2($author$project$Examples$LineCharts$Dashed$update, sub, model.cD)
					});
			case 81:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cE: A2($author$project$Examples$LineCharts$Color$update, sub, model.cE)
					});
			case 82:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cF: A2($author$project$Examples$LineCharts$Stepped$update, sub, model.cF)
					});
			case 83:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cG: A2($author$project$Examples$LineCharts$Stacked$update, sub, model.cG)
					});
			case 84:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cH: A2($author$project$Examples$LineCharts$Labels$update, sub, model.cH)
					});
			case 85:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cI: A2($author$project$Examples$LineCharts$Missing$update, sub, model.cI)
					});
			case 86:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cJ: A2($author$project$Examples$LineCharts$Legends$update, sub, model.cJ)
					});
			case 87:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cK: A2($author$project$Examples$LineCharts$Basic$update, sub, model.cK)
					});
			case 88:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cL: A2($author$project$Examples$Frontpage$BasicBubble$update, sub, model.cL)
					});
			case 89:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cM: A2($author$project$Examples$Frontpage$BasicNavigation$update, sub, model.cM)
					});
			case 90:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cO: A2($author$project$Examples$Frontpage$BasicBar$update, sub, model.cO)
					});
			case 91:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cP: A2($author$project$Examples$Frontpage$BasicArea$update, sub, model.cP)
					});
			case 92:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cQ: A2($author$project$Examples$Frontpage$Concise$update, sub, model.cQ)
					});
			case 93:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cR: A2($author$project$Examples$Frontpage$BasicLine$update, sub, model.cR)
					});
			case 94:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cS: A2($author$project$Examples$Frontpage$BasicScatter$update, sub, model.cS)
					});
			case 95:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cT: A2($author$project$Examples$Frontpage$Familiar$update, sub, model.cT)
					});
			case 96:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cU: A2($author$project$Examples$ScatterCharts$Colors$update, sub, model.cU)
					});
			case 97:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cV: A2($author$project$Examples$ScatterCharts$Shapes$update, sub, model.cV)
					});
			case 98:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cW: A2($author$project$Examples$ScatterCharts$Tooltip$update, sub, model.cW)
					});
			case 99:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						cX: A2($author$project$Examples$ScatterCharts$Highlight$update, sub, model.cX)
					});
			case 100:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bk: A2($author$project$Examples$ScatterCharts$DataDependent$update, sub, model.bk)
					});
			case 101:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bl: A2($author$project$Examples$ScatterCharts$Borders$update, sub, model.bl)
					});
			case 102:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bm: A2($author$project$Examples$ScatterCharts$Labels$update, sub, model.bm)
					});
			case 103:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bn: A2($author$project$Examples$ScatterCharts$Opacity$update, sub, model.bn)
					});
			case 104:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bo: A2($author$project$Examples$ScatterCharts$Sizes$update, sub, model.bo)
					});
			case 105:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bp: A2($author$project$Examples$ScatterCharts$Legends$update, sub, model.bp)
					});
			default:
				var sub = msg.a;
				return _Utils_update(
					model,
					{
						bq: A2($author$project$Examples$ScatterCharts$Basic$update, sub, model.bq)
					});
		}
	});
var $author$project$Page$Section$update = F3(
	function (key, msg, model) {
		switch (msg.$) {
			case 0:
				var width = msg.a;
				var height = msg.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							a$: {U: height, h: width}
						}),
					$elm$core$Platform$Cmd$none);
			case 1:
				var subMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							c4: A2($author$project$Ui$Menu$update, subMsg, model.c4)
						}),
					$elm$core$Platform$Cmd$none);
			default:
				var sub = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							cY: A2($author$project$Examples$update, sub, model.cY)
						}),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Page$Documentation$update = $author$project$Page$Section$update;
var $author$project$Page$Example$update = F3(
	function (key, msg, model) {
		switch (msg.$) {
			case 0:
				var width = msg.a;
				var height = msg.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							a$: {U: height, h: width}
						}),
					$elm$core$Platform$Cmd$none);
			case 1:
				var subMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							c4: A2($author$project$Ui$Menu$update, subMsg, model.c4)
						}),
					$elm$core$Platform$Cmd$none);
			case 2:
				var sub = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							cY: A2($author$project$Examples$update, sub, model.cY)
						}),
					$elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{aX: !model.aX}),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Page$GettingStarted$update = F3(
	function (key, msg, model) {
		switch (msg.$) {
			case 0:
				var width = msg.a;
				var height = msg.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							a$: {U: height, h: width}
						}),
					$elm$core$Platform$Cmd$none);
			case 1:
				var subMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							c4: A2($author$project$Ui$Menu$update, subMsg, model.c4)
						}),
					$elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Charts$Dashboard1$update = F2(
	function (msg, model) {
		var hovering = msg.a;
		var hoveringBars = msg.b;
		return _Utils_update(
			model,
			{c$: hovering, c0: hoveringBars});
	});
var $author$project$Charts$Dashboard2$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Charts$Dashboard3$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Charts$Dashboard4$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Charts$Dashboard5$update = F2(
	function (msg, model) {
		var hovering = msg;
		return _Utils_update(
			model,
			{c$: hovering});
	});
var $author$project$Charts$Landing$update = F2(
	function (msg, model) {
		var hovering = msg.a;
		var hoveringBars = msg.b;
		return _Utils_update(
			model,
			{c$: hovering, c0: hoveringBars});
	});
var $author$project$Page$Home$update = F3(
	function (key, msg, model) {
		switch (msg.$) {
			case 0:
				var width = msg.a;
				var height = msg.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							a$: {U: height, h: width}
						}),
					$elm$core$Platform$Cmd$none);
			case 1:
				var subMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							c4: A2($author$project$Ui$Menu$update, subMsg, model.c4)
						}),
					$elm$core$Platform$Cmd$none);
			case 3:
				var subMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							a8: A2($author$project$Examples$Frontpage$Concise$update, subMsg, model.a8)
						}),
					$elm$core$Platform$Cmd$none);
			case 4:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{cZ: !model.cZ}),
					$elm$core$Platform$Cmd$none);
			case 2:
				var subMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							dM: A2($author$project$Charts$Landing$update, subMsg, model.dM)
						}),
					$elm$core$Platform$Cmd$none);
			case 5:
				var hovering = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{c$: hovering}),
					$elm$core$Platform$Cmd$none);
			case 7:
				var subMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							ba: A2($author$project$Charts$Dashboard1$update, subMsg, model.ba)
						}),
					$elm$core$Platform$Cmd$none);
			case 8:
				var subMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							bb: A2($author$project$Charts$Dashboard2$update, subMsg, model.bb)
						}),
					$elm$core$Platform$Cmd$none);
			case 9:
				var subMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							bc: A2($author$project$Charts$Dashboard3$update, subMsg, model.bc)
						}),
					$elm$core$Platform$Cmd$none);
			case 10:
				var subMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							bd: A2($author$project$Charts$Dashboard4$update, subMsg, model.bd)
						}),
					$elm$core$Platform$Cmd$none);
			case 11:
				var subMsg = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							dA: A2($author$project$Charts$Dashboard5$update, subMsg, model.dA)
						}),
					$elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Main$update = F2(
	function (msg, model) {
		var _v0 = _Utils_Tuple2(msg, model.aH);
		_v0$8:
		while (true) {
			switch (_v0.a.$) {
				case 1:
					var urlRequest = _v0.a.a;
					if (!urlRequest.$) {
						var url = urlRequest.a;
						return _Utils_Tuple2(
							model,
							A2(
								$elm$browser$Browser$Navigation$pushUrl,
								model.E,
								$elm$url$Url$toString(url)));
					} else {
						var href = urlRequest.a;
						return _Utils_Tuple2(
							model,
							$elm$browser$Browser$Navigation$load(href));
					}
				case 0:
					var url = _v0.a.a;
					return A2(
						$author$project$Main$changeRouteTo,
						$author$project$Route$fromUrl(url),
						model);
				case 2:
					if (_v0.b.$ === 2) {
						var subMsg = _v0.a.a;
						var subModel = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$Page_Home,
							$author$project$Main$Page_Home_Msg,
							model,
							A3($author$project$Page$Home$update, model.E, subMsg, subModel));
					} else {
						break _v0$8;
					}
				case 3:
					if (_v0.b.$ === 3) {
						var subMsg = _v0.a.a;
						var subModel = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$Page_Administration,
							$author$project$Main$Page_Administration_Msg,
							model,
							A3($author$project$Page$Administration$update, model.E, subMsg, subModel));
					} else {
						break _v0$8;
					}
				case 4:
					if (_v0.b.$ === 4) {
						var subMsg = _v0.a.a;
						var subModel = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$Page_Documentation,
							$author$project$Main$Page_Documentation_Msg,
							model,
							A3($author$project$Page$Documentation$update, model.E, subMsg, subModel));
					} else {
						break _v0$8;
					}
				case 5:
					if (_v0.b.$ === 5) {
						var subMsg = _v0.a.a;
						var subModel = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$Page_Section,
							$author$project$Main$Page_Section_Msg,
							model,
							A3($author$project$Page$Section$update, model.E, subMsg, subModel));
					} else {
						break _v0$8;
					}
				case 6:
					if (_v0.b.$ === 6) {
						var subMsg = _v0.a.a;
						var subModel = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$Page_Example,
							$author$project$Main$Page_Example_Msg,
							model,
							A3($author$project$Page$Example$update, model.E, subMsg, subModel));
					} else {
						break _v0$8;
					}
				default:
					if (_v0.b.$ === 7) {
						var subMsg = _v0.a.a;
						var subModel = _v0.b.a;
						return A4(
							$author$project$Main$updateWith,
							$author$project$Main$Page_GettingStarted,
							$author$project$Main$Page_GettingStarted_Msg,
							model,
							A3($author$project$Page$GettingStarted$update, model.E, subMsg, subModel));
					} else {
						break _v0$8;
					}
			}
		}
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	});
var $elm$json$Json$Decode$value = _Json_decodeValue;
var $elm$virtual_dom$VirtualDom$map = _VirtualDom_map;
var $elm$html$Html$map = $elm$virtual_dom$VirtualDom$map;
var $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;
var $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;
var $author$project$Page$Administration$MenuMsg = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Unkeyed = function (a) {
	return {$: 0, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$AsEl = 2;
var $mdgriffith$elm_ui$Internal$Model$asEl = 2;
var $mdgriffith$elm_ui$Internal$Model$Generic = {$: 0};
var $mdgriffith$elm_ui$Internal$Model$div = $mdgriffith$elm_ui$Internal$Model$Generic;
var $mdgriffith$elm_ui$Internal$Model$NoNearbyChildren = {$: 0};
var $mdgriffith$elm_ui$Internal$Style$classes = {gB: 'a', d1: 'atv', gF: 'ab', gG: 'cx', gH: 'cy', gI: 'acb', gJ: 'accx', gK: 'accy', gL: 'acr', eU: 'al', eV: 'ar', gM: 'at', d2: 'ah', d3: 'av', gP: 's', gX: 'bh', gY: 'b', g_: 'w7', g0: 'bd', g1: 'bdt', ds: 'bn', g2: 'bs', dt: 'cpe', hb: 'cp', hc: 'cpx', hd: 'cpy', ac: 'c', dw: 'ctr', dx: 'cb', dy: 'ccx', at: 'ccy', a9: 'cl', dz: 'cr', he: 'ct', hg: 'cptr', hh: 'ctxt', hz: 'fcs', ff: 'focus-within', hB: 'fs', l: 'g', ed: 'hbh', ee: 'hc', fl: 'he', ef: 'hf', fm: 'hfp', hH: 'hv', hK: 'ic', hM: 'fr', dK: 'lbl', hP: 'iml', hQ: 'imlf', hR: 'imlp', hS: 'implw', hT: 'it', hX: 'i', fz: 'lnk', aV: 'nb', fE: 'notxt', h9: 'ol', ib: 'or', aG: 'oq', ig: 'oh', aH: 'pg', fK: 'p', ih: 'ppe', ip: 'ui', aj: 'r', iu: 'sb', iv: 'sbx', iw: 'sby', ix: 'sbt', iC: 'e', iE: 'cap', iF: 'sev', iL: 'sk', V: 't', iQ: 'tc', iR: 'w8', iS: 'w2', iT: 'w9', iU: 'tj', d_: 'tja', iV: 'tl', iW: 'w3', iX: 'w5', iY: 'w4', iZ: 'tr', i_: 'w6', i$: 'w1', i0: 'tun', gb: 'ts', aL: 'clr', jn: 'u', eM: 'wc', gi: 'we', eN: 'wf', gj: 'wfp', eO: 'wrp'};
var $mdgriffith$elm_ui$Internal$Model$columnClass = $mdgriffith$elm_ui$Internal$Style$classes.gP + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.ac);
var $mdgriffith$elm_ui$Internal$Model$gridClass = $mdgriffith$elm_ui$Internal$Style$classes.gP + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.l);
var $mdgriffith$elm_ui$Internal$Model$pageClass = $mdgriffith$elm_ui$Internal$Style$classes.gP + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.aH);
var $mdgriffith$elm_ui$Internal$Model$paragraphClass = $mdgriffith$elm_ui$Internal$Style$classes.gP + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.fK);
var $mdgriffith$elm_ui$Internal$Model$rowClass = $mdgriffith$elm_ui$Internal$Style$classes.gP + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.aj);
var $mdgriffith$elm_ui$Internal$Model$singleClass = $mdgriffith$elm_ui$Internal$Style$classes.gP + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.iC);
var $mdgriffith$elm_ui$Internal$Model$contextClasses = function (context) {
	switch (context) {
		case 0:
			return $mdgriffith$elm_ui$Internal$Model$rowClass;
		case 1:
			return $mdgriffith$elm_ui$Internal$Model$columnClass;
		case 2:
			return $mdgriffith$elm_ui$Internal$Model$singleClass;
		case 3:
			return $mdgriffith$elm_ui$Internal$Model$gridClass;
		case 4:
			return $mdgriffith$elm_ui$Internal$Model$paragraphClass;
		default:
			return $mdgriffith$elm_ui$Internal$Model$pageClass;
	}
};
var $mdgriffith$elm_ui$Internal$Model$Keyed = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$NoStyleSheet = {$: 0};
var $mdgriffith$elm_ui$Internal$Model$Styled = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Unstyled = function (a) {
	return {$: 0, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$addChildren = F2(
	function (existing, nearbyChildren) {
		switch (nearbyChildren.$) {
			case 0:
				return existing;
			case 1:
				var behind = nearbyChildren.a;
				return _Utils_ap(behind, existing);
			case 2:
				var inFront = nearbyChildren.a;
				return _Utils_ap(existing, inFront);
			default:
				var behind = nearbyChildren.a;
				var inFront = nearbyChildren.b;
				return _Utils_ap(
					behind,
					_Utils_ap(existing, inFront));
		}
	});
var $mdgriffith$elm_ui$Internal$Model$addKeyedChildren = F3(
	function (key, existing, nearbyChildren) {
		switch (nearbyChildren.$) {
			case 0:
				return existing;
			case 1:
				var behind = nearbyChildren.a;
				return _Utils_ap(
					A2(
						$elm$core$List$map,
						function (x) {
							return _Utils_Tuple2(key, x);
						},
						behind),
					existing);
			case 2:
				var inFront = nearbyChildren.a;
				return _Utils_ap(
					existing,
					A2(
						$elm$core$List$map,
						function (x) {
							return _Utils_Tuple2(key, x);
						},
						inFront));
			default:
				var behind = nearbyChildren.a;
				var inFront = nearbyChildren.b;
				return _Utils_ap(
					A2(
						$elm$core$List$map,
						function (x) {
							return _Utils_Tuple2(key, x);
						},
						behind),
					_Utils_ap(
						existing,
						A2(
							$elm$core$List$map,
							function (x) {
								return _Utils_Tuple2(key, x);
							},
							inFront)));
		}
	});
var $mdgriffith$elm_ui$Internal$Model$AsParagraph = 4;
var $mdgriffith$elm_ui$Internal$Model$asParagraph = 4;
var $mdgriffith$elm_ui$Internal$Flag$Flag = function (a) {
	return {$: 0, a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$Second = function (a) {
	return {$: 1, a: a};
};
var $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;
var $mdgriffith$elm_ui$Internal$Flag$flag = function (i) {
	return (i > 31) ? $mdgriffith$elm_ui$Internal$Flag$Second(1 << (i - 32)) : $mdgriffith$elm_ui$Internal$Flag$Flag(1 << i);
};
var $mdgriffith$elm_ui$Internal$Flag$alignBottom = $mdgriffith$elm_ui$Internal$Flag$flag(41);
var $mdgriffith$elm_ui$Internal$Flag$alignRight = $mdgriffith$elm_ui$Internal$Flag$flag(40);
var $mdgriffith$elm_ui$Internal$Flag$centerX = $mdgriffith$elm_ui$Internal$Flag$flag(42);
var $mdgriffith$elm_ui$Internal$Flag$centerY = $mdgriffith$elm_ui$Internal$Flag$flag(43);
var $elm$json$Json$Encode$string = _Json_wrap;
var $elm$html$Html$Attributes$stringProperty = F2(
	function (key, string) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$string(string));
	});
var $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');
var $elm$html$Html$div = _VirtualDom_node('div');
var $elm$core$Set$Set_elm_builtin = $elm$core$Basics$identity;
var $elm$core$Set$empty = $elm$core$Dict$empty;
var $mdgriffith$elm_ui$Internal$Model$lengthClassName = function (x) {
	switch (x.$) {
		case 0:
			var px = x.a;
			return $elm$core$String$fromInt(px) + 'px';
		case 1:
			return 'auto';
		case 2:
			var i = x.a;
			return $elm$core$String$fromInt(i) + 'fr';
		case 3:
			var min = x.a;
			var len = x.b;
			return 'min' + ($elm$core$String$fromInt(min) + $mdgriffith$elm_ui$Internal$Model$lengthClassName(len));
		default:
			var max = x.a;
			var len = x.b;
			return 'max' + ($elm$core$String$fromInt(max) + $mdgriffith$elm_ui$Internal$Model$lengthClassName(len));
	}
};
var $elm$core$Tuple$second = function (_v0) {
	var y = _v0.b;
	return y;
};
var $elm$core$Basics$round = _Basics_round;
var $mdgriffith$elm_ui$Internal$Model$floatClass = function (x) {
	return $elm$core$String$fromInt(
		$elm$core$Basics$round(x * 255));
};
var $mdgriffith$elm_ui$Internal$Model$transformClass = function (transform) {
	switch (transform.$) {
		case 0:
			return $elm$core$Maybe$Nothing;
		case 1:
			var _v1 = transform.a;
			var x = _v1.a;
			var y = _v1.b;
			var z = _v1.c;
			return $elm$core$Maybe$Just(
				'mv-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(x) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(y) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(z))))));
		default:
			var _v2 = transform.a;
			var tx = _v2.a;
			var ty = _v2.b;
			var tz = _v2.c;
			var _v3 = transform.b;
			var sx = _v3.a;
			var sy = _v3.b;
			var sz = _v3.c;
			var _v4 = transform.c;
			var ox = _v4.a;
			var oy = _v4.b;
			var oz = _v4.c;
			var angle = transform.d;
			return $elm$core$Maybe$Just(
				'tfrm-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(tx) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(ty) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(tz) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sx) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sy) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sz) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(ox) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(oy) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(oz) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(angle))))))))))))))))))));
	}
};
var $mdgriffith$elm_ui$Internal$Model$getStyleName = function (style) {
	switch (style.$) {
		case 13:
			var name = style.a;
			return name;
		case 12:
			var name = style.a;
			var o = style.b;
			return name;
		case 0:
			var _class = style.a;
			return _class;
		case 1:
			var name = style.a;
			return name;
		case 2:
			var i = style.a;
			return 'font-size-' + $elm$core$String$fromInt(i);
		case 3:
			var _class = style.a;
			return _class;
		case 4:
			var _class = style.a;
			return _class;
		case 5:
			var cls = style.a;
			var x = style.b;
			var y = style.c;
			return cls;
		case 7:
			var cls = style.a;
			var top = style.b;
			var right = style.c;
			var bottom = style.d;
			var left = style.e;
			return cls;
		case 6:
			var cls = style.a;
			var top = style.b;
			var right = style.c;
			var bottom = style.d;
			var left = style.e;
			return cls;
		case 8:
			var template = style.a;
			return 'grid-rows-' + (A2(
				$elm$core$String$join,
				'-',
				A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.it)) + ('-cols-' + (A2(
				$elm$core$String$join,
				'-',
				A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.ao)) + ('-space-x-' + ($mdgriffith$elm_ui$Internal$Model$lengthClassName(template.iG.a) + ('-space-y-' + $mdgriffith$elm_ui$Internal$Model$lengthClassName(template.iG.b)))))));
		case 9:
			var pos = style.a;
			return 'gp grid-pos-' + ($elm$core$String$fromInt(pos.aj) + ('-' + ($elm$core$String$fromInt(pos.e3) + ('-' + ($elm$core$String$fromInt(pos.h) + ('-' + $elm$core$String$fromInt(pos.U)))))));
		case 11:
			var selector = style.a;
			var subStyle = style.b;
			var name = function () {
				switch (selector) {
					case 0:
						return 'fs';
					case 1:
						return 'hv';
					default:
						return 'act';
				}
			}();
			return A2(
				$elm$core$String$join,
				' ',
				A2(
					$elm$core$List$map,
					function (sty) {
						var _v1 = $mdgriffith$elm_ui$Internal$Model$getStyleName(sty);
						if (_v1 === '') {
							return '';
						} else {
							var styleName = _v1;
							return styleName + ('-' + name);
						}
					},
					subStyle));
		default:
			var x = style.a;
			return A2(
				$elm$core$Maybe$withDefault,
				'',
				$mdgriffith$elm_ui$Internal$Model$transformClass(x));
	}
};
var $elm$core$Set$insert = F2(
	function (key, _v0) {
		var dict = _v0;
		return A3($elm$core$Dict$insert, key, 0, dict);
	});
var $elm$core$Dict$member = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$get, key, dict);
		if (!_v0.$) {
			return true;
		} else {
			return false;
		}
	});
var $elm$core$Set$member = F2(
	function (key, _v0) {
		var dict = _v0;
		return A2($elm$core$Dict$member, key, dict);
	});
var $mdgriffith$elm_ui$Internal$Model$reduceStyles = F2(
	function (style, nevermind) {
		var cache = nevermind.a;
		var existing = nevermind.b;
		var styleName = $mdgriffith$elm_ui$Internal$Model$getStyleName(style);
		return A2($elm$core$Set$member, styleName, cache) ? nevermind : _Utils_Tuple2(
			A2($elm$core$Set$insert, styleName, cache),
			A2($elm$core$List$cons, style, existing));
	});
var $mdgriffith$elm_ui$Internal$Model$Property = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$Style = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$dot = function (c) {
	return '.' + c;
};
var $elm$core$String$fromFloat = _String_fromNumber;
var $mdgriffith$elm_ui$Internal$Model$formatColor = function (_v0) {
	var red = _v0.a;
	var green = _v0.b;
	var blue = _v0.c;
	var alpha = _v0.d;
	return 'rgba(' + ($elm$core$String$fromInt(
		$elm$core$Basics$round(red * 255)) + ((',' + $elm$core$String$fromInt(
		$elm$core$Basics$round(green * 255))) + ((',' + $elm$core$String$fromInt(
		$elm$core$Basics$round(blue * 255))) + (',' + ($elm$core$String$fromFloat(alpha) + ')')))));
};
var $mdgriffith$elm_ui$Internal$Model$formatBoxShadow = function (shadow) {
	return A2(
		$elm$core$String$join,
		' ',
		A2(
			$elm$core$List$filterMap,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					shadow.ft ? $elm$core$Maybe$Just('inset') : $elm$core$Maybe$Nothing,
					$elm$core$Maybe$Just(
					$elm$core$String$fromFloat(shadow.h8.a) + 'px'),
					$elm$core$Maybe$Just(
					$elm$core$String$fromFloat(shadow.h8.b) + 'px'),
					$elm$core$Maybe$Just(
					$elm$core$String$fromFloat(shadow.aP) + 'px'),
					$elm$core$Maybe$Just(
					$elm$core$String$fromFloat(shadow.iD) + 'px'),
					$elm$core$Maybe$Just(
					$mdgriffith$elm_ui$Internal$Model$formatColor(shadow.d))
				])));
};
var $elm$core$Maybe$map = F2(
	function (f, maybe) {
		if (!maybe.$) {
			var value = maybe.a;
			return $elm$core$Maybe$Just(
				f(value));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $elm$core$Tuple$mapFirst = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			func(x),
			y);
	});
var $elm$core$Tuple$mapSecond = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			x,
			func(y));
	});
var $mdgriffith$elm_ui$Internal$Model$renderFocusStyle = function (focus) {
	return _List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Internal$Model$Style,
			$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ff) + ':focus-within',
			A2(
				$elm$core$List$filterMap,
				$elm$core$Basics$identity,
				_List_fromArray(
					[
						A2(
						$elm$core$Maybe$map,
						function (color) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'border-color',
								$mdgriffith$elm_ui$Internal$Model$formatColor(color));
						},
						focus.g$),
						A2(
						$elm$core$Maybe$map,
						function (color) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'background-color',
								$mdgriffith$elm_ui$Internal$Model$formatColor(color));
						},
						focus.gU),
						A2(
						$elm$core$Maybe$map,
						function (shadow) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'box-shadow',
								$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(
									{
										aP: shadow.aP,
										d: shadow.d,
										ft: false,
										h8: A2(
											$elm$core$Tuple$mapSecond,
											$elm$core$Basics$toFloat,
											A2($elm$core$Tuple$mapFirst, $elm$core$Basics$toFloat, shadow.h8)),
										iD: shadow.iD
									}));
						},
						focus.iA),
						$elm$core$Maybe$Just(
						A2($mdgriffith$elm_ui$Internal$Model$Property, 'outline', 'none'))
					]))),
			A2(
			$mdgriffith$elm_ui$Internal$Model$Style,
			($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP) + ':focus .focusable, ') + (($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP) + '.focusable:focus, ') + ('.ui-slide-bar:focus + ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP) + ' .focusable-thumb'))),
			A2(
				$elm$core$List$filterMap,
				$elm$core$Basics$identity,
				_List_fromArray(
					[
						A2(
						$elm$core$Maybe$map,
						function (color) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'border-color',
								$mdgriffith$elm_ui$Internal$Model$formatColor(color));
						},
						focus.g$),
						A2(
						$elm$core$Maybe$map,
						function (color) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'background-color',
								$mdgriffith$elm_ui$Internal$Model$formatColor(color));
						},
						focus.gU),
						A2(
						$elm$core$Maybe$map,
						function (shadow) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'box-shadow',
								$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(
									{
										aP: shadow.aP,
										d: shadow.d,
										ft: false,
										h8: A2(
											$elm$core$Tuple$mapSecond,
											$elm$core$Basics$toFloat,
											A2($elm$core$Tuple$mapFirst, $elm$core$Basics$toFloat, shadow.h8)),
										iD: shadow.iD
									}));
						},
						focus.iA),
						$elm$core$Maybe$Just(
						A2($mdgriffith$elm_ui$Internal$Model$Property, 'outline', 'none'))
					])))
		]);
};
var $elm$virtual_dom$VirtualDom$node = function (tag) {
	return _VirtualDom_node(
		_VirtualDom_noScript(tag));
};
var $elm$virtual_dom$VirtualDom$property = F2(
	function (key, value) {
		return A2(
			_VirtualDom_property,
			_VirtualDom_noInnerHtmlOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $mdgriffith$elm_ui$Internal$Style$AllChildren = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Batch = function (a) {
	return {$: 6, a: a};
};
var $mdgriffith$elm_ui$Internal$Style$Child = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Class = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Descriptor = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Left = 3;
var $mdgriffith$elm_ui$Internal$Style$Prop = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Right = 2;
var $mdgriffith$elm_ui$Internal$Style$Self = $elm$core$Basics$identity;
var $mdgriffith$elm_ui$Internal$Style$Supports = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Content = $elm$core$Basics$identity;
var $mdgriffith$elm_ui$Internal$Style$Bottom = 1;
var $mdgriffith$elm_ui$Internal$Style$CenterX = 4;
var $mdgriffith$elm_ui$Internal$Style$CenterY = 5;
var $mdgriffith$elm_ui$Internal$Style$Top = 0;
var $mdgriffith$elm_ui$Internal$Style$alignments = _List_fromArray(
	[0, 1, 2, 3, 4, 5]);
var $mdgriffith$elm_ui$Internal$Style$contentName = function (desc) {
	switch (desc) {
		case 0:
			var _v1 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.he);
		case 1:
			var _v2 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dx);
		case 2:
			var _v3 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dz);
		case 3:
			var _v4 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.a9);
		case 4:
			var _v5 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dy);
		default:
			var _v6 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.at);
	}
};
var $mdgriffith$elm_ui$Internal$Style$selfName = function (desc) {
	switch (desc) {
		case 0:
			var _v1 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gM);
		case 1:
			var _v2 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gF);
		case 2:
			var _v3 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eV);
		case 3:
			var _v4 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eU);
		case 4:
			var _v5 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gG);
		default:
			var _v6 = desc;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gH);
	}
};
var $mdgriffith$elm_ui$Internal$Style$describeAlignment = function (values) {
	var createDescription = function (alignment) {
		var _v0 = values(alignment);
		var content = _v0.a;
		var indiv = _v0.b;
		return _List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$contentName(alignment),
				content),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$selfName(alignment),
						indiv)
					]))
			]);
	};
	return $mdgriffith$elm_ui$Internal$Style$Batch(
		A2($elm$core$List$concatMap, createDescription, $mdgriffith$elm_ui$Internal$Style$alignments));
};
var $mdgriffith$elm_ui$Internal$Style$elDescription = _List_fromArray(
	[
		A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
		A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'column'),
		A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre'),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Descriptor,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ed),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gX),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '-1')
					]))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Descriptor,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ix),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.V),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ef),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eN),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'auto !important')
							]))
					]))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ee),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ef),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eN),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gj),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eM),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
			])),
		$mdgriffith$elm_ui$Internal$Style$describeAlignment(
		function (alignment) {
			switch (alignment) {
				case 0:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', '0 !important')
							]));
				case 1:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', '0 !important')
							]));
				case 2:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')
							]));
				case 3:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
							]));
				case 4:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')
							]));
				default:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto')
									]))
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')
							]));
			}
		})
	]);
var $mdgriffith$elm_ui$Internal$Style$gridAlignments = function (values) {
	var createDescription = function (alignment) {
		return _List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$selfName(alignment),
						values(alignment))
					]))
			]);
	};
	return $mdgriffith$elm_ui$Internal$Style$Batch(
		A2($elm$core$List$concatMap, createDescription, $mdgriffith$elm_ui$Internal$Style$alignments));
};
var $mdgriffith$elm_ui$Internal$Style$Above = 0;
var $mdgriffith$elm_ui$Internal$Style$Behind = 5;
var $mdgriffith$elm_ui$Internal$Style$Below = 1;
var $mdgriffith$elm_ui$Internal$Style$OnLeft = 3;
var $mdgriffith$elm_ui$Internal$Style$OnRight = 2;
var $mdgriffith$elm_ui$Internal$Style$Within = 4;
var $mdgriffith$elm_ui$Internal$Style$locations = function () {
	var loc = 0;
	var _v0 = function () {
		switch (loc) {
			case 0:
				return 0;
			case 1:
				return 0;
			case 2:
				return 0;
			case 3:
				return 0;
			case 4:
				return 0;
			default:
				return 0;
		}
	}();
	return _List_fromArray(
		[0, 1, 2, 3, 4, 5]);
}();
var $mdgriffith$elm_ui$Internal$Style$baseSheet = _List_fromArray(
	[
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		'html,body',
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		_Utils_ap(
			$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP),
			_Utils_ap(
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iC),
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hK))),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ef),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'img',
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'max-height', '100%'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'object-fit', 'cover')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eN),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'img',
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'max-width', '100%'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'object-fit', 'cover')
							]))
					]))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP) + ':focus',
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'outline', 'none')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ip),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'min-height', '100%'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				_Utils_ap(
					$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP),
					$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ef)),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ef),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hM),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aV),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'fixed'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20')
							]))
					]))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aV),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'relative'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border', 'none'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iC),
				$mdgriffith$elm_ui$Internal$Style$elDescription),
				$mdgriffith$elm_ui$Internal$Style$Batch(
				function (fn) {
					return A2($elm$core$List$map, fn, $mdgriffith$elm_ui$Internal$Style$locations);
				}(
					function (loc) {
						switch (loc) {
							case 0:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gB),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'bottom', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ef),
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')
												])),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eN),
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
												])),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
							case 1:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gY),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'bottom', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												])),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ef),
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')
												]))
										]));
							case 2:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ib),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
							case 3:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.h9),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'right', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
							case 4:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hM),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
							default:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gX),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
						}
					}))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'relative'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border', 'none'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'resize', 'none'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'box-sizing', 'border-box'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'solid'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-size', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'color', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-family', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'line-height', '1'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'none'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'inherit'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eO),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-wrap', 'wrap')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.fE),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, '-moz-user-select', 'none'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, '-webkit-user-select', 'none'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, '-ms-user-select', 'none'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'user-select', 'none')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hg),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'pointer')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hh),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'text')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ih),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none !important')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dt),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto !important')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aL),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aG),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.hH, $mdgriffith$elm_ui$Internal$Style$classes.aL)) + ':hover',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.hH, $mdgriffith$elm_ui$Internal$Style$classes.aG)) + ':hover',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.hz, $mdgriffith$elm_ui$Internal$Style$classes.aL)) + ':focus',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.hz, $mdgriffith$elm_ui$Internal$Style$classes.aG)) + ':focus',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.d1, $mdgriffith$elm_ui$Internal$Style$classes.aL)) + ':active',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.d1, $mdgriffith$elm_ui$Internal$Style$classes.aG)) + ':active',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gb),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Prop,
						'transition',
						A2(
							$elm$core$String$join,
							', ',
							A2(
								$elm$core$List$map,
								function (x) {
									return x + ' 160ms';
								},
								_List_fromArray(
									['transform', 'opacity', 'filter', 'background-color', 'color', 'font-size']))))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iu),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow', 'auto'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iv),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-x', 'auto'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aj),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iw),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-y', 'auto'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ac),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iC),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hb),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow', 'hidden')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hc),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-x', 'hidden')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hd),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-y', 'hidden')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eM),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', 'auto')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ds),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.g0),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'dashed')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.g1),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'dotted')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.g2),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'solid')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.V),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-block')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hT),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'line-height', '1.05'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'background', 'transparent'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'inherit')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iC),
				$mdgriffith$elm_ui$Internal$Style$elDescription),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aj),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', '0%'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gi),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.fz),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ef),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.fm),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eN),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dw),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'u:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.gL,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.gJ,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gG),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-left', 'auto !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:last-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.gJ,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gG),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-right', 'auto !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:only-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.gJ,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gH),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:last-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.gJ + ' ~ u'),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'u:first-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.gL + (' ~ s.' + $mdgriffith$elm_ui$Internal$Style$classes.gJ)),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						$mdgriffith$elm_ui$Internal$Style$describeAlignment(
						function (alignment) {
							switch (alignment) {
								case 0:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
											]));
								case 1:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')
											]));
								case 2:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
											]),
										_List_Nil);
								case 3:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
											]),
										_List_Nil);
								case 4:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')
											]),
										_List_Nil);
								default:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')
											]));
							}
						}),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iF),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'space-between')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dK),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'baseline')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ac),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'column'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', '0px'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'min-height', 'min-content'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.fl),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ef),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eN),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gj),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.eM),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'u:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.gI,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.gK,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gH),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', '0 !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:last-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.gK,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gH),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', '0 !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:only-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.gK,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gH),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:last-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.gK + ' ~ u'),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'u:first-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.gI + (' ~ s.' + $mdgriffith$elm_ui$Internal$Style$classes.gK)),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						$mdgriffith$elm_ui$Internal$Style$describeAlignment(
						function (alignment) {
							switch (alignment) {
								case 0:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto')
											]));
								case 1:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto')
											]));
								case 2:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')
											]));
								case 3:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
											]));
								case 4:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')
											]));
								default:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')
											]),
										_List_Nil);
							}
						}),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dw),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iF),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'space-between')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.l),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', '-ms-grid'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'.gp',
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Supports,
						_Utils_Tuple2('display', 'grid'),
						_List_fromArray(
							[
								_Utils_Tuple2('display', 'grid')
							])),
						$mdgriffith$elm_ui$Internal$Style$gridAlignments(
						function (alignment) {
							switch (alignment) {
								case 0:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
										]);
								case 1:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
										]);
								case 2:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
										]);
								case 3:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
										]);
								case 4:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
										]);
								default:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')
										]);
							}
						})
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aH),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP + ':first-child'),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot(
							$mdgriffith$elm_ui$Internal$Style$classes.gP + ($mdgriffith$elm_ui$Internal$Style$selfName(3) + (':first-child + .' + $mdgriffith$elm_ui$Internal$Style$classes.gP))),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot(
							$mdgriffith$elm_ui$Internal$Style$classes.gP + ($mdgriffith$elm_ui$Internal$Style$selfName(2) + (':first-child + .' + $mdgriffith$elm_ui$Internal$Style$classes.gP))),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')
							])),
						$mdgriffith$elm_ui$Internal$Style$describeAlignment(
						function (alignment) {
							switch (alignment) {
								case 0:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								case 1:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								case 2:
									return _Utils_Tuple2(
										_List_Nil,
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'right'),
												A2(
												$mdgriffith$elm_ui$Internal$Style$Descriptor,
												'::after',
												_List_fromArray(
													[
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', '\"\"'),
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'table'),
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'clear', 'both')
													]))
											]));
								case 3:
									return _Utils_Tuple2(
										_List_Nil,
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'left'),
												A2(
												$mdgriffith$elm_ui$Internal$Style$Descriptor,
												'::after',
												_List_fromArray(
													[
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', '\"\"'),
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'table'),
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'clear', 'both')
													]))
											]));
								case 4:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								default:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
							}
						})
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hP),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'background-color', 'transparent')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hS),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iC),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hR),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'text'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hQ),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'color', 'transparent')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.fK),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-wrap', 'break-word'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ed),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gX),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '-1')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$AllChildren,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.V),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$AllChildren,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.fK),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								'::after',
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', 'none')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								'::before',
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', 'none')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$AllChildren,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iC),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gi),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-block')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hM),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gX),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gB),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gY),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ib),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.h9),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.V),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aj),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.ac),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-flex')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.l),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-grid')
							])),
						$mdgriffith$elm_ui$Internal$Style$describeAlignment(
						function (alignment) {
							switch (alignment) {
								case 0:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								case 1:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								case 2:
									return _Utils_Tuple2(
										_List_Nil,
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'right')
											]));
								case 3:
									return _Utils_Tuple2(
										_List_Nil,
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'left')
											]));
								case 4:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								default:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
							}
						})
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				'.hidden',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'none')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.i$),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '100')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iS),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '200')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iW),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '300')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iY),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '400')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iX),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '500')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.i_),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '600')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.g_),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '700')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iR),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '800')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iT),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '900')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hX),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'italic')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iL),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'line-through')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jn),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'underline'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip-ink', 'auto'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip', 'ink')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				_Utils_ap(
					$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.jn),
					$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iL)),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'line-through underline'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip-ink', 'auto'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip', 'ink')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.i0),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'normal')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iU),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'justify')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.d_),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'justify-all')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iQ),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'center')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iZ),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'right')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.iV),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'left')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				'.modal',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'fixed'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none')
					]))
			]))
	]);
var $mdgriffith$elm_ui$Internal$Style$fontVariant = function (_var) {
	return _List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Internal$Style$Class,
			'.v-' + _var,
			_List_fromArray(
				[
					A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', '\"' + (_var + '\"'))
				])),
			A2(
			$mdgriffith$elm_ui$Internal$Style$Class,
			'.v-' + (_var + '-off'),
			_List_fromArray(
				[
					A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', '\"' + (_var + '\" 0'))
				]))
		]);
};
var $mdgriffith$elm_ui$Internal$Style$commonValues = $elm$core$List$concat(
	_List_fromArray(
		[
			A2(
			$elm$core$List$map,
			function (x) {
				return A2(
					$mdgriffith$elm_ui$Internal$Style$Class,
					'.border-' + $elm$core$String$fromInt(x),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Style$Prop,
							'border-width',
							$elm$core$String$fromInt(x) + 'px')
						]));
			},
			A2($elm$core$List$range, 0, 6)),
			A2(
			$elm$core$List$map,
			function (i) {
				return A2(
					$mdgriffith$elm_ui$Internal$Style$Class,
					'.font-size-' + $elm$core$String$fromInt(i),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Style$Prop,
							'font-size',
							$elm$core$String$fromInt(i) + 'px')
						]));
			},
			A2($elm$core$List$range, 8, 32)),
			A2(
			$elm$core$List$map,
			function (i) {
				return A2(
					$mdgriffith$elm_ui$Internal$Style$Class,
					'.p-' + $elm$core$String$fromInt(i),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Style$Prop,
							'padding',
							$elm$core$String$fromInt(i) + 'px')
						]));
			},
			A2($elm$core$List$range, 0, 24)),
			_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Internal$Style$Class,
				'.v-smcp',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-variant', 'small-caps')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Class,
				'.v-smcp-off',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-variant', 'normal')
					]))
			]),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('zero'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('onum'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('liga'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('dlig'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('ordn'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('tnum'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('afrc'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('frac')
		]));
var $mdgriffith$elm_ui$Internal$Style$explainer = '\n.explain {\n    border: 6px solid rgb(174, 121, 15) !important;\n}\n.explain > .' + ($mdgriffith$elm_ui$Internal$Style$classes.gP + (' {\n    border: 4px dashed rgb(0, 151, 167) !important;\n}\n\n.ctr {\n    border: none !important;\n}\n.explain > .ctr > .' + ($mdgriffith$elm_ui$Internal$Style$classes.gP + ' {\n    border: 4px dashed rgb(0, 151, 167) !important;\n}\n\n')));
var $mdgriffith$elm_ui$Internal$Style$inputTextReset = '\ninput[type="search"],\ninput[type="search"]::-webkit-search-decoration,\ninput[type="search"]::-webkit-search-cancel-button,\ninput[type="search"]::-webkit-search-results-button,\ninput[type="search"]::-webkit-search-results-decoration {\n  -webkit-appearance:none;\n}\n';
var $mdgriffith$elm_ui$Internal$Style$sliderReset = '\ninput[type=range] {\n  -webkit-appearance: none; \n  background: transparent;\n  position:absolute;\n  left:0;\n  top:0;\n  z-index:10;\n  width: 100%;\n  outline: dashed 1px;\n  height: 100%;\n  opacity: 0;\n}\n';
var $mdgriffith$elm_ui$Internal$Style$thumbReset = '\ninput[type=range]::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range]::-moz-range-thumb {\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range]::-ms-thumb {\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range][orient=vertical]{\n    writing-mode: bt-lr; /* IE */\n    -webkit-appearance: slider-vertical;  /* WebKit */\n}\n';
var $mdgriffith$elm_ui$Internal$Style$trackReset = '\ninput[type=range]::-moz-range-track {\n    background: transparent;\n    cursor: pointer;\n}\ninput[type=range]::-ms-track {\n    background: transparent;\n    cursor: pointer;\n}\ninput[type=range]::-webkit-slider-runnable-track {\n    background: transparent;\n    cursor: pointer;\n}\n';
var $mdgriffith$elm_ui$Internal$Style$overrides = '@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aj) + (' > ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP) + (' { flex-basis: auto !important; } ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.aj) + (' > ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.dw) + (' { flex-basis: auto !important; }}' + ($mdgriffith$elm_ui$Internal$Style$inputTextReset + ($mdgriffith$elm_ui$Internal$Style$sliderReset + ($mdgriffith$elm_ui$Internal$Style$trackReset + ($mdgriffith$elm_ui$Internal$Style$thumbReset + $mdgriffith$elm_ui$Internal$Style$explainer)))))))))))))));
var $elm$core$String$concat = function (strings) {
	return A2($elm$core$String$join, '', strings);
};
var $mdgriffith$elm_ui$Internal$Style$Intermediate = $elm$core$Basics$identity;
var $mdgriffith$elm_ui$Internal$Style$emptyIntermediate = F2(
	function (selector, closing) {
		return {dv: closing, C: _List_Nil, aw: _List_Nil, al: selector};
	});
var $mdgriffith$elm_ui$Internal$Style$renderRules = F2(
	function (_v0, rulesToRender) {
		var parent = _v0;
		var generateIntermediates = F2(
			function (rule, rendered) {
				switch (rule.$) {
					case 0:
						var name = rule.a;
						var val = rule.b;
						return _Utils_update(
							rendered,
							{
								aw: A2(
									$elm$core$List$cons,
									_Utils_Tuple2(name, val),
									rendered.aw)
							});
					case 3:
						var _v2 = rule.a;
						var prop = _v2.a;
						var value = _v2.b;
						var props = rule.b;
						return _Utils_update(
							rendered,
							{
								C: A2(
									$elm$core$List$cons,
									{dv: '\n}', C: _List_Nil, aw: props, al: '@supports (' + (prop + (':' + (value + (') {' + parent.al))))},
									rendered.C)
							});
					case 5:
						var selector = rule.a;
						var adjRules = rule.b;
						return _Utils_update(
							rendered,
							{
								C: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.al + (' + ' + selector), ''),
										adjRules),
									rendered.C)
							});
					case 1:
						var child = rule.a;
						var childRules = rule.b;
						return _Utils_update(
							rendered,
							{
								C: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.al + (' > ' + child), ''),
										childRules),
									rendered.C)
							});
					case 2:
						var child = rule.a;
						var childRules = rule.b;
						return _Utils_update(
							rendered,
							{
								C: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.al + (' ' + child), ''),
										childRules),
									rendered.C)
							});
					case 4:
						var descriptor = rule.a;
						var descriptorRules = rule.b;
						return _Utils_update(
							rendered,
							{
								C: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2(
											$mdgriffith$elm_ui$Internal$Style$emptyIntermediate,
											_Utils_ap(parent.al, descriptor),
											''),
										descriptorRules),
									rendered.C)
							});
					default:
						var batched = rule.a;
						return _Utils_update(
							rendered,
							{
								C: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.al, ''),
										batched),
									rendered.C)
							});
				}
			});
		return A3($elm$core$List$foldr, generateIntermediates, parent, rulesToRender);
	});
var $mdgriffith$elm_ui$Internal$Style$renderCompact = function (styleClasses) {
	var renderValues = function (values) {
		return $elm$core$String$concat(
			A2(
				$elm$core$List$map,
				function (_v3) {
					var x = _v3.a;
					var y = _v3.b;
					return x + (':' + (y + ';'));
				},
				values));
	};
	var renderClass = function (rule) {
		var _v2 = rule.aw;
		if (!_v2.b) {
			return '';
		} else {
			return rule.al + ('{' + (renderValues(rule.aw) + (rule.dv + '}')));
		}
	};
	var renderIntermediate = function (_v0) {
		var rule = _v0;
		return _Utils_ap(
			renderClass(rule),
			$elm$core$String$concat(
				A2($elm$core$List$map, renderIntermediate, rule.C)));
	};
	return $elm$core$String$concat(
		A2(
			$elm$core$List$map,
			renderIntermediate,
			A3(
				$elm$core$List$foldr,
				F2(
					function (_v1, existing) {
						var name = _v1.a;
						var styleRules = _v1.b;
						return A2(
							$elm$core$List$cons,
							A2(
								$mdgriffith$elm_ui$Internal$Style$renderRules,
								A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, name, ''),
								styleRules),
							existing);
					}),
				_List_Nil,
				styleClasses)));
};
var $mdgriffith$elm_ui$Internal$Style$rules = _Utils_ap(
	$mdgriffith$elm_ui$Internal$Style$overrides,
	$mdgriffith$elm_ui$Internal$Style$renderCompact(
		_Utils_ap($mdgriffith$elm_ui$Internal$Style$baseSheet, $mdgriffith$elm_ui$Internal$Style$commonValues)));
var $mdgriffith$elm_ui$Internal$Model$staticRoot = function (opts) {
	var _v0 = opts.h4;
	switch (_v0) {
		case 0:
			return A3(
				$elm$virtual_dom$VirtualDom$node,
				'div',
				_List_Nil,
				_List_fromArray(
					[
						A3(
						$elm$virtual_dom$VirtualDom$node,
						'style',
						_List_Nil,
						_List_fromArray(
							[
								$elm$virtual_dom$VirtualDom$text($mdgriffith$elm_ui$Internal$Style$rules)
							]))
					]));
		case 1:
			return $elm$virtual_dom$VirtualDom$text('');
		default:
			return A3(
				$elm$virtual_dom$VirtualDom$node,
				'elm-ui-static-rules',
				_List_fromArray(
					[
						A2(
						$elm$virtual_dom$VirtualDom$property,
						'rules',
						$elm$json$Json$Encode$string($mdgriffith$elm_ui$Internal$Style$rules))
					]),
				_List_Nil);
	}
};
var $elm$json$Json$Encode$list = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				$elm$core$List$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(0),
				entries));
	});
var $elm$json$Json$Encode$object = function (pairs) {
	return _Json_wrap(
		A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, obj) {
					var k = _v0.a;
					var v = _v0.b;
					return A3(_Json_addField, k, v, obj);
				}),
			_Json_emptyObject(0),
			pairs));
};
var $elm$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			if (!list.b) {
				return false;
			} else {
				var x = list.a;
				var xs = list.b;
				if (isOkay(x)) {
					return true;
				} else {
					var $temp$isOkay = isOkay,
						$temp$list = xs;
					isOkay = $temp$isOkay;
					list = $temp$list;
					continue any;
				}
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$fontName = function (font) {
	switch (font.$) {
		case 0:
			return 'serif';
		case 1:
			return 'sans-serif';
		case 2:
			return 'monospace';
		case 3:
			var name = font.a;
			return '\"' + (name + '\"');
		case 4:
			var name = font.a;
			var url = font.b;
			return '\"' + (name + '\"');
		default:
			var name = font.a.dO;
			return '\"' + (name + '\"');
	}
};
var $mdgriffith$elm_ui$Internal$Model$isSmallCaps = function (_var) {
	switch (_var.$) {
		case 0:
			var name = _var.a;
			return name === 'smcp';
		case 1:
			var name = _var.a;
			return false;
		default:
			var name = _var.a;
			var index = _var.b;
			return (name === 'smcp') && (index === 1);
	}
};
var $mdgriffith$elm_ui$Internal$Model$hasSmallCaps = function (typeface) {
	if (typeface.$ === 5) {
		var font = typeface.a;
		return A2($elm$core$List$any, $mdgriffith$elm_ui$Internal$Model$isSmallCaps, font.gc);
	} else {
		return false;
	}
};
var $mdgriffith$elm_ui$Internal$Model$renderProps = F3(
	function (force, _v0, existing) {
		var key = _v0.a;
		var val = _v0.b;
		return force ? (existing + ('\n  ' + (key + (': ' + (val + ' !important;'))))) : (existing + ('\n  ' + (key + (': ' + (val + ';')))));
	});
var $mdgriffith$elm_ui$Internal$Model$renderStyle = F4(
	function (options, maybePseudo, selector, props) {
		if (maybePseudo.$ === 1) {
			return _List_fromArray(
				[
					selector + ('{' + (A3(
					$elm$core$List$foldl,
					$mdgriffith$elm_ui$Internal$Model$renderProps(false),
					'',
					props) + '\n}'))
				]);
		} else {
			var pseudo = maybePseudo.a;
			switch (pseudo) {
				case 1:
					var _v2 = options.hH;
					switch (_v2) {
						case 0:
							return _List_Nil;
						case 2:
							return _List_fromArray(
								[
									selector + ('-hv {' + (A3(
									$elm$core$List$foldl,
									$mdgriffith$elm_ui$Internal$Model$renderProps(true),
									'',
									props) + '\n}'))
								]);
						default:
							return _List_fromArray(
								[
									selector + ('-hv:hover {' + (A3(
									$elm$core$List$foldl,
									$mdgriffith$elm_ui$Internal$Model$renderProps(false),
									'',
									props) + '\n}'))
								]);
					}
				case 0:
					var renderedProps = A3(
						$elm$core$List$foldl,
						$mdgriffith$elm_ui$Internal$Model$renderProps(false),
						'',
						props);
					return _List_fromArray(
						[
							selector + ('-fs:focus {' + (renderedProps + '\n}')),
							('.' + ($mdgriffith$elm_ui$Internal$Style$classes.gP + (':focus ' + (selector + '-fs  {')))) + (renderedProps + '\n}'),
							(selector + '-fs:focus-within {') + (renderedProps + '\n}'),
							('.ui-slide-bar:focus + ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.gP) + (' .focusable-thumb' + (selector + '-fs {')))) + (renderedProps + '\n}')
						]);
				default:
					return _List_fromArray(
						[
							selector + ('-act:active {' + (A3(
							$elm$core$List$foldl,
							$mdgriffith$elm_ui$Internal$Model$renderProps(false),
							'',
							props) + '\n}'))
						]);
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$renderVariant = function (_var) {
	switch (_var.$) {
		case 0:
			var name = _var.a;
			return '\"' + (name + '\"');
		case 1:
			var name = _var.a;
			return '\"' + (name + '\" 0');
		default:
			var name = _var.a;
			var index = _var.b;
			return '\"' + (name + ('\" ' + $elm$core$String$fromInt(index)));
	}
};
var $mdgriffith$elm_ui$Internal$Model$renderVariants = function (typeface) {
	if (typeface.$ === 5) {
		var font = typeface.a;
		return $elm$core$Maybe$Just(
			A2(
				$elm$core$String$join,
				', ',
				A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$renderVariant, font.gc)));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $mdgriffith$elm_ui$Internal$Model$transformValue = function (transform) {
	switch (transform.$) {
		case 0:
			return $elm$core$Maybe$Nothing;
		case 1:
			var _v1 = transform.a;
			var x = _v1.a;
			var y = _v1.b;
			var z = _v1.c;
			return $elm$core$Maybe$Just(
				'translate3d(' + ($elm$core$String$fromFloat(x) + ('px, ' + ($elm$core$String$fromFloat(y) + ('px, ' + ($elm$core$String$fromFloat(z) + 'px)'))))));
		default:
			var _v2 = transform.a;
			var tx = _v2.a;
			var ty = _v2.b;
			var tz = _v2.c;
			var _v3 = transform.b;
			var sx = _v3.a;
			var sy = _v3.b;
			var sz = _v3.c;
			var _v4 = transform.c;
			var ox = _v4.a;
			var oy = _v4.b;
			var oz = _v4.c;
			var angle = transform.d;
			var translate = 'translate3d(' + ($elm$core$String$fromFloat(tx) + ('px, ' + ($elm$core$String$fromFloat(ty) + ('px, ' + ($elm$core$String$fromFloat(tz) + 'px)')))));
			var scale = 'scale3d(' + ($elm$core$String$fromFloat(sx) + (', ' + ($elm$core$String$fromFloat(sy) + (', ' + ($elm$core$String$fromFloat(sz) + ')')))));
			var rotate = 'rotate3d(' + ($elm$core$String$fromFloat(ox) + (', ' + ($elm$core$String$fromFloat(oy) + (', ' + ($elm$core$String$fromFloat(oz) + (', ' + ($elm$core$String$fromFloat(angle) + 'rad)')))))));
			return $elm$core$Maybe$Just(translate + (' ' + (scale + (' ' + rotate))));
	}
};
var $mdgriffith$elm_ui$Internal$Model$renderStyleRule = F3(
	function (options, rule, maybePseudo) {
		switch (rule.$) {
			case 0:
				var selector = rule.a;
				var props = rule.b;
				return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, selector, props);
			case 13:
				var name = rule.a;
				var prop = rule.b;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.' + name,
					_List_fromArray(
						[
							A2($mdgriffith$elm_ui$Internal$Model$Property, 'box-shadow', prop)
						]));
			case 12:
				var name = rule.a;
				var transparency = rule.b;
				var opacity = A2(
					$elm$core$Basics$max,
					0,
					A2($elm$core$Basics$min, 1, 1 - transparency));
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.' + name,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							'opacity',
							$elm$core$String$fromFloat(opacity))
						]));
			case 2:
				var i = rule.a;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.font-size-' + $elm$core$String$fromInt(i),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							'font-size',
							$elm$core$String$fromInt(i) + 'px')
						]));
			case 1:
				var name = rule.a;
				var typefaces = rule.b;
				var features = A2(
					$elm$core$String$join,
					', ',
					A2($elm$core$List$filterMap, $mdgriffith$elm_ui$Internal$Model$renderVariants, typefaces));
				var families = _List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Model$Property,
						'font-family',
						A2(
							$elm$core$String$join,
							', ',
							A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$fontName, typefaces))),
						A2($mdgriffith$elm_ui$Internal$Model$Property, 'font-feature-settings', features),
						A2(
						$mdgriffith$elm_ui$Internal$Model$Property,
						'font-variant',
						A2($elm$core$List$any, $mdgriffith$elm_ui$Internal$Model$hasSmallCaps, typefaces) ? 'small-caps' : 'normal')
					]);
				return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, '.' + name, families);
			case 3:
				var _class = rule.a;
				var prop = rule.b;
				var val = rule.c;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.' + _class,
					_List_fromArray(
						[
							A2($mdgriffith$elm_ui$Internal$Model$Property, prop, val)
						]));
			case 4:
				var _class = rule.a;
				var prop = rule.b;
				var color = rule.c;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.' + _class,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							prop,
							$mdgriffith$elm_ui$Internal$Model$formatColor(color))
						]));
			case 5:
				var cls = rule.a;
				var x = rule.b;
				var y = rule.c;
				var yPx = $elm$core$String$fromInt(y) + 'px';
				var xPx = $elm$core$String$fromInt(x) + 'px';
				var single = '.' + $mdgriffith$elm_ui$Internal$Style$classes.iC;
				var row = '.' + $mdgriffith$elm_ui$Internal$Style$classes.aj;
				var wrappedRow = '.' + ($mdgriffith$elm_ui$Internal$Style$classes.eO + row);
				var right = '.' + $mdgriffith$elm_ui$Internal$Style$classes.eV;
				var paragraph = '.' + $mdgriffith$elm_ui$Internal$Style$classes.fK;
				var page = '.' + $mdgriffith$elm_ui$Internal$Style$classes.aH;
				var left = '.' + $mdgriffith$elm_ui$Internal$Style$classes.eU;
				var halfY = $elm$core$String$fromFloat(y / 2) + 'px';
				var halfX = $elm$core$String$fromFloat(x / 2) + 'px';
				var column = '.' + $mdgriffith$elm_ui$Internal$Style$classes.ac;
				var _class = '.' + cls;
				var any = '.' + $mdgriffith$elm_ui$Internal$Style$classes.gP;
				return $elm$core$List$concat(
					_List_fromArray(
						[
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (row + (' > ' + (any + (' + ' + any)))),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (wrappedRow + (' > ' + any)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin', halfY + (' ' + halfX))
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (column + (' > ' + (any + (' + ' + any)))),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', yPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (page + (' > ' + (any + (' + ' + any)))),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', yPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (page + (' > ' + left)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-right', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (page + (' > ' + right)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_Utils_ap(_class, paragraph),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'line-height',
									'calc(1em + ' + ($elm$core$String$fromInt(y) + 'px)'))
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							'textarea' + (any + _class),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'line-height',
									'calc(1em + ' + ($elm$core$String$fromInt(y) + 'px)')),
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'height',
									'calc(100% + ' + ($elm$core$String$fromInt(y) + 'px)'))
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (paragraph + (' > ' + left)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-right', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (paragraph + (' > ' + right)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (paragraph + '::after'),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'content', '\'\''),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'display', 'block'),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'height', '0'),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'width', '0'),
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'margin-top',
									$elm$core$String$fromInt((-1) * ((y / 2) | 0)) + 'px')
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (paragraph + '::before'),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'content', '\'\''),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'display', 'block'),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'height', '0'),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'width', '0'),
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'margin-bottom',
									$elm$core$String$fromInt((-1) * ((y / 2) | 0)) + 'px')
								]))
						]));
			case 7:
				var cls = rule.a;
				var top = rule.b;
				var right = rule.c;
				var bottom = rule.d;
				var left = rule.e;
				var _class = '.' + cls;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					_class,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							'padding',
							$elm$core$String$fromFloat(top) + ('px ' + ($elm$core$String$fromFloat(right) + ('px ' + ($elm$core$String$fromFloat(bottom) + ('px ' + ($elm$core$String$fromFloat(left) + 'px')))))))
						]));
			case 6:
				var cls = rule.a;
				var top = rule.b;
				var right = rule.c;
				var bottom = rule.d;
				var left = rule.e;
				var _class = '.' + cls;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					_class,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							'border-width',
							$elm$core$String$fromInt(top) + ('px ' + ($elm$core$String$fromInt(right) + ('px ' + ($elm$core$String$fromInt(bottom) + ('px ' + ($elm$core$String$fromInt(left) + 'px')))))))
						]));
			case 8:
				var template = rule.a;
				var toGridLengthHelper = F3(
					function (minimum, maximum, x) {
						toGridLengthHelper:
						while (true) {
							switch (x.$) {
								case 0:
									var px = x.a;
									return $elm$core$String$fromInt(px) + 'px';
								case 1:
									var _v2 = _Utils_Tuple2(minimum, maximum);
									if (_v2.a.$ === 1) {
										if (_v2.b.$ === 1) {
											var _v3 = _v2.a;
											var _v4 = _v2.b;
											return 'max-content';
										} else {
											var _v6 = _v2.a;
											var maxSize = _v2.b.a;
											return 'minmax(max-content, ' + ($elm$core$String$fromInt(maxSize) + 'px)');
										}
									} else {
										if (_v2.b.$ === 1) {
											var minSize = _v2.a.a;
											var _v5 = _v2.b;
											return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + 'max-content)'));
										} else {
											var minSize = _v2.a.a;
											var maxSize = _v2.b.a;
											return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(maxSize) + 'px)')));
										}
									}
								case 2:
									var i = x.a;
									var _v7 = _Utils_Tuple2(minimum, maximum);
									if (_v7.a.$ === 1) {
										if (_v7.b.$ === 1) {
											var _v8 = _v7.a;
											var _v9 = _v7.b;
											return $elm$core$String$fromInt(i) + 'fr';
										} else {
											var _v11 = _v7.a;
											var maxSize = _v7.b.a;
											return 'minmax(max-content, ' + ($elm$core$String$fromInt(maxSize) + 'px)');
										}
									} else {
										if (_v7.b.$ === 1) {
											var minSize = _v7.a.a;
											var _v10 = _v7.b;
											return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(i) + ('fr' + 'fr)'))));
										} else {
											var minSize = _v7.a.a;
											var maxSize = _v7.b.a;
											return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(maxSize) + 'px)')));
										}
									}
								case 3:
									var m = x.a;
									var len = x.b;
									var $temp$minimum = $elm$core$Maybe$Just(m),
										$temp$maximum = maximum,
										$temp$x = len;
									minimum = $temp$minimum;
									maximum = $temp$maximum;
									x = $temp$x;
									continue toGridLengthHelper;
								default:
									var m = x.a;
									var len = x.b;
									var $temp$minimum = minimum,
										$temp$maximum = $elm$core$Maybe$Just(m),
										$temp$x = len;
									minimum = $temp$minimum;
									maximum = $temp$maximum;
									x = $temp$x;
									continue toGridLengthHelper;
							}
						}
					});
				var toGridLength = function (x) {
					return A3(toGridLengthHelper, $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing, x);
				};
				var xSpacing = toGridLength(template.iG.a);
				var ySpacing = toGridLength(template.iG.b);
				var rows = function (x) {
					return 'grid-template-rows: ' + (x + ';');
				}(
					A2(
						$elm$core$String$join,
						' ',
						A2($elm$core$List$map, toGridLength, template.it)));
				var msRows = function (x) {
					return '-ms-grid-rows: ' + (x + ';');
				}(
					A2(
						$elm$core$String$join,
						ySpacing,
						A2($elm$core$List$map, toGridLength, template.ao)));
				var msColumns = function (x) {
					return '-ms-grid-columns: ' + (x + ';');
				}(
					A2(
						$elm$core$String$join,
						ySpacing,
						A2($elm$core$List$map, toGridLength, template.ao)));
				var gapY = 'grid-row-gap:' + (toGridLength(template.iG.b) + ';');
				var gapX = 'grid-column-gap:' + (toGridLength(template.iG.a) + ';');
				var columns = function (x) {
					return 'grid-template-columns: ' + (x + ';');
				}(
					A2(
						$elm$core$String$join,
						' ',
						A2($elm$core$List$map, toGridLength, template.ao)));
				var _class = '.grid-rows-' + (A2(
					$elm$core$String$join,
					'-',
					A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.it)) + ('-cols-' + (A2(
					$elm$core$String$join,
					'-',
					A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.ao)) + ('-space-x-' + ($mdgriffith$elm_ui$Internal$Model$lengthClassName(template.iG.a) + ('-space-y-' + $mdgriffith$elm_ui$Internal$Model$lengthClassName(template.iG.b)))))));
				var modernGrid = _class + ('{' + (columns + (rows + (gapX + (gapY + '}')))));
				var supports = '@supports (display:grid) {' + (modernGrid + '}');
				var base = _class + ('{' + (msColumns + (msRows + '}')));
				return _List_fromArray(
					[base, supports]);
			case 9:
				var position = rule.a;
				var msPosition = A2(
					$elm$core$String$join,
					' ',
					_List_fromArray(
						[
							'-ms-grid-row: ' + ($elm$core$String$fromInt(position.aj) + ';'),
							'-ms-grid-row-span: ' + ($elm$core$String$fromInt(position.U) + ';'),
							'-ms-grid-column: ' + ($elm$core$String$fromInt(position.e3) + ';'),
							'-ms-grid-column-span: ' + ($elm$core$String$fromInt(position.h) + ';')
						]));
				var modernPosition = A2(
					$elm$core$String$join,
					' ',
					_List_fromArray(
						[
							'grid-row: ' + ($elm$core$String$fromInt(position.aj) + (' / ' + ($elm$core$String$fromInt(position.aj + position.U) + ';'))),
							'grid-column: ' + ($elm$core$String$fromInt(position.e3) + (' / ' + ($elm$core$String$fromInt(position.e3 + position.h) + ';')))
						]));
				var _class = '.grid-pos-' + ($elm$core$String$fromInt(position.aj) + ('-' + ($elm$core$String$fromInt(position.e3) + ('-' + ($elm$core$String$fromInt(position.h) + ('-' + $elm$core$String$fromInt(position.U)))))));
				var modernGrid = _class + ('{' + (modernPosition + '}'));
				var supports = '@supports (display:grid) {' + (modernGrid + '}');
				var base = _class + ('{' + (msPosition + '}'));
				return _List_fromArray(
					[base, supports]);
			case 11:
				var _class = rule.a;
				var styles = rule.b;
				var renderPseudoRule = function (style) {
					return A3(
						$mdgriffith$elm_ui$Internal$Model$renderStyleRule,
						options,
						style,
						$elm$core$Maybe$Just(_class));
				};
				return A2($elm$core$List$concatMap, renderPseudoRule, styles);
			default:
				var transform = rule.a;
				var val = $mdgriffith$elm_ui$Internal$Model$transformValue(transform);
				var _class = $mdgriffith$elm_ui$Internal$Model$transformClass(transform);
				var _v12 = _Utils_Tuple2(_class, val);
				if ((!_v12.a.$) && (!_v12.b.$)) {
					var cls = _v12.a.a;
					var v = _v12.b.a;
					return A4(
						$mdgriffith$elm_ui$Internal$Model$renderStyle,
						options,
						maybePseudo,
						'.' + cls,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Model$Property, 'transform', v)
							]));
				} else {
					return _List_Nil;
				}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$encodeStyles = F2(
	function (options, stylesheet) {
		return $elm$json$Json$Encode$object(
			A2(
				$elm$core$List$map,
				function (style) {
					var styled = A3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Nothing);
					return _Utils_Tuple2(
						$mdgriffith$elm_ui$Internal$Model$getStyleName(style),
						A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, styled));
				},
				stylesheet));
	});
var $mdgriffith$elm_ui$Internal$Model$bracket = F2(
	function (selector, rules) {
		var renderPair = function (_v0) {
			var name = _v0.a;
			var val = _v0.b;
			return name + (': ' + (val + ';'));
		};
		return selector + (' {' + (A2(
			$elm$core$String$join,
			'',
			A2($elm$core$List$map, renderPair, rules)) + '}'));
	});
var $mdgriffith$elm_ui$Internal$Model$fontRule = F3(
	function (name, modifier, _v0) {
		var parentAdj = _v0.a;
		var textAdjustment = _v0.b;
		return _List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + (modifier + (', ' + ('.' + (name + (' .' + modifier))))))), parentAdj),
				A2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + (modifier + ('> .' + ($mdgriffith$elm_ui$Internal$Style$classes.V + (', .' + (name + (' .' + (modifier + (' > .' + $mdgriffith$elm_ui$Internal$Style$classes.V)))))))))), textAdjustment)
			]);
	});
var $mdgriffith$elm_ui$Internal$Model$renderFontAdjustmentRule = F3(
	function (fontToAdjust, _v0, otherFontName) {
		var full = _v0.a;
		var capital = _v0.b;
		var name = _Utils_eq(fontToAdjust, otherFontName) ? fontToAdjust : (otherFontName + (' .' + fontToAdjust));
		return A2(
			$elm$core$String$join,
			' ',
			_Utils_ap(
				A3($mdgriffith$elm_ui$Internal$Model$fontRule, name, $mdgriffith$elm_ui$Internal$Style$classes.iE, capital),
				A3($mdgriffith$elm_ui$Internal$Model$fontRule, name, $mdgriffith$elm_ui$Internal$Style$classes.hB, full)));
	});
var $mdgriffith$elm_ui$Internal$Model$renderNullAdjustmentRule = F2(
	function (fontToAdjust, otherFontName) {
		var name = _Utils_eq(fontToAdjust, otherFontName) ? fontToAdjust : (otherFontName + (' .' + fontToAdjust));
		return A2(
			$elm$core$String$join,
			' ',
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Internal$Model$bracket,
					'.' + (name + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.iE + (', ' + ('.' + (name + (' .' + $mdgriffith$elm_ui$Internal$Style$classes.iE))))))),
					_List_fromArray(
						[
							_Utils_Tuple2('line-height', '1')
						])),
					A2(
					$mdgriffith$elm_ui$Internal$Model$bracket,
					'.' + (name + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.iE + ('> .' + ($mdgriffith$elm_ui$Internal$Style$classes.V + (', .' + (name + (' .' + ($mdgriffith$elm_ui$Internal$Style$classes.iE + (' > .' + $mdgriffith$elm_ui$Internal$Style$classes.V)))))))))),
					_List_fromArray(
						[
							_Utils_Tuple2('vertical-align', '0'),
							_Utils_Tuple2('line-height', '1')
						]))
				]));
	});
var $mdgriffith$elm_ui$Internal$Model$adjust = F3(
	function (size, height, vertical) {
		return {U: height / size, iD: size, ge: vertical};
	});
var $elm$core$List$filter = F2(
	function (isGood, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, xs) {
					return isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;
				}),
			_List_Nil,
			list);
	});
var $elm$core$List$maximum = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(
			A3($elm$core$List$foldl, $elm$core$Basics$max, x, xs));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$List$minimum = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(
			A3($elm$core$List$foldl, $elm$core$Basics$min, x, xs));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$Basics$neq = _Utils_notEqual;
var $mdgriffith$elm_ui$Internal$Model$convertAdjustment = function (adjustment) {
	var lines = _List_fromArray(
		[adjustment.g6, adjustment.gV, adjustment.hn, adjustment.hZ]);
	var lineHeight = 1.5;
	var normalDescender = (lineHeight - 1) / 2;
	var oldMiddle = lineHeight / 2;
	var descender = A2(
		$elm$core$Maybe$withDefault,
		adjustment.hn,
		$elm$core$List$minimum(lines));
	var newBaseline = A2(
		$elm$core$Maybe$withDefault,
		adjustment.gV,
		$elm$core$List$minimum(
			A2(
				$elm$core$List$filter,
				function (x) {
					return !_Utils_eq(x, descender);
				},
				lines)));
	var base = lineHeight;
	var ascender = A2(
		$elm$core$Maybe$withDefault,
		adjustment.g6,
		$elm$core$List$maximum(lines));
	var capitalSize = 1 / (ascender - newBaseline);
	var capitalVertical = 1 - ascender;
	var fullSize = 1 / (ascender - descender);
	var fullVertical = 1 - ascender;
	var newCapitalMiddle = ((ascender - newBaseline) / 2) + newBaseline;
	var newFullMiddle = ((ascender - descender) / 2) + descender;
	return {
		g6: A3($mdgriffith$elm_ui$Internal$Model$adjust, capitalSize, ascender - newBaseline, capitalVertical),
		fi: A3($mdgriffith$elm_ui$Internal$Model$adjust, fullSize, ascender - descender, fullVertical)
	};
};
var $mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules = function (converted) {
	return _Utils_Tuple2(
		_List_fromArray(
			[
				_Utils_Tuple2('display', 'block')
			]),
		_List_fromArray(
			[
				_Utils_Tuple2('display', 'inline-block'),
				_Utils_Tuple2(
				'line-height',
				$elm$core$String$fromFloat(converted.U)),
				_Utils_Tuple2(
				'vertical-align',
				$elm$core$String$fromFloat(converted.ge) + 'em'),
				_Utils_Tuple2(
				'font-size',
				$elm$core$String$fromFloat(converted.iD) + 'em')
			]));
};
var $mdgriffith$elm_ui$Internal$Model$typefaceAdjustment = function (typefaces) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (face, found) {
				if (found.$ === 1) {
					if (face.$ === 5) {
						var _with = face.a;
						var _v2 = _with.gE;
						if (_v2.$ === 1) {
							return found;
						} else {
							var adjustment = _v2.a;
							return $elm$core$Maybe$Just(
								_Utils_Tuple2(
									$mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules(
										function ($) {
											return $.fi;
										}(
											$mdgriffith$elm_ui$Internal$Model$convertAdjustment(adjustment))),
									$mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules(
										function ($) {
											return $.g6;
										}(
											$mdgriffith$elm_ui$Internal$Model$convertAdjustment(adjustment)))));
						}
					} else {
						return found;
					}
				} else {
					return found;
				}
			}),
		$elm$core$Maybe$Nothing,
		typefaces);
};
var $mdgriffith$elm_ui$Internal$Model$renderTopLevelValues = function (rules) {
	var withImport = function (font) {
		if (font.$ === 4) {
			var url = font.b;
			return $elm$core$Maybe$Just('@import url(\'' + (url + '\');'));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	};
	var fontImports = function (_v2) {
		var name = _v2.a;
		var typefaces = _v2.b;
		var imports = A2(
			$elm$core$String$join,
			'\n',
			A2($elm$core$List$filterMap, withImport, typefaces));
		return imports;
	};
	var allNames = A2($elm$core$List$map, $elm$core$Tuple$first, rules);
	var fontAdjustments = function (_v1) {
		var name = _v1.a;
		var typefaces = _v1.b;
		var _v0 = $mdgriffith$elm_ui$Internal$Model$typefaceAdjustment(typefaces);
		if (_v0.$ === 1) {
			return A2(
				$elm$core$String$join,
				'',
				A2(
					$elm$core$List$map,
					$mdgriffith$elm_ui$Internal$Model$renderNullAdjustmentRule(name),
					allNames));
		} else {
			var adjustment = _v0.a;
			return A2(
				$elm$core$String$join,
				'',
				A2(
					$elm$core$List$map,
					A2($mdgriffith$elm_ui$Internal$Model$renderFontAdjustmentRule, name, adjustment),
					allNames));
		}
	};
	return _Utils_ap(
		A2(
			$elm$core$String$join,
			'\n',
			A2($elm$core$List$map, fontImports, rules)),
		A2(
			$elm$core$String$join,
			'\n',
			A2($elm$core$List$map, fontAdjustments, rules)));
};
var $mdgriffith$elm_ui$Internal$Model$topLevelValue = function (rule) {
	if (rule.$ === 1) {
		var name = rule.a;
		var typefaces = rule.b;
		return $elm$core$Maybe$Just(
			_Utils_Tuple2(name, typefaces));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $mdgriffith$elm_ui$Internal$Model$toStyleSheetString = F2(
	function (options, stylesheet) {
		var combine = F2(
			function (style, rendered) {
				return {
					dR: _Utils_ap(
						rendered.dR,
						A3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Nothing)),
					dj: function () {
						var _v1 = $mdgriffith$elm_ui$Internal$Model$topLevelValue(style);
						if (_v1.$ === 1) {
							return rendered.dj;
						} else {
							var topLevel = _v1.a;
							return A2($elm$core$List$cons, topLevel, rendered.dj);
						}
					}()
				};
			});
		var _v0 = A3(
			$elm$core$List$foldl,
			combine,
			{dR: _List_Nil, dj: _List_Nil},
			stylesheet);
		var topLevel = _v0.dj;
		var rules = _v0.dR;
		return _Utils_ap(
			$mdgriffith$elm_ui$Internal$Model$renderTopLevelValues(topLevel),
			$elm$core$String$concat(rules));
	});
var $mdgriffith$elm_ui$Internal$Model$toStyleSheet = F2(
	function (options, styleSheet) {
		var _v0 = options.h4;
		switch (_v0) {
			case 0:
				return A3(
					$elm$virtual_dom$VirtualDom$node,
					'div',
					_List_Nil,
					_List_fromArray(
						[
							A3(
							$elm$virtual_dom$VirtualDom$node,
							'style',
							_List_Nil,
							_List_fromArray(
								[
									$elm$virtual_dom$VirtualDom$text(
									A2($mdgriffith$elm_ui$Internal$Model$toStyleSheetString, options, styleSheet))
								]))
						]));
			case 1:
				return A3(
					$elm$virtual_dom$VirtualDom$node,
					'div',
					_List_Nil,
					_List_fromArray(
						[
							A3(
							$elm$virtual_dom$VirtualDom$node,
							'style',
							_List_Nil,
							_List_fromArray(
								[
									$elm$virtual_dom$VirtualDom$text(
									A2($mdgriffith$elm_ui$Internal$Model$toStyleSheetString, options, styleSheet))
								]))
						]));
			default:
				return A3(
					$elm$virtual_dom$VirtualDom$node,
					'elm-ui-rules',
					_List_fromArray(
						[
							A2(
							$elm$virtual_dom$VirtualDom$property,
							'rules',
							A2($mdgriffith$elm_ui$Internal$Model$encodeStyles, options, styleSheet))
						]),
					_List_Nil);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$embedKeyed = F4(
	function (_static, opts, styles, children) {
		var dynamicStyleSheet = A2(
			$mdgriffith$elm_ui$Internal$Model$toStyleSheet,
			opts,
			A3(
				$elm$core$List$foldl,
				$mdgriffith$elm_ui$Internal$Model$reduceStyles,
				_Utils_Tuple2(
					$elm$core$Set$empty,
					$mdgriffith$elm_ui$Internal$Model$renderFocusStyle(opts.hz)),
				styles).b);
		return _static ? A2(
			$elm$core$List$cons,
			_Utils_Tuple2(
				'static-stylesheet',
				$mdgriffith$elm_ui$Internal$Model$staticRoot(opts)),
			A2(
				$elm$core$List$cons,
				_Utils_Tuple2('dynamic-stylesheet', dynamicStyleSheet),
				children)) : A2(
			$elm$core$List$cons,
			_Utils_Tuple2('dynamic-stylesheet', dynamicStyleSheet),
			children);
	});
var $mdgriffith$elm_ui$Internal$Model$embedWith = F4(
	function (_static, opts, styles, children) {
		var dynamicStyleSheet = A2(
			$mdgriffith$elm_ui$Internal$Model$toStyleSheet,
			opts,
			A3(
				$elm$core$List$foldl,
				$mdgriffith$elm_ui$Internal$Model$reduceStyles,
				_Utils_Tuple2(
					$elm$core$Set$empty,
					$mdgriffith$elm_ui$Internal$Model$renderFocusStyle(opts.hz)),
				styles).b);
		return _static ? A2(
			$elm$core$List$cons,
			$mdgriffith$elm_ui$Internal$Model$staticRoot(opts),
			A2($elm$core$List$cons, dynamicStyleSheet, children)) : A2($elm$core$List$cons, dynamicStyleSheet, children);
	});
var $mdgriffith$elm_ui$Internal$Flag$heightBetween = $mdgriffith$elm_ui$Internal$Flag$flag(45);
var $mdgriffith$elm_ui$Internal$Flag$heightFill = $mdgriffith$elm_ui$Internal$Flag$flag(37);
var $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {
	return _VirtualDom_keyedNode(
		_VirtualDom_noScript(tag));
};
var $elm$html$Html$p = _VirtualDom_node('p');
var $elm$core$Bitwise$and = _Bitwise_and;
var $mdgriffith$elm_ui$Internal$Flag$present = F2(
	function (myFlag, _v0) {
		var fieldOne = _v0.a;
		var fieldTwo = _v0.b;
		if (!myFlag.$) {
			var first = myFlag.a;
			return _Utils_eq(first & fieldOne, first);
		} else {
			var second = myFlag.a;
			return _Utils_eq(second & fieldTwo, second);
		}
	});
var $elm$html$Html$s = _VirtualDom_node('s');
var $elm$html$Html$u = _VirtualDom_node('u');
var $mdgriffith$elm_ui$Internal$Flag$widthBetween = $mdgriffith$elm_ui$Internal$Flag$flag(44);
var $mdgriffith$elm_ui$Internal$Flag$widthFill = $mdgriffith$elm_ui$Internal$Flag$flag(39);
var $mdgriffith$elm_ui$Internal$Model$finalizeNode = F6(
	function (has, node, attributes, children, embedMode, parentContext) {
		var createNode = F2(
			function (nodeName, attrs) {
				if (children.$ === 1) {
					var keyed = children.a;
					return A3(
						$elm$virtual_dom$VirtualDom$keyedNode,
						nodeName,
						attrs,
						function () {
							switch (embedMode.$) {
								case 0:
									return keyed;
								case 2:
									var opts = embedMode.a;
									var styles = embedMode.b;
									return A4($mdgriffith$elm_ui$Internal$Model$embedKeyed, false, opts, styles, keyed);
								default:
									var opts = embedMode.a;
									var styles = embedMode.b;
									return A4($mdgriffith$elm_ui$Internal$Model$embedKeyed, true, opts, styles, keyed);
							}
						}());
				} else {
					var unkeyed = children.a;
					return A2(
						function () {
							switch (nodeName) {
								case 'div':
									return $elm$html$Html$div;
								case 'p':
									return $elm$html$Html$p;
								default:
									return $elm$virtual_dom$VirtualDom$node(nodeName);
							}
						}(),
						attrs,
						function () {
							switch (embedMode.$) {
								case 0:
									return unkeyed;
								case 2:
									var opts = embedMode.a;
									var styles = embedMode.b;
									return A4($mdgriffith$elm_ui$Internal$Model$embedWith, false, opts, styles, unkeyed);
								default:
									var opts = embedMode.a;
									var styles = embedMode.b;
									return A4($mdgriffith$elm_ui$Internal$Model$embedWith, true, opts, styles, unkeyed);
							}
						}());
				}
			});
		var html = function () {
			switch (node.$) {
				case 0:
					return A2(createNode, 'div', attributes);
				case 1:
					var nodeName = node.a;
					return A2(createNode, nodeName, attributes);
				default:
					var nodeName = node.a;
					var internal = node.b;
					return A3(
						$elm$virtual_dom$VirtualDom$node,
						nodeName,
						attributes,
						_List_fromArray(
							[
								A2(
								createNode,
								internal,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Style$classes.gP + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.iC))
									]))
							]));
			}
		}();
		switch (parentContext) {
			case 0:
				return (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$widthFill, has) && (!A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$widthBetween, has))) ? html : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$alignRight, has) ? A2(
					$elm$html$Html$u,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									[$mdgriffith$elm_ui$Internal$Style$classes.gP, $mdgriffith$elm_ui$Internal$Style$classes.iC, $mdgriffith$elm_ui$Internal$Style$classes.dw, $mdgriffith$elm_ui$Internal$Style$classes.at, $mdgriffith$elm_ui$Internal$Style$classes.gL])))
						]),
					_List_fromArray(
						[html])) : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$centerX, has) ? A2(
					$elm$html$Html$s,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									[$mdgriffith$elm_ui$Internal$Style$classes.gP, $mdgriffith$elm_ui$Internal$Style$classes.iC, $mdgriffith$elm_ui$Internal$Style$classes.dw, $mdgriffith$elm_ui$Internal$Style$classes.at, $mdgriffith$elm_ui$Internal$Style$classes.gJ])))
						]),
					_List_fromArray(
						[html])) : html));
			case 1:
				return (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$heightFill, has) && (!A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$heightBetween, has))) ? html : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$centerY, has) ? A2(
					$elm$html$Html$s,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									[$mdgriffith$elm_ui$Internal$Style$classes.gP, $mdgriffith$elm_ui$Internal$Style$classes.iC, $mdgriffith$elm_ui$Internal$Style$classes.dw, $mdgriffith$elm_ui$Internal$Style$classes.gK])))
						]),
					_List_fromArray(
						[html])) : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$alignBottom, has) ? A2(
					$elm$html$Html$u,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									[$mdgriffith$elm_ui$Internal$Style$classes.gP, $mdgriffith$elm_ui$Internal$Style$classes.iC, $mdgriffith$elm_ui$Internal$Style$classes.dw, $mdgriffith$elm_ui$Internal$Style$classes.gI])))
						]),
					_List_fromArray(
						[html])) : html));
			default:
				return html;
		}
	});
var $elm$core$List$isEmpty = function (xs) {
	if (!xs.b) {
		return true;
	} else {
		return false;
	}
};
var $mdgriffith$elm_ui$Internal$Model$textElementClasses = $mdgriffith$elm_ui$Internal$Style$classes.gP + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.V + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.eM + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.ee)))));
var $mdgriffith$elm_ui$Internal$Model$textElement = function (str) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Model$textElementClasses)
			]),
		_List_fromArray(
			[
				$elm$html$Html$text(str)
			]));
};
var $mdgriffith$elm_ui$Internal$Model$textElementFillClasses = $mdgriffith$elm_ui$Internal$Style$classes.gP + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.V + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.eN + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.ef)))));
var $mdgriffith$elm_ui$Internal$Model$textElementFill = function (str) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Model$textElementFillClasses)
			]),
		_List_fromArray(
			[
				$elm$html$Html$text(str)
			]));
};
var $mdgriffith$elm_ui$Internal$Model$createElement = F3(
	function (context, children, rendered) {
		var gatherKeyed = F2(
			function (_v8, _v9) {
				var key = _v8.a;
				var child = _v8.b;
				var htmls = _v9.a;
				var existingStyles = _v9.b;
				switch (child.$) {
					case 0:
						var html = child.a;
						return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									html(context)),
								htmls),
							existingStyles) : _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									html(context)),
								htmls),
							existingStyles);
					case 1:
						var styled = child.a;
						return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									A2(styled.hI, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context)),
								htmls),
							$elm$core$List$isEmpty(existingStyles) ? styled.iM : _Utils_ap(styled.iM, existingStyles)) : _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									A2(styled.hI, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context)),
								htmls),
							$elm$core$List$isEmpty(existingStyles) ? styled.iM : _Utils_ap(styled.iM, existingStyles));
					case 2:
						var str = child.a;
						return _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									_Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asEl) ? $mdgriffith$elm_ui$Internal$Model$textElementFill(str) : $mdgriffith$elm_ui$Internal$Model$textElement(str)),
								htmls),
							existingStyles);
					default:
						return _Utils_Tuple2(htmls, existingStyles);
				}
			});
		var gather = F2(
			function (child, _v6) {
				var htmls = _v6.a;
				var existingStyles = _v6.b;
				switch (child.$) {
					case 0:
						var html = child.a;
						return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								html(context),
								htmls),
							existingStyles) : _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								html(context),
								htmls),
							existingStyles);
					case 1:
						var styled = child.a;
						return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								A2(styled.hI, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context),
								htmls),
							$elm$core$List$isEmpty(existingStyles) ? styled.iM : _Utils_ap(styled.iM, existingStyles)) : _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								A2(styled.hI, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context),
								htmls),
							$elm$core$List$isEmpty(existingStyles) ? styled.iM : _Utils_ap(styled.iM, existingStyles));
					case 2:
						var str = child.a;
						return _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asEl) ? $mdgriffith$elm_ui$Internal$Model$textElementFill(str) : $mdgriffith$elm_ui$Internal$Model$textElement(str),
								htmls),
							existingStyles);
					default:
						return _Utils_Tuple2(htmls, existingStyles);
				}
			});
		if (children.$ === 1) {
			var keyedChildren = children.a;
			var _v1 = A3(
				$elm$core$List$foldr,
				gatherKeyed,
				_Utils_Tuple2(_List_Nil, _List_Nil),
				keyedChildren);
			var keyed = _v1.a;
			var styles = _v1.b;
			var newStyles = $elm$core$List$isEmpty(styles) ? rendered.iM : _Utils_ap(rendered.iM, styles);
			if (!newStyles.b) {
				return $mdgriffith$elm_ui$Internal$Model$Unstyled(
					A5(
						$mdgriffith$elm_ui$Internal$Model$finalizeNode,
						rendered.aD,
						rendered.aF,
						rendered.az,
						$mdgriffith$elm_ui$Internal$Model$Keyed(
							A3($mdgriffith$elm_ui$Internal$Model$addKeyedChildren, 'nearby-element-pls', keyed, rendered.aA)),
						$mdgriffith$elm_ui$Internal$Model$NoStyleSheet));
			} else {
				var allStyles = newStyles;
				return $mdgriffith$elm_ui$Internal$Model$Styled(
					{
						hI: A4(
							$mdgriffith$elm_ui$Internal$Model$finalizeNode,
							rendered.aD,
							rendered.aF,
							rendered.az,
							$mdgriffith$elm_ui$Internal$Model$Keyed(
								A3($mdgriffith$elm_ui$Internal$Model$addKeyedChildren, 'nearby-element-pls', keyed, rendered.aA))),
						iM: allStyles
					});
			}
		} else {
			var unkeyedChildren = children.a;
			var _v3 = A3(
				$elm$core$List$foldr,
				gather,
				_Utils_Tuple2(_List_Nil, _List_Nil),
				unkeyedChildren);
			var unkeyed = _v3.a;
			var styles = _v3.b;
			var newStyles = $elm$core$List$isEmpty(styles) ? rendered.iM : _Utils_ap(rendered.iM, styles);
			if (!newStyles.b) {
				return $mdgriffith$elm_ui$Internal$Model$Unstyled(
					A5(
						$mdgriffith$elm_ui$Internal$Model$finalizeNode,
						rendered.aD,
						rendered.aF,
						rendered.az,
						$mdgriffith$elm_ui$Internal$Model$Unkeyed(
							A2($mdgriffith$elm_ui$Internal$Model$addChildren, unkeyed, rendered.aA)),
						$mdgriffith$elm_ui$Internal$Model$NoStyleSheet));
			} else {
				var allStyles = newStyles;
				return $mdgriffith$elm_ui$Internal$Model$Styled(
					{
						hI: A4(
							$mdgriffith$elm_ui$Internal$Model$finalizeNode,
							rendered.aD,
							rendered.aF,
							rendered.az,
							$mdgriffith$elm_ui$Internal$Model$Unkeyed(
								A2($mdgriffith$elm_ui$Internal$Model$addChildren, unkeyed, rendered.aA))),
						iM: allStyles
					});
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$Single = F3(
	function (a, b, c) {
		return {$: 3, a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Internal$Model$Transform = function (a) {
	return {$: 10, a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$Field = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$core$Bitwise$or = _Bitwise_or;
var $mdgriffith$elm_ui$Internal$Flag$add = F2(
	function (myFlag, _v0) {
		var one = _v0.a;
		var two = _v0.b;
		if (!myFlag.$) {
			var first = myFlag.a;
			return A2($mdgriffith$elm_ui$Internal$Flag$Field, first | one, two);
		} else {
			var second = myFlag.a;
			return A2($mdgriffith$elm_ui$Internal$Flag$Field, one, second | two);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$ChildrenBehind = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$ChildrenInFront = function (a) {
	return {$: 2, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$nearbyElement = F2(
	function (location, elem) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class(
					function () {
						switch (location) {
							case 0:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.aV, $mdgriffith$elm_ui$Internal$Style$classes.iC, $mdgriffith$elm_ui$Internal$Style$classes.gB]));
							case 1:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.aV, $mdgriffith$elm_ui$Internal$Style$classes.iC, $mdgriffith$elm_ui$Internal$Style$classes.gY]));
							case 2:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.aV, $mdgriffith$elm_ui$Internal$Style$classes.iC, $mdgriffith$elm_ui$Internal$Style$classes.ib]));
							case 3:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.aV, $mdgriffith$elm_ui$Internal$Style$classes.iC, $mdgriffith$elm_ui$Internal$Style$classes.h9]));
							case 4:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.aV, $mdgriffith$elm_ui$Internal$Style$classes.iC, $mdgriffith$elm_ui$Internal$Style$classes.hM]));
							default:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.aV, $mdgriffith$elm_ui$Internal$Style$classes.iC, $mdgriffith$elm_ui$Internal$Style$classes.gX]));
						}
					}())
				]),
			_List_fromArray(
				[
					function () {
					switch (elem.$) {
						case 3:
							return $elm$virtual_dom$VirtualDom$text('');
						case 2:
							var str = elem.a;
							return $mdgriffith$elm_ui$Internal$Model$textElement(str);
						case 0:
							var html = elem.a;
							return html($mdgriffith$elm_ui$Internal$Model$asEl);
						default:
							var styled = elem.a;
							return A2(styled.hI, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, $mdgriffith$elm_ui$Internal$Model$asEl);
					}
				}()
				]));
	});
var $mdgriffith$elm_ui$Internal$Model$addNearbyElement = F3(
	function (location, elem, existing) {
		var nearby = A2($mdgriffith$elm_ui$Internal$Model$nearbyElement, location, elem);
		switch (existing.$) {
			case 0:
				if (location === 5) {
					return $mdgriffith$elm_ui$Internal$Model$ChildrenBehind(
						_List_fromArray(
							[nearby]));
				} else {
					return $mdgriffith$elm_ui$Internal$Model$ChildrenInFront(
						_List_fromArray(
							[nearby]));
				}
			case 1:
				var existingBehind = existing.a;
				if (location === 5) {
					return $mdgriffith$elm_ui$Internal$Model$ChildrenBehind(
						A2($elm$core$List$cons, nearby, existingBehind));
				} else {
					return A2(
						$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,
						existingBehind,
						_List_fromArray(
							[nearby]));
				}
			case 2:
				var existingInFront = existing.a;
				if (location === 5) {
					return A2(
						$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,
						_List_fromArray(
							[nearby]),
						existingInFront);
				} else {
					return $mdgriffith$elm_ui$Internal$Model$ChildrenInFront(
						A2($elm$core$List$cons, nearby, existingInFront));
				}
			default:
				var existingBehind = existing.a;
				var existingInFront = existing.b;
				if (location === 5) {
					return A2(
						$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,
						A2($elm$core$List$cons, nearby, existingBehind),
						existingInFront);
				} else {
					return A2(
						$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,
						existingBehind,
						A2($elm$core$List$cons, nearby, existingInFront));
				}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$Embedded = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$NodeName = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$addNodeName = F2(
	function (newNode, old) {
		switch (old.$) {
			case 0:
				return $mdgriffith$elm_ui$Internal$Model$NodeName(newNode);
			case 1:
				var name = old.a;
				return A2($mdgriffith$elm_ui$Internal$Model$Embedded, name, newNode);
			default:
				var x = old.a;
				var y = old.b;
				return A2($mdgriffith$elm_ui$Internal$Model$Embedded, x, y);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$alignXName = function (align) {
	switch (align) {
		case 0:
			return $mdgriffith$elm_ui$Internal$Style$classes.d2 + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.eU);
		case 2:
			return $mdgriffith$elm_ui$Internal$Style$classes.d2 + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.eV);
		default:
			return $mdgriffith$elm_ui$Internal$Style$classes.d2 + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.gG);
	}
};
var $mdgriffith$elm_ui$Internal$Model$alignYName = function (align) {
	switch (align) {
		case 0:
			return $mdgriffith$elm_ui$Internal$Style$classes.d3 + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.gM);
		case 2:
			return $mdgriffith$elm_ui$Internal$Style$classes.d3 + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.gF);
		default:
			return $mdgriffith$elm_ui$Internal$Style$classes.d3 + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.gH);
	}
};
var $elm$virtual_dom$VirtualDom$attribute = F2(
	function (key, value) {
		return A2(
			_VirtualDom_attribute,
			_VirtualDom_noOnOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $mdgriffith$elm_ui$Internal$Model$FullTransform = F4(
	function (a, b, c, d) {
		return {$: 2, a: a, b: b, c: c, d: d};
	});
var $mdgriffith$elm_ui$Internal$Model$Moved = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$composeTransformation = F2(
	function (transform, component) {
		switch (transform.$) {
			case 0:
				switch (component.$) {
					case 0:
						var x = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(x, 0, 0));
					case 1:
						var y = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(0, y, 0));
					case 2:
						var z = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(0, 0, z));
					case 3:
						var xyz = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(xyz);
					case 4:
						var xyz = component.a;
						var angle = component.b;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(0, 0, 0),
							_Utils_Tuple3(1, 1, 1),
							xyz,
							angle);
					default:
						var xyz = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(0, 0, 0),
							xyz,
							_Utils_Tuple3(0, 0, 1),
							0);
				}
			case 1:
				var moved = transform.a;
				var x = moved.a;
				var y = moved.b;
				var z = moved.c;
				switch (component.$) {
					case 0:
						var newX = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(newX, y, z));
					case 1:
						var newY = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(x, newY, z));
					case 2:
						var newZ = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(x, y, newZ));
					case 3:
						var xyz = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(xyz);
					case 4:
						var xyz = component.a;
						var angle = component.b;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							moved,
							_Utils_Tuple3(1, 1, 1),
							xyz,
							angle);
					default:
						var scale = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							moved,
							scale,
							_Utils_Tuple3(0, 0, 1),
							0);
				}
			default:
				var moved = transform.a;
				var x = moved.a;
				var y = moved.b;
				var z = moved.c;
				var scaled = transform.b;
				var origin = transform.c;
				var angle = transform.d;
				switch (component.$) {
					case 0:
						var newX = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(newX, y, z),
							scaled,
							origin,
							angle);
					case 1:
						var newY = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(x, newY, z),
							scaled,
							origin,
							angle);
					case 2:
						var newZ = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(x, y, newZ),
							scaled,
							origin,
							angle);
					case 3:
						var newMove = component.a;
						return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, newMove, scaled, origin, angle);
					case 4:
						var newOrigin = component.a;
						var newAngle = component.b;
						return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, scaled, newOrigin, newAngle);
					default:
						var newScale = component.a;
						return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, newScale, origin, angle);
				}
		}
	});
var $mdgriffith$elm_ui$Internal$Flag$height = $mdgriffith$elm_ui$Internal$Flag$flag(7);
var $mdgriffith$elm_ui$Internal$Flag$heightContent = $mdgriffith$elm_ui$Internal$Flag$flag(36);
var $mdgriffith$elm_ui$Internal$Flag$merge = F2(
	function (_v0, _v1) {
		var one = _v0.a;
		var two = _v0.b;
		var three = _v1.a;
		var four = _v1.b;
		return A2($mdgriffith$elm_ui$Internal$Flag$Field, one | three, two | four);
	});
var $mdgriffith$elm_ui$Internal$Flag$none = A2($mdgriffith$elm_ui$Internal$Flag$Field, 0, 0);
var $mdgriffith$elm_ui$Internal$Model$renderHeight = function (h) {
	switch (h.$) {
		case 0:
			var px = h.a;
			var val = $elm$core$String$fromInt(px);
			var name = 'height-px-' + val;
			return _Utils_Tuple3(
				$mdgriffith$elm_ui$Internal$Flag$none,
				$mdgriffith$elm_ui$Internal$Style$classes.fl + (' ' + name),
				_List_fromArray(
					[
						A3($mdgriffith$elm_ui$Internal$Model$Single, name, 'height', val + 'px')
					]));
		case 1:
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightContent, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.ee,
				_List_Nil);
		case 2:
			var portion = h.a;
			return (portion === 1) ? _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.ef,
				_List_Nil) : _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.fm + (' height-fill-' + $elm$core$String$fromInt(portion)),
				_List_fromArray(
					[
						A3(
						$mdgriffith$elm_ui$Internal$Model$Single,
						$mdgriffith$elm_ui$Internal$Style$classes.gP + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.ac + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(
							'height-fill-' + $elm$core$String$fromInt(portion))))),
						'flex-grow',
						$elm$core$String$fromInt(portion * 100000))
					]));
		case 3:
			var minSize = h.a;
			var len = h.b;
			var cls = 'min-height-' + $elm$core$String$fromInt(minSize);
			var style = A3(
				$mdgriffith$elm_ui$Internal$Model$Single,
				cls,
				'min-height',
				$elm$core$String$fromInt(minSize) + 'px !important');
			var _v1 = $mdgriffith$elm_ui$Internal$Model$renderHeight(len);
			var newFlag = _v1.a;
			var newAttrs = _v1.b;
			var newStyle = _v1.c;
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightBetween, newFlag),
				cls + (' ' + newAttrs),
				A2($elm$core$List$cons, style, newStyle));
		default:
			var maxSize = h.a;
			var len = h.b;
			var cls = 'max-height-' + $elm$core$String$fromInt(maxSize);
			var style = A3(
				$mdgriffith$elm_ui$Internal$Model$Single,
				cls,
				'max-height',
				$elm$core$String$fromInt(maxSize) + 'px');
			var _v2 = $mdgriffith$elm_ui$Internal$Model$renderHeight(len);
			var newFlag = _v2.a;
			var newAttrs = _v2.b;
			var newStyle = _v2.c;
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightBetween, newFlag),
				cls + (' ' + newAttrs),
				A2($elm$core$List$cons, style, newStyle));
	}
};
var $mdgriffith$elm_ui$Internal$Flag$widthContent = $mdgriffith$elm_ui$Internal$Flag$flag(38);
var $mdgriffith$elm_ui$Internal$Model$renderWidth = function (w) {
	switch (w.$) {
		case 0:
			var px = w.a;
			return _Utils_Tuple3(
				$mdgriffith$elm_ui$Internal$Flag$none,
				$mdgriffith$elm_ui$Internal$Style$classes.gi + (' width-px-' + $elm$core$String$fromInt(px)),
				_List_fromArray(
					[
						A3(
						$mdgriffith$elm_ui$Internal$Model$Single,
						'width-px-' + $elm$core$String$fromInt(px),
						'width',
						$elm$core$String$fromInt(px) + 'px')
					]));
		case 1:
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthContent, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.eM,
				_List_Nil);
		case 2:
			var portion = w.a;
			return (portion === 1) ? _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.eN,
				_List_Nil) : _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.gj + (' width-fill-' + $elm$core$String$fromInt(portion)),
				_List_fromArray(
					[
						A3(
						$mdgriffith$elm_ui$Internal$Model$Single,
						$mdgriffith$elm_ui$Internal$Style$classes.gP + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.aj + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(
							'width-fill-' + $elm$core$String$fromInt(portion))))),
						'flex-grow',
						$elm$core$String$fromInt(portion * 100000))
					]));
		case 3:
			var minSize = w.a;
			var len = w.b;
			var cls = 'min-width-' + $elm$core$String$fromInt(minSize);
			var style = A3(
				$mdgriffith$elm_ui$Internal$Model$Single,
				cls,
				'min-width',
				$elm$core$String$fromInt(minSize) + 'px');
			var _v1 = $mdgriffith$elm_ui$Internal$Model$renderWidth(len);
			var newFlag = _v1.a;
			var newAttrs = _v1.b;
			var newStyle = _v1.c;
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthBetween, newFlag),
				cls + (' ' + newAttrs),
				A2($elm$core$List$cons, style, newStyle));
		default:
			var maxSize = w.a;
			var len = w.b;
			var cls = 'max-width-' + $elm$core$String$fromInt(maxSize);
			var style = A3(
				$mdgriffith$elm_ui$Internal$Model$Single,
				cls,
				'max-width',
				$elm$core$String$fromInt(maxSize) + 'px');
			var _v2 = $mdgriffith$elm_ui$Internal$Model$renderWidth(len);
			var newFlag = _v2.a;
			var newAttrs = _v2.b;
			var newStyle = _v2.c;
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthBetween, newFlag),
				cls + (' ' + newAttrs),
				A2($elm$core$List$cons, style, newStyle));
	}
};
var $mdgriffith$elm_ui$Internal$Flag$borderWidth = $mdgriffith$elm_ui$Internal$Flag$flag(27);
var $elm$core$Basics$ge = _Utils_ge;
var $mdgriffith$elm_ui$Internal$Model$skippable = F2(
	function (flag, style) {
		if (_Utils_eq(flag, $mdgriffith$elm_ui$Internal$Flag$borderWidth)) {
			if (style.$ === 3) {
				var val = style.c;
				switch (val) {
					case '0px':
						return true;
					case '1px':
						return true;
					case '2px':
						return true;
					case '3px':
						return true;
					case '4px':
						return true;
					case '5px':
						return true;
					case '6px':
						return true;
					default:
						return false;
				}
			} else {
				return false;
			}
		} else {
			switch (style.$) {
				case 2:
					var i = style.a;
					return (i >= 8) && (i <= 32);
				case 7:
					var name = style.a;
					var t = style.b;
					var r = style.c;
					var b = style.d;
					var l = style.e;
					return _Utils_eq(t, b) && (_Utils_eq(t, r) && (_Utils_eq(t, l) && ((t >= 0) && (t <= 24))));
				default:
					return false;
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Flag$width = $mdgriffith$elm_ui$Internal$Flag$flag(6);
var $mdgriffith$elm_ui$Internal$Flag$xAlign = $mdgriffith$elm_ui$Internal$Flag$flag(30);
var $mdgriffith$elm_ui$Internal$Flag$yAlign = $mdgriffith$elm_ui$Internal$Flag$flag(29);
var $mdgriffith$elm_ui$Internal$Model$gatherAttrRecursive = F8(
	function (classes, node, has, transform, styles, attrs, children, elementAttrs) {
		gatherAttrRecursive:
		while (true) {
			if (!elementAttrs.b) {
				var _v1 = $mdgriffith$elm_ui$Internal$Model$transformClass(transform);
				if (_v1.$ === 1) {
					return {
						az: A2(
							$elm$core$List$cons,
							$elm$html$Html$Attributes$class(classes),
							attrs),
						aA: children,
						aD: has,
						aF: node,
						iM: styles
					};
				} else {
					var _class = _v1.a;
					return {
						az: A2(
							$elm$core$List$cons,
							$elm$html$Html$Attributes$class(classes + (' ' + _class)),
							attrs),
						aA: children,
						aD: has,
						aF: node,
						iM: A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Internal$Model$Transform(transform),
							styles)
					};
				}
			} else {
				var attribute = elementAttrs.a;
				var remaining = elementAttrs.b;
				switch (attribute.$) {
					case 0:
						var $temp$classes = classes,
							$temp$node = node,
							$temp$has = has,
							$temp$transform = transform,
							$temp$styles = styles,
							$temp$attrs = attrs,
							$temp$children = children,
							$temp$elementAttrs = remaining;
						classes = $temp$classes;
						node = $temp$node;
						has = $temp$has;
						transform = $temp$transform;
						styles = $temp$styles;
						attrs = $temp$attrs;
						children = $temp$children;
						elementAttrs = $temp$elementAttrs;
						continue gatherAttrRecursive;
					case 3:
						var flag = attribute.a;
						var exactClassName = attribute.b;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, flag, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							var $temp$classes = exactClassName + (' ' + classes),
								$temp$node = node,
								$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						}
					case 1:
						var actualAttribute = attribute.a;
						var $temp$classes = classes,
							$temp$node = node,
							$temp$has = has,
							$temp$transform = transform,
							$temp$styles = styles,
							$temp$attrs = A2($elm$core$List$cons, actualAttribute, attrs),
							$temp$children = children,
							$temp$elementAttrs = remaining;
						classes = $temp$classes;
						node = $temp$node;
						has = $temp$has;
						transform = $temp$transform;
						styles = $temp$styles;
						attrs = $temp$attrs;
						children = $temp$children;
						elementAttrs = $temp$elementAttrs;
						continue gatherAttrRecursive;
					case 4:
						var flag = attribute.a;
						var style = attribute.b;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, flag, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							if (A2($mdgriffith$elm_ui$Internal$Model$skippable, flag, style)) {
								var $temp$classes = $mdgriffith$elm_ui$Internal$Model$getStyleName(style) + (' ' + classes),
									$temp$node = node,
									$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							} else {
								var $temp$classes = $mdgriffith$elm_ui$Internal$Model$getStyleName(style) + (' ' + classes),
									$temp$node = node,
									$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),
									$temp$transform = transform,
									$temp$styles = A2($elm$core$List$cons, style, styles),
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							}
						}
					case 10:
						var flag = attribute.a;
						var component = attribute.b;
						var $temp$classes = classes,
							$temp$node = node,
							$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),
							$temp$transform = A2($mdgriffith$elm_ui$Internal$Model$composeTransformation, transform, component),
							$temp$styles = styles,
							$temp$attrs = attrs,
							$temp$children = children,
							$temp$elementAttrs = remaining;
						classes = $temp$classes;
						node = $temp$node;
						has = $temp$has;
						transform = $temp$transform;
						styles = $temp$styles;
						attrs = $temp$attrs;
						children = $temp$children;
						elementAttrs = $temp$elementAttrs;
						continue gatherAttrRecursive;
					case 7:
						var width = attribute.a;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$width, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							switch (width.$) {
								case 0:
									var px = width.a;
									var $temp$classes = ($mdgriffith$elm_ui$Internal$Style$classes.gi + (' width-px-' + $elm$core$String$fromInt(px))) + (' ' + classes),
										$temp$node = node,
										$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has),
										$temp$transform = transform,
										$temp$styles = A2(
										$elm$core$List$cons,
										A3(
											$mdgriffith$elm_ui$Internal$Model$Single,
											'width-px-' + $elm$core$String$fromInt(px),
											'width',
											$elm$core$String$fromInt(px) + 'px'),
										styles),
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								case 1:
									var $temp$classes = classes + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.eM),
										$temp$node = node,
										$temp$has = A2(
										$mdgriffith$elm_ui$Internal$Flag$add,
										$mdgriffith$elm_ui$Internal$Flag$widthContent,
										A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),
										$temp$transform = transform,
										$temp$styles = styles,
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								case 2:
									var portion = width.a;
									if (portion === 1) {
										var $temp$classes = classes + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.eN),
											$temp$node = node,
											$temp$has = A2(
											$mdgriffith$elm_ui$Internal$Flag$add,
											$mdgriffith$elm_ui$Internal$Flag$widthFill,
											A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),
											$temp$transform = transform,
											$temp$styles = styles,
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									} else {
										var $temp$classes = classes + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.gj + (' width-fill-' + $elm$core$String$fromInt(portion)))),
											$temp$node = node,
											$temp$has = A2(
											$mdgriffith$elm_ui$Internal$Flag$add,
											$mdgriffith$elm_ui$Internal$Flag$widthFill,
											A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),
											$temp$transform = transform,
											$temp$styles = A2(
											$elm$core$List$cons,
											A3(
												$mdgriffith$elm_ui$Internal$Model$Single,
												$mdgriffith$elm_ui$Internal$Style$classes.gP + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.aj + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(
													'width-fill-' + $elm$core$String$fromInt(portion))))),
												'flex-grow',
												$elm$core$String$fromInt(portion * 100000)),
											styles),
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									}
								default:
									var _v4 = $mdgriffith$elm_ui$Internal$Model$renderWidth(width);
									var addToFlags = _v4.a;
									var newClass = _v4.b;
									var newStyles = _v4.c;
									var $temp$classes = classes + (' ' + newClass),
										$temp$node = node,
										$temp$has = A2(
										$mdgriffith$elm_ui$Internal$Flag$merge,
										addToFlags,
										A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),
										$temp$transform = transform,
										$temp$styles = _Utils_ap(newStyles, styles),
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
							}
						}
					case 8:
						var height = attribute.a;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$height, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							switch (height.$) {
								case 0:
									var px = height.a;
									var val = $elm$core$String$fromInt(px) + 'px';
									var name = 'height-px-' + val;
									var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.fl + (' ' + (name + (' ' + classes))),
										$temp$node = node,
										$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has),
										$temp$transform = transform,
										$temp$styles = A2(
										$elm$core$List$cons,
										A3($mdgriffith$elm_ui$Internal$Model$Single, name, 'height ', val),
										styles),
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								case 1:
									var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.ee + (' ' + classes),
										$temp$node = node,
										$temp$has = A2(
										$mdgriffith$elm_ui$Internal$Flag$add,
										$mdgriffith$elm_ui$Internal$Flag$heightContent,
										A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),
										$temp$transform = transform,
										$temp$styles = styles,
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								case 2:
									var portion = height.a;
									if (portion === 1) {
										var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.ef + (' ' + classes),
											$temp$node = node,
											$temp$has = A2(
											$mdgriffith$elm_ui$Internal$Flag$add,
											$mdgriffith$elm_ui$Internal$Flag$heightFill,
											A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),
											$temp$transform = transform,
											$temp$styles = styles,
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									} else {
										var $temp$classes = classes + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.fm + (' height-fill-' + $elm$core$String$fromInt(portion)))),
											$temp$node = node,
											$temp$has = A2(
											$mdgriffith$elm_ui$Internal$Flag$add,
											$mdgriffith$elm_ui$Internal$Flag$heightFill,
											A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),
											$temp$transform = transform,
											$temp$styles = A2(
											$elm$core$List$cons,
											A3(
												$mdgriffith$elm_ui$Internal$Model$Single,
												$mdgriffith$elm_ui$Internal$Style$classes.gP + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.ac + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(
													'height-fill-' + $elm$core$String$fromInt(portion))))),
												'flex-grow',
												$elm$core$String$fromInt(portion * 100000)),
											styles),
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									}
								default:
									var _v6 = $mdgriffith$elm_ui$Internal$Model$renderHeight(height);
									var addToFlags = _v6.a;
									var newClass = _v6.b;
									var newStyles = _v6.c;
									var $temp$classes = classes + (' ' + newClass),
										$temp$node = node,
										$temp$has = A2(
										$mdgriffith$elm_ui$Internal$Flag$merge,
										addToFlags,
										A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),
										$temp$transform = transform,
										$temp$styles = _Utils_ap(newStyles, styles),
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
							}
						}
					case 2:
						var description = attribute.a;
						switch (description.$) {
							case 0:
								var $temp$classes = classes,
									$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'main', node),
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 1:
								var $temp$classes = classes,
									$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'nav', node),
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 2:
								var $temp$classes = classes,
									$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'footer', node),
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 3:
								var $temp$classes = classes,
									$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'aside', node),
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 4:
								var i = description.a;
								if (i <= 1) {
									var $temp$classes = classes,
										$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h1', node),
										$temp$has = has,
										$temp$transform = transform,
										$temp$styles = styles,
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								} else {
									if (i < 7) {
										var $temp$classes = classes,
											$temp$node = A2(
											$mdgriffith$elm_ui$Internal$Model$addNodeName,
											'h' + $elm$core$String$fromInt(i),
											node),
											$temp$has = has,
											$temp$transform = transform,
											$temp$styles = styles,
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									} else {
										var $temp$classes = classes,
											$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h6', node),
											$temp$has = has,
											$temp$transform = transform,
											$temp$styles = styles,
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									}
								}
							case 9:
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 8:
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = A2(
									$elm$core$List$cons,
									A2($elm$virtual_dom$VirtualDom$attribute, 'role', 'button'),
									attrs),
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 5:
								var label = description.a;
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = A2(
									$elm$core$List$cons,
									A2($elm$virtual_dom$VirtualDom$attribute, 'aria-label', label),
									attrs),
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 6:
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = A2(
									$elm$core$List$cons,
									A2($elm$virtual_dom$VirtualDom$attribute, 'aria-live', 'polite'),
									attrs),
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							default:
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = A2(
									$elm$core$List$cons,
									A2($elm$virtual_dom$VirtualDom$attribute, 'aria-live', 'assertive'),
									attrs),
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
						}
					case 9:
						var location = attribute.a;
						var elem = attribute.b;
						var newStyles = function () {
							switch (elem.$) {
								case 3:
									return styles;
								case 2:
									var str = elem.a;
									return styles;
								case 0:
									var html = elem.a;
									return styles;
								default:
									var styled = elem.a;
									return _Utils_ap(styles, styled.iM);
							}
						}();
						var $temp$classes = classes,
							$temp$node = node,
							$temp$has = has,
							$temp$transform = transform,
							$temp$styles = newStyles,
							$temp$attrs = attrs,
							$temp$children = A3($mdgriffith$elm_ui$Internal$Model$addNearbyElement, location, elem, children),
							$temp$elementAttrs = remaining;
						classes = $temp$classes;
						node = $temp$node;
						has = $temp$has;
						transform = $temp$transform;
						styles = $temp$styles;
						attrs = $temp$attrs;
						children = $temp$children;
						elementAttrs = $temp$elementAttrs;
						continue gatherAttrRecursive;
					case 6:
						var x = attribute.a;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$xAlign, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							var $temp$classes = $mdgriffith$elm_ui$Internal$Model$alignXName(x) + (' ' + classes),
								$temp$node = node,
								$temp$has = function (flags) {
								switch (x) {
									case 1:
										return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$centerX, flags);
									case 2:
										return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$alignRight, flags);
									default:
										return flags;
								}
							}(
								A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$xAlign, has)),
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						}
					default:
						var y = attribute.a;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$yAlign, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							var $temp$classes = $mdgriffith$elm_ui$Internal$Model$alignYName(y) + (' ' + classes),
								$temp$node = node,
								$temp$has = function (flags) {
								switch (y) {
									case 1:
										return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$centerY, flags);
									case 2:
										return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$alignBottom, flags);
									default:
										return flags;
								}
							}(
								A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$yAlign, has)),
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						}
				}
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$Untransformed = {$: 0};
var $mdgriffith$elm_ui$Internal$Model$untransformed = $mdgriffith$elm_ui$Internal$Model$Untransformed;
var $mdgriffith$elm_ui$Internal$Model$element = F4(
	function (context, node, attributes, children) {
		return A3(
			$mdgriffith$elm_ui$Internal$Model$createElement,
			context,
			children,
			A8(
				$mdgriffith$elm_ui$Internal$Model$gatherAttrRecursive,
				$mdgriffith$elm_ui$Internal$Model$contextClasses(context),
				node,
				$mdgriffith$elm_ui$Internal$Flag$none,
				$mdgriffith$elm_ui$Internal$Model$untransformed,
				_List_Nil,
				_List_Nil,
				$mdgriffith$elm_ui$Internal$Model$NoNearbyChildren,
				$elm$core$List$reverse(attributes)));
	});
var $mdgriffith$elm_ui$Internal$Model$Height = function (a) {
	return {$: 8, a: a};
};
var $mdgriffith$elm_ui$Element$height = $mdgriffith$elm_ui$Internal$Model$Height;
var $mdgriffith$elm_ui$Internal$Model$Content = {$: 1};
var $mdgriffith$elm_ui$Element$shrink = $mdgriffith$elm_ui$Internal$Model$Content;
var $mdgriffith$elm_ui$Internal$Model$Width = function (a) {
	return {$: 7, a: a};
};
var $mdgriffith$elm_ui$Element$width = $mdgriffith$elm_ui$Internal$Model$Width;
var $mdgriffith$elm_ui$Element$el = F2(
	function (attrs, child) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
					attrs)),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(
				_List_fromArray(
					[child])));
	});
var $mdgriffith$elm_ui$Internal$Model$Fill = function (a) {
	return {$: 2, a: a};
};
var $mdgriffith$elm_ui$Element$fill = $mdgriffith$elm_ui$Internal$Model$Fill(1);
var $elm$core$Basics$always = F2(
	function (a, _v0) {
		return a;
	});
var $elm$core$Basics$composeL = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var $mdgriffith$elm_ui$Internal$Model$unstyled = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Unstyled, $elm$core$Basics$always);
var $mdgriffith$elm_ui$Element$html = $mdgriffith$elm_ui$Internal$Model$unstyled;
var $elm$html$Html$li = _VirtualDom_node('li');
var $mdgriffith$elm_ui$Internal$Model$Attr = function (a) {
	return {$: 1, a: a};
};
var $elm$html$Html$Attributes$href = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'href',
		_VirtualDom_noJavaScriptUri(url));
};
var $mdgriffith$elm_ui$Internal$Model$htmlClass = function (cls) {
	return $mdgriffith$elm_ui$Internal$Model$Attr(
		$elm$html$Html$Attributes$class(cls));
};
var $elm$html$Html$Attributes$rel = _VirtualDom_attribute('rel');
var $mdgriffith$elm_ui$Element$link = F2(
	function (attrs, _v0) {
		var url = _v0.jq;
		var label = _v0.dL;
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			$mdgriffith$elm_ui$Internal$Model$NodeName('a'),
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$Attr(
					$elm$html$Html$Attributes$href(url)),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Internal$Model$Attr(
						$elm$html$Html$Attributes$rel('noopener noreferrer')),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
							A2(
								$elm$core$List$cons,
								$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.dy + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.at + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.fz)))),
								attrs))))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(
				_List_fromArray(
					[label])));
	});
var $mdgriffith$elm_ui$Internal$Model$Text = function (a) {
	return {$: 2, a: a};
};
var $mdgriffith$elm_ui$Element$text = function (content) {
	return $mdgriffith$elm_ui$Internal$Model$Text(content);
};
var $mdgriffith$elm_ui$Element$Font$underline = $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.jn);
var $author$project$Ui$Layout$link = F2(
	function (url, label) {
		return A2(
			$mdgriffith$elm_ui$Element$link,
			_List_fromArray(
				[$mdgriffith$elm_ui$Element$Font$underline]),
			{
				dL: $mdgriffith$elm_ui$Element$text(label),
				jq: url
			});
	});
var $mdgriffith$elm_ui$Internal$Model$Empty = {$: 3};
var $mdgriffith$elm_ui$Internal$Model$map = F2(
	function (fn, el) {
		switch (el.$) {
			case 1:
				var styled = el.a;
				return $mdgriffith$elm_ui$Internal$Model$Styled(
					{
						hI: F2(
							function (add, context) {
								return A2(
									$elm$virtual_dom$VirtualDom$map,
									fn,
									A2(styled.hI, add, context));
							}),
						iM: styled.iM
					});
			case 0:
				var html = el.a;
				return $mdgriffith$elm_ui$Internal$Model$Unstyled(
					A2(
						$elm$core$Basics$composeL,
						$elm$virtual_dom$VirtualDom$map(fn),
						html));
			case 2:
				var str = el.a;
				return $mdgriffith$elm_ui$Internal$Model$Text(str);
			default:
				return $mdgriffith$elm_ui$Internal$Model$Empty;
		}
	});
var $mdgriffith$elm_ui$Element$map = $mdgriffith$elm_ui$Internal$Model$map;
var $mdgriffith$elm_ui$Internal$Model$Max = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $mdgriffith$elm_ui$Element$maximum = F2(
	function (i, l) {
		return A2($mdgriffith$elm_ui$Internal$Model$Max, i, l);
	});
var $mdgriffith$elm_ui$Internal$Model$PaddingStyle = F5(
	function (a, b, c, d, e) {
		return {$: 7, a: a, b: b, c: c, d: d, e: e};
	});
var $mdgriffith$elm_ui$Internal$Model$StyleClass = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Flag$padding = $mdgriffith$elm_ui$Internal$Flag$flag(2);
var $mdgriffith$elm_ui$Internal$Model$paddingName = F4(
	function (top, right, bottom, left) {
		return 'pad-' + ($elm$core$String$fromInt(top) + ('-' + ($elm$core$String$fromInt(right) + ('-' + ($elm$core$String$fromInt(bottom) + ('-' + $elm$core$String$fromInt(left)))))));
	});
var $mdgriffith$elm_ui$Element$paddingEach = function (_v0) {
	var top = _v0.di;
	var right = _v0.c5;
	var bottom = _v0.a4;
	var left = _v0.c2;
	if (_Utils_eq(top, right) && (_Utils_eq(top, bottom) && _Utils_eq(top, left))) {
		var topFloat = top;
		return A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$padding,
			A5(
				$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
				'p-' + $elm$core$String$fromInt(top),
				topFloat,
				topFloat,
				topFloat,
				topFloat));
	} else {
		return A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$padding,
			A5(
				$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
				A4($mdgriffith$elm_ui$Internal$Model$paddingName, top, right, bottom, left),
				top,
				right,
				bottom,
				left));
	}
};
var $mdgriffith$elm_ui$Element$paddingXY = F2(
	function (x, y) {
		if (_Utils_eq(x, y)) {
			var f = x;
			return A2(
				$mdgriffith$elm_ui$Internal$Model$StyleClass,
				$mdgriffith$elm_ui$Internal$Flag$padding,
				A5(
					$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
					'p-' + $elm$core$String$fromInt(x),
					f,
					f,
					f,
					f));
		} else {
			var yFloat = y;
			var xFloat = x;
			return A2(
				$mdgriffith$elm_ui$Internal$Model$StyleClass,
				$mdgriffith$elm_ui$Internal$Flag$padding,
				A5(
					$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
					'p-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y))),
					yFloat,
					xFloat,
					yFloat,
					xFloat));
		}
	});
var $mdgriffith$elm_ui$Internal$Model$Describe = function (a) {
	return {$: 2, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Paragraph = {$: 9};
var $mdgriffith$elm_ui$Internal$Model$SpacingStyle = F3(
	function (a, b, c) {
		return {$: 5, a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Internal$Flag$spacing = $mdgriffith$elm_ui$Internal$Flag$flag(3);
var $mdgriffith$elm_ui$Internal$Model$spacingName = F2(
	function (x, y) {
		return 'spacing-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y)));
	});
var $mdgriffith$elm_ui$Element$spacing = function (x) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$spacing,
		A3(
			$mdgriffith$elm_ui$Internal$Model$SpacingStyle,
			A2($mdgriffith$elm_ui$Internal$Model$spacingName, x, x),
			x,
			x));
};
var $mdgriffith$elm_ui$Element$paragraph = F2(
	function (attrs, children) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asParagraph,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$Paragraph),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$spacing(5),
						attrs))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
	});
var $mdgriffith$elm_ui$Internal$Model$AsRow = 0;
var $mdgriffith$elm_ui$Internal$Model$asRow = 0;
var $mdgriffith$elm_ui$Element$row = F2(
	function (attrs, children) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asRow,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.a9 + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.at)),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
						attrs))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
	});
var $mdgriffith$elm_ui$Internal$Model$FontSize = function (a) {
	return {$: 2, a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$fontSize = $mdgriffith$elm_ui$Internal$Flag$flag(4);
var $mdgriffith$elm_ui$Element$Font$size = function (i) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$fontSize,
		$mdgriffith$elm_ui$Internal$Model$FontSize(i));
};
var $author$project$Ui$Menu$OnToggle = 0;
var $mdgriffith$elm_ui$Internal$Model$AlignX = function (a) {
	return {$: 6, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Left = 0;
var $mdgriffith$elm_ui$Element$alignLeft = $mdgriffith$elm_ui$Internal$Model$AlignX(0);
var $mdgriffith$elm_ui$Internal$Model$Right = 2;
var $mdgriffith$elm_ui$Element$alignRight = $mdgriffith$elm_ui$Internal$Model$AlignX(2);
var $mdgriffith$elm_ui$Internal$Model$AlignY = function (a) {
	return {$: 5, a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Top = 0;
var $mdgriffith$elm_ui$Element$alignTop = $mdgriffith$elm_ui$Internal$Model$AlignY(0);
var $mdgriffith$elm_ui$Internal$Model$Button = {$: 8};
var $elm$json$Json$Encode$bool = _Json_wrap;
var $elm$html$Html$Attributes$boolProperty = F2(
	function (key, bool) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$bool(bool));
	});
var $elm$html$Html$Attributes$disabled = $elm$html$Html$Attributes$boolProperty('disabled');
var $mdgriffith$elm_ui$Element$Input$enter = 'Enter';
var $mdgriffith$elm_ui$Internal$Model$NoAttribute = {$: 0};
var $mdgriffith$elm_ui$Element$Input$hasFocusStyle = function (attr) {
	if (((attr.$ === 4) && (attr.b.$ === 11)) && (!attr.b.a)) {
		var _v1 = attr.b;
		var _v2 = _v1.a;
		return true;
	} else {
		return false;
	}
};
var $mdgriffith$elm_ui$Element$Input$focusDefault = function (attrs) {
	return A2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, attrs) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass('focusable');
};
var $elm$virtual_dom$VirtualDom$Normal = function (a) {
	return {$: 0, a: a};
};
var $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;
var $elm$html$Html$Events$on = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Normal(decoder));
	});
var $elm$html$Html$Events$onClick = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'click',
		$elm$json$Json$Decode$succeed(msg));
};
var $mdgriffith$elm_ui$Element$Events$onClick = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onClick);
var $elm$json$Json$Decode$andThen = _Json_andThen;
var $elm$json$Json$Decode$fail = _Json_fail;
var $elm$virtual_dom$VirtualDom$MayPreventDefault = function (a) {
	return {$: 2, a: a};
};
var $elm$html$Html$Events$preventDefaultOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayPreventDefault(decoder));
	});
var $elm$json$Json$Decode$string = _Json_decodeString;
var $mdgriffith$elm_ui$Element$Input$onKeyLookup = function (lookup) {
	var decode = function (code) {
		var _v0 = lookup(code);
		if (_v0.$ === 1) {
			return $elm$json$Json$Decode$fail('No key matched');
		} else {
			var msg = _v0.a;
			return $elm$json$Json$Decode$succeed(msg);
		}
	};
	var isKey = A2(
		$elm$json$Json$Decode$andThen,
		decode,
		A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string));
	return $mdgriffith$elm_ui$Internal$Model$Attr(
		A2(
			$elm$html$Html$Events$preventDefaultOn,
			'keydown',
			A2(
				$elm$json$Json$Decode$map,
				function (fired) {
					return _Utils_Tuple2(fired, true);
				},
				isKey)));
};
var $mdgriffith$elm_ui$Internal$Model$Class = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Flag$cursor = $mdgriffith$elm_ui$Internal$Flag$flag(21);
var $mdgriffith$elm_ui$Element$pointer = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$cursor, $mdgriffith$elm_ui$Internal$Style$classes.hg);
var $mdgriffith$elm_ui$Element$Input$space = ' ';
var $elm$html$Html$Attributes$tabindex = function (n) {
	return A2(
		_VirtualDom_attribute,
		'tabIndex',
		$elm$core$String$fromInt(n));
};
var $mdgriffith$elm_ui$Element$Input$button = F2(
	function (attrs, _v0) {
		var onPress = _v0.ia;
		var label = _v0.dL;
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.dy + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.at + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.ix + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.fE)))))),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$pointer,
							A2(
								$elm$core$List$cons,
								$mdgriffith$elm_ui$Element$Input$focusDefault(attrs),
								A2(
									$elm$core$List$cons,
									$mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$Button),
									A2(
										$elm$core$List$cons,
										$mdgriffith$elm_ui$Internal$Model$Attr(
											$elm$html$Html$Attributes$tabindex(0)),
										function () {
											if (onPress.$ === 1) {
												return A2(
													$elm$core$List$cons,
													$mdgriffith$elm_ui$Internal$Model$Attr(
														$elm$html$Html$Attributes$disabled(true)),
													attrs);
											} else {
												var msg = onPress.a;
												return A2(
													$elm$core$List$cons,
													$mdgriffith$elm_ui$Element$Events$onClick(msg),
													A2(
														$elm$core$List$cons,
														$mdgriffith$elm_ui$Element$Input$onKeyLookup(
															function (code) {
																return _Utils_eq(code, $mdgriffith$elm_ui$Element$Input$enter) ? $elm$core$Maybe$Just(msg) : (_Utils_eq(code, $mdgriffith$elm_ui$Element$Input$space) ? $elm$core$Maybe$Just(msg) : $elm$core$Maybe$Nothing);
															}),
														attrs));
											}
										}()))))))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(
				_List_fromArray(
					[label])));
	});
var $mdgriffith$elm_ui$Internal$Model$CenterX = 1;
var $mdgriffith$elm_ui$Element$centerX = $mdgriffith$elm_ui$Internal$Model$AlignX(1);
var $mdgriffith$elm_ui$Internal$Model$AsColumn = 1;
var $mdgriffith$elm_ui$Internal$Model$asColumn = 1;
var $mdgriffith$elm_ui$Element$column = F2(
	function (attrs, children) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asColumn,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.he + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.a9)),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
						attrs))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
	});
var $author$project$Ui$Menu$Link = F2(
	function (url, title) {
		return {i5: title, jq: url};
	});
var $elm$url$Url$Builder$toQueryPair = function (_v0) {
	var key = _v0.a;
	var value = _v0.b;
	return key + ('=' + value);
};
var $elm$url$Url$Builder$toQuery = function (parameters) {
	if (!parameters.b) {
		return '';
	} else {
		return '?' + A2(
			$elm$core$String$join,
			'&',
			A2($elm$core$List$map, $elm$url$Url$Builder$toQueryPair, parameters));
	}
};
var $elm$url$Url$Builder$absolute = F2(
	function (pathSegments, parameters) {
		return '/' + (A2($elm$core$String$join, '/', pathSegments) + $elm$url$Url$Builder$toQuery(parameters));
	});
var $author$project$Route$toString = function (route) {
	switch (route.$) {
		case 0:
			return A2(
				$elm$url$Url$Builder$absolute,
				_List_Nil,
				A2($elm$core$List$filterMap, $elm$core$Basics$identity, _List_Nil));
		case 1:
			return A2(
				$elm$url$Url$Builder$absolute,
				_List_fromArray(
					['administration']),
				A2($elm$core$List$filterMap, $elm$core$Basics$identity, _List_Nil));
		case 2:
			return A2(
				$elm$url$Url$Builder$absolute,
				_List_fromArray(
					['documentation']),
				A2($elm$core$List$filterMap, $elm$core$Basics$identity, _List_Nil));
		case 3:
			var p1 = route.a;
			return A2(
				$elm$url$Url$Builder$absolute,
				_List_fromArray(
					['documentation', p1]),
				A2($elm$core$List$filterMap, $elm$core$Basics$identity, _List_Nil));
		case 4:
			var p1 = route.a;
			var p2 = route.b;
			return A2(
				$elm$url$Url$Builder$absolute,
				_List_fromArray(
					['documentation', p1, p2]),
				A2($elm$core$List$filterMap, $elm$core$Basics$identity, _List_Nil));
		default:
			return A2(
				$elm$url$Url$Builder$absolute,
				_List_fromArray(
					['getting-started']),
				A2($elm$core$List$filterMap, $elm$core$Basics$identity, _List_Nil));
	}
};
var $author$project$Route$administration = $author$project$Route$toString($author$project$Route$Administration);
var $author$project$Route$documentation = $author$project$Route$toString($author$project$Route$Documentation);
var $author$project$Route$gettingStarted = $author$project$Route$toString($author$project$Route$Getting_started);
var $author$project$Ui$Menu$viewLink = function (link) {
	return A2(
		$mdgriffith$elm_ui$Element$link,
		_List_Nil,
		{
			dL: $mdgriffith$elm_ui$Element$text(link.i5),
			jq: link.jq
		});
};
var $author$project$Ui$Menu$links = A2(
	$elm$core$List$map,
	$author$project$Ui$Menu$viewLink,
	_List_fromArray(
		[
			A2($author$project$Ui$Menu$Link, $author$project$Route$gettingStarted, 'Getting started'),
			A2($author$project$Ui$Menu$Link, $author$project$Route$documentation, 'Documentation'),
			A2($author$project$Ui$Menu$Link, $author$project$Route$administration, 'Administration')
		]));
var $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');
var $elm$svg$Svg$line = $elm$svg$Svg$trustedNode('line');
var $feathericons$elm_feather$FeatherIcons$Icon = $elm$core$Basics$identity;
var $feathericons$elm_feather$FeatherIcons$defaultAttributes = function (name) {
	return {
		du: $elm$core$Maybe$Just('feather feather-' + name),
		iD: 24,
		c6: '',
		dZ: 2,
		d0: '0 0 24 24'
	};
};
var $feathericons$elm_feather$FeatherIcons$makeBuilder = F2(
	function (name, src) {
		return {
			i: $feathericons$elm_feather$FeatherIcons$defaultAttributes(name),
			c: src
		};
	});
var $elm$svg$Svg$Attributes$x1 = _VirtualDom_attribute('x1');
var $elm$svg$Svg$Attributes$x2 = _VirtualDom_attribute('x2');
var $elm$svg$Svg$Attributes$y1 = _VirtualDom_attribute('y1');
var $elm$svg$Svg$Attributes$y2 = _VirtualDom_attribute('y2');
var $feathericons$elm_feather$FeatherIcons$menu = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'menu',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('3'),
					$elm$svg$Svg$Attributes$y1('12'),
					$elm$svg$Svg$Attributes$x2('21'),
					$elm$svg$Svg$Attributes$y2('12')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('3'),
					$elm$svg$Svg$Attributes$y1('6'),
					$elm$svg$Svg$Attributes$x2('21'),
					$elm$svg$Svg$Attributes$y2('6')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('3'),
					$elm$svg$Svg$Attributes$y1('18'),
					$elm$svg$Svg$Attributes$x2('21'),
					$elm$svg$Svg$Attributes$y2('18')
				]),
			_List_Nil)
		]));
var $mdgriffith$elm_ui$Element$none = $mdgriffith$elm_ui$Internal$Model$Empty;
var $elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');
var $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');
var $elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');
var $elm$svg$Svg$map = $elm$virtual_dom$VirtualDom$map;
var $elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');
var $elm$svg$Svg$Attributes$strokeLinecap = _VirtualDom_attribute('stroke-linecap');
var $elm$svg$Svg$Attributes$strokeLinejoin = _VirtualDom_attribute('stroke-linejoin');
var $elm$svg$Svg$Attributes$strokeWidth = _VirtualDom_attribute('stroke-width');
var $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');
var $elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');
var $elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');
var $feathericons$elm_feather$FeatherIcons$toHtml = F2(
	function (attributes, _v0) {
		var src = _v0.c;
		var attrs = _v0.i;
		var strSize = $elm$core$String$fromFloat(attrs.iD);
		var baseAttributes = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$fill('none'),
				$elm$svg$Svg$Attributes$height(
				_Utils_ap(strSize, attrs.c6)),
				$elm$svg$Svg$Attributes$width(
				_Utils_ap(strSize, attrs.c6)),
				$elm$svg$Svg$Attributes$stroke('currentColor'),
				$elm$svg$Svg$Attributes$strokeLinecap('round'),
				$elm$svg$Svg$Attributes$strokeLinejoin('round'),
				$elm$svg$Svg$Attributes$strokeWidth(
				$elm$core$String$fromFloat(attrs.dZ)),
				$elm$svg$Svg$Attributes$viewBox(attrs.d0)
			]);
		var combinedAttributes = _Utils_ap(
			function () {
				var _v1 = attrs.du;
				if (!_v1.$) {
					var c = _v1.a;
					return A2(
						$elm$core$List$cons,
						$elm$svg$Svg$Attributes$class(c),
						baseAttributes);
				} else {
					return baseAttributes;
				}
			}(),
			attributes);
		return A2(
			$elm$svg$Svg$svg,
			combinedAttributes,
			A2(
				$elm$core$List$map,
				$elm$svg$Svg$map($elm$core$Basics$never),
				src));
	});
var $feathericons$elm_feather$FeatherIcons$x = A2(
	$feathericons$elm_feather$FeatherIcons$makeBuilder,
	'x',
	_List_fromArray(
		[
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('18'),
					$elm$svg$Svg$Attributes$y1('6'),
					$elm$svg$Svg$Attributes$x2('6'),
					$elm$svg$Svg$Attributes$y2('18')
				]),
			_List_Nil),
			A2(
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$x1('6'),
					$elm$svg$Svg$Attributes$y1('6'),
					$elm$svg$Svg$Attributes$x2('18'),
					$elm$svg$Svg$Attributes$y2('18')
				]),
			_List_Nil)
		]));
var $author$project$Ui$Menu$small = F2(
	function (window, model) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$paddingEach(
					{a4: 40, c2: 0, c5: 0, di: 0})
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
						]),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Element$column,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$alignTop,
									$mdgriffith$elm_ui$Element$spacing(5),
									$mdgriffith$elm_ui$Element$alignLeft,
									$mdgriffith$elm_ui$Element$width(
									A2($mdgriffith$elm_ui$Element$maximum, 300, $mdgriffith$elm_ui$Element$fill))
								]),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Element$link,
									_List_Nil,
									{
										dL: A2(
											$mdgriffith$elm_ui$Element$row,
											_List_fromArray(
												[
													$mdgriffith$elm_ui$Element$Font$size(20)
												]),
											_List_fromArray(
												[
													$mdgriffith$elm_ui$Element$text('elm-charts')
												])),
										jq: '/'
									})
								])),
							A2(
							$mdgriffith$elm_ui$Element$row,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$spacing(40),
									$mdgriffith$elm_ui$Element$alignRight,
									$mdgriffith$elm_ui$Element$Font$size(13)
								]),
							(window.h > 700) ? $author$project$Ui$Menu$links : _List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Element$Input$button,
									_List_Nil,
									{
										dL: $mdgriffith$elm_ui$Element$html(
											A2(
												$feathericons$elm_feather$FeatherIcons$toHtml,
												_List_Nil,
												model.aT ? $feathericons$elm_feather$FeatherIcons$x : $feathericons$elm_feather$FeatherIcons$menu)),
										ia: $elm$core$Maybe$Just(0)
									})
								]))
						])),
					model.aT ? A2(
					$mdgriffith$elm_ui$Element$column,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$centerX,
							$mdgriffith$elm_ui$Element$spacing(15),
							$mdgriffith$elm_ui$Element$paddingEach(
							{a4: 20, c2: 0, c5: 0, di: 30}),
							$mdgriffith$elm_ui$Element$Font$size(16)
						]),
					$author$project$Ui$Menu$links) : $mdgriffith$elm_ui$Element$none
				]));
	});
var $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;
var $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;
var $mdgriffith$elm_ui$Internal$Model$AsTextColumn = 5;
var $mdgriffith$elm_ui$Internal$Model$asTextColumn = 5;
var $mdgriffith$elm_ui$Internal$Model$Min = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $mdgriffith$elm_ui$Element$minimum = F2(
	function (i, l) {
		return A2($mdgriffith$elm_ui$Internal$Model$Min, i, l);
	});
var $mdgriffith$elm_ui$Element$textColumn = F2(
	function (attrs, children) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asTextColumn,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Element$width(
					A2(
						$mdgriffith$elm_ui$Element$maximum,
						750,
						A2($mdgriffith$elm_ui$Element$minimum, 500, $mdgriffith$elm_ui$Element$fill))),
				attrs),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
	});
var $elm$html$Html$ul = _VirtualDom_node('ul');
var $mdgriffith$elm_ui$Internal$Model$Colored = F3(
	function (a, b, c) {
		return {$: 4, a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Internal$Flag$fontColor = $mdgriffith$elm_ui$Internal$Flag$flag(14);
var $mdgriffith$elm_ui$Internal$Model$formatColorClass = function (_v0) {
	var red = _v0.a;
	var green = _v0.b;
	var blue = _v0.c;
	var alpha = _v0.d;
	return $mdgriffith$elm_ui$Internal$Model$floatClass(red) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(green) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(blue) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(alpha))))));
};
var $mdgriffith$elm_ui$Element$Font$color = function (fontColor) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$fontColor,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Colored,
			'fc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(fontColor),
			'color',
			fontColor));
};
var $mdgriffith$elm_ui$Internal$Model$Rgba = F4(
	function (a, b, c, d) {
		return {$: 0, a: a, b: b, c: c, d: d};
	});
var $mdgriffith$elm_ui$Element$rgb255 = F3(
	function (red, green, blue) {
		return A4($mdgriffith$elm_ui$Internal$Model$Rgba, red / 255, green / 255, blue / 255, 1);
	});
var $author$project$Ui$Layout$Large = 2;
var $author$project$Ui$Layout$Medium = 1;
var $author$project$Ui$Layout$Small = 0;
var $author$project$Ui$Layout$screen = function (window) {
	return (window.h > 950) ? 2 : ((window.h > 760) ? 1 : 0);
};
var $author$project$Ui$Layout$copyright = function (window) {
	return A2(
		$mdgriffith$elm_ui$Element$el,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Font$size(12),
				$mdgriffith$elm_ui$Element$Font$color(
				A3($mdgriffith$elm_ui$Element$rgb255, 180, 180, 180)),
				$mdgriffith$elm_ui$Element$paddingEach(
				{a4: 20, c2: 0, c5: 0, di: 30}),
				function () {
				var _v0 = $author$project$Ui$Layout$screen(window);
				switch (_v0) {
					case 2:
						return $mdgriffith$elm_ui$Element$alignRight;
					case 1:
						return $mdgriffith$elm_ui$Element$centerX;
					default:
						return $mdgriffith$elm_ui$Element$centerX;
				}
			}()
			]),
		$mdgriffith$elm_ui$Element$text('Designed and developed by Tereza Sokol © 2021'));
};
var $mdgriffith$elm_ui$Internal$Model$FontFamily = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Flag$fontFamily = $mdgriffith$elm_ui$Internal$Flag$flag(5);
var $elm$core$String$words = _String_words;
var $mdgriffith$elm_ui$Internal$Model$renderFontClassName = F2(
	function (font, current) {
		return _Utils_ap(
			current,
			function () {
				switch (font.$) {
					case 0:
						return 'serif';
					case 1:
						return 'sans-serif';
					case 2:
						return 'monospace';
					case 3:
						var name = font.a;
						return A2(
							$elm$core$String$join,
							'-',
							$elm$core$String$words(
								$elm$core$String$toLower(name)));
					case 4:
						var name = font.a;
						var url = font.b;
						return A2(
							$elm$core$String$join,
							'-',
							$elm$core$String$words(
								$elm$core$String$toLower(name)));
					default:
						var name = font.a.dO;
						return A2(
							$elm$core$String$join,
							'-',
							$elm$core$String$words(
								$elm$core$String$toLower(name)));
				}
			}());
	});
var $mdgriffith$elm_ui$Element$Font$family = function (families) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$fontFamily,
		A2(
			$mdgriffith$elm_ui$Internal$Model$FontFamily,
			A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderFontClassName, 'ff-', families),
			families));
};
var $mdgriffith$elm_ui$Internal$Model$OnlyDynamic = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$StaticRootAndDynamic = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$AllowHover = 1;
var $mdgriffith$elm_ui$Internal$Model$Layout = 0;
var $mdgriffith$elm_ui$Internal$Model$focusDefaultStyle = {
	gU: $elm$core$Maybe$Nothing,
	g$: $elm$core$Maybe$Nothing,
	iA: $elm$core$Maybe$Just(
		{
			aP: 0,
			d: A4($mdgriffith$elm_ui$Internal$Model$Rgba, 155 / 255, 203 / 255, 1, 1),
			h8: _Utils_Tuple2(0, 0),
			iD: 3
		})
};
var $mdgriffith$elm_ui$Internal$Model$optionsToRecord = function (options) {
	var combine = F2(
		function (opt, record) {
			switch (opt.$) {
				case 0:
					var hoverable = opt.a;
					var _v4 = record.hH;
					if (_v4.$ === 1) {
						return _Utils_update(
							record,
							{
								hH: $elm$core$Maybe$Just(hoverable)
							});
					} else {
						return record;
					}
				case 1:
					var focusStyle = opt.a;
					var _v5 = record.hz;
					if (_v5.$ === 1) {
						return _Utils_update(
							record,
							{
								hz: $elm$core$Maybe$Just(focusStyle)
							});
					} else {
						return record;
					}
				default:
					var renderMode = opt.a;
					var _v6 = record.h4;
					if (_v6.$ === 1) {
						return _Utils_update(
							record,
							{
								h4: $elm$core$Maybe$Just(renderMode)
							});
					} else {
						return record;
					}
			}
		});
	var andFinally = function (record) {
		return {
			hz: function () {
				var _v0 = record.hz;
				if (_v0.$ === 1) {
					return $mdgriffith$elm_ui$Internal$Model$focusDefaultStyle;
				} else {
					var focusable = _v0.a;
					return focusable;
				}
			}(),
			hH: function () {
				var _v1 = record.hH;
				if (_v1.$ === 1) {
					return 1;
				} else {
					var hoverable = _v1.a;
					return hoverable;
				}
			}(),
			h4: function () {
				var _v2 = record.h4;
				if (_v2.$ === 1) {
					return 0;
				} else {
					var actualMode = _v2.a;
					return actualMode;
				}
			}()
		};
	};
	return andFinally(
		A3(
			$elm$core$List$foldr,
			combine,
			{hz: $elm$core$Maybe$Nothing, hH: $elm$core$Maybe$Nothing, h4: $elm$core$Maybe$Nothing},
			options));
};
var $mdgriffith$elm_ui$Internal$Model$toHtml = F2(
	function (mode, el) {
		switch (el.$) {
			case 0:
				var html = el.a;
				return html($mdgriffith$elm_ui$Internal$Model$asEl);
			case 1:
				var styles = el.a.iM;
				var html = el.a.hI;
				return A2(
					html,
					mode(styles),
					$mdgriffith$elm_ui$Internal$Model$asEl);
			case 2:
				var text = el.a;
				return $mdgriffith$elm_ui$Internal$Model$textElement(text);
			default:
				return $mdgriffith$elm_ui$Internal$Model$textElement('');
		}
	});
var $mdgriffith$elm_ui$Internal$Model$renderRoot = F3(
	function (optionList, attributes, child) {
		var options = $mdgriffith$elm_ui$Internal$Model$optionsToRecord(optionList);
		var embedStyle = function () {
			var _v0 = options.h4;
			if (_v0 === 1) {
				return $mdgriffith$elm_ui$Internal$Model$OnlyDynamic(options);
			} else {
				return $mdgriffith$elm_ui$Internal$Model$StaticRootAndDynamic(options);
			}
		}();
		return A2(
			$mdgriffith$elm_ui$Internal$Model$toHtml,
			embedStyle,
			A4(
				$mdgriffith$elm_ui$Internal$Model$element,
				$mdgriffith$elm_ui$Internal$Model$asEl,
				$mdgriffith$elm_ui$Internal$Model$div,
				attributes,
				$mdgriffith$elm_ui$Internal$Model$Unkeyed(
					_List_fromArray(
						[child]))));
	});
var $mdgriffith$elm_ui$Internal$Model$SansSerif = {$: 1};
var $mdgriffith$elm_ui$Internal$Model$Typeface = function (a) {
	return {$: 3, a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$bgColor = $mdgriffith$elm_ui$Internal$Flag$flag(8);
var $mdgriffith$elm_ui$Internal$Model$rootStyle = function () {
	var families = _List_fromArray(
		[
			$mdgriffith$elm_ui$Internal$Model$Typeface('Open Sans'),
			$mdgriffith$elm_ui$Internal$Model$Typeface('Helvetica'),
			$mdgriffith$elm_ui$Internal$Model$Typeface('Verdana'),
			$mdgriffith$elm_ui$Internal$Model$SansSerif
		]);
	return _List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$bgColor,
			A3(
				$mdgriffith$elm_ui$Internal$Model$Colored,
				'bg-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(
					A4($mdgriffith$elm_ui$Internal$Model$Rgba, 1, 1, 1, 0)),
				'background-color',
				A4($mdgriffith$elm_ui$Internal$Model$Rgba, 1, 1, 1, 0))),
			A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$fontColor,
			A3(
				$mdgriffith$elm_ui$Internal$Model$Colored,
				'fc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(
					A4($mdgriffith$elm_ui$Internal$Model$Rgba, 0, 0, 0, 1)),
				'color',
				A4($mdgriffith$elm_ui$Internal$Model$Rgba, 0, 0, 0, 1))),
			A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$fontSize,
			$mdgriffith$elm_ui$Internal$Model$FontSize(20)),
			A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$fontFamily,
			A2(
				$mdgriffith$elm_ui$Internal$Model$FontFamily,
				A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderFontClassName, 'font-', families),
				families))
		]);
}();
var $mdgriffith$elm_ui$Element$layoutWith = F3(
	function (_v0, attrs, child) {
		var options = _v0.fH;
		return A3(
			$mdgriffith$elm_ui$Internal$Model$renderRoot,
			options,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$htmlClass(
					A2(
						$elm$core$String$join,
						' ',
						_List_fromArray(
							[$mdgriffith$elm_ui$Internal$Style$classes.ip, $mdgriffith$elm_ui$Internal$Style$classes.gP, $mdgriffith$elm_ui$Internal$Style$classes.iC]))),
				_Utils_ap($mdgriffith$elm_ui$Internal$Model$rootStyle, attrs)),
			child);
	});
var $mdgriffith$elm_ui$Element$layout = $mdgriffith$elm_ui$Element$layoutWith(
	{fH: _List_Nil});
var $mdgriffith$elm_ui$Element$Font$sansSerif = $mdgriffith$elm_ui$Internal$Model$SansSerif;
var $elm$core$List$singleton = function (value) {
	return _List_fromArray(
		[value]);
};
var $mdgriffith$elm_ui$Element$Font$typeface = $mdgriffith$elm_ui$Internal$Model$Typeface;
var $author$project$Ui$Layout$view = F2(
	function (window, children) {
		return $elm$core$List$singleton(
			A2(
				$mdgriffith$elm_ui$Element$layout,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$Font$family(
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$Font$typeface('IBM Plex Sans'),
								$mdgriffith$elm_ui$Element$Font$sansSerif
							]))
					]),
				A2(
					$mdgriffith$elm_ui$Element$column,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width(
							A2($mdgriffith$elm_ui$Element$maximum, 1060, $mdgriffith$elm_ui$Element$fill)),
							$mdgriffith$elm_ui$Element$paddingEach(
							{a4: 20, c2: 30, c5: 30, di: 30}),
							$mdgriffith$elm_ui$Element$centerX,
							$mdgriffith$elm_ui$Element$Font$size(12),
							$mdgriffith$elm_ui$Element$Font$color(
							A3($mdgriffith$elm_ui$Element$rgb255, 80, 80, 80))
						]),
					_Utils_ap(
						children,
						_List_fromArray(
							[
								$author$project$Ui$Layout$copyright(window)
							])))));
	});
var $author$project$Page$Administration$view = function (model) {
	return {
		dr: A2(
			$author$project$Ui$Layout$view,
			model.a$,
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$map,
					$author$project$Page$Administration$MenuMsg,
					A2($author$project$Ui$Menu$small, model.a$, model.c4)),
					A2(
					$mdgriffith$elm_ui$Element$textColumn,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width(
							A2($mdgriffith$elm_ui$Element$maximum, 600, $mdgriffith$elm_ui$Element$fill))
						]),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Element$paragraph,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$Font$size(32),
									A2($mdgriffith$elm_ui$Element$paddingXY, 0, 20)
								]),
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$text('Administration')
								])),
							A2(
							$mdgriffith$elm_ui$Element$paragraph,
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Element$paddingXY, 0, 10),
									$mdgriffith$elm_ui$Element$Font$size(14)
								]),
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$text('This library is managed by '),
									A2($author$project$Ui$Layout$link, 'https://twitter.com/tereza_sokol', 'Tereza Sokol'),
									$mdgriffith$elm_ui$Element$text(', with the support of various other contributors.')
								])),
							A2(
							$mdgriffith$elm_ui$Element$paragraph,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$Font$size(22),
									$mdgriffith$elm_ui$Element$paddingEach(
									{a4: 5, c2: 0, c5: 0, di: 30})
								]),
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$text('Contracting')
								])),
							A2(
							$mdgriffith$elm_ui$Element$paragraph,
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Element$paddingXY, 0, 10),
									$mdgriffith$elm_ui$Element$Font$size(14)
								]),
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$text('If you or your company would like me to build you a chart with elm-charts or add '),
									$mdgriffith$elm_ui$Element$text('a specific feature to the library, feel free to contact me at '),
									A2($author$project$Ui$Layout$link, 'mailto:terezasokol@gmail.com', 'terezasokol@gmail.com'),
									$mdgriffith$elm_ui$Element$text(' and we can figure out the details.')
								])),
							A2(
							$mdgriffith$elm_ui$Element$paragraph,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$Font$size(22),
									$mdgriffith$elm_ui$Element$paddingEach(
									{a4: 5, c2: 0, c5: 0, di: 30})
								]),
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$text('Roadmap')
								])),
							A2(
							$mdgriffith$elm_ui$Element$paragraph,
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Element$paddingXY, 0, 10),
									$mdgriffith$elm_ui$Element$Font$size(14)
								]),
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$text('Here are some upcoming features and improvements in approximate order of priority. '),
									$mdgriffith$elm_ui$Element$text('If you have more suggestions or have wishes regarding the priority, then '),
									$mdgriffith$elm_ui$Element$text('you\'re welcome to '),
									A2($author$project$Ui$Layout$link, 'https://github.com/terezka/elm-charts/issues', 'open an issue'),
									$mdgriffith$elm_ui$Element$text(' or contact me directly.')
								])),
							A2(
							$mdgriffith$elm_ui$Element$el,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$Font$size(14)
								]),
							$mdgriffith$elm_ui$Element$html(
								function () {
									var item = function (text) {
										return A2(
											$elm$html$Html$li,
											_List_fromArray(
												[
													A2($elm$html$Html$Attributes$style, 'padding', '5px 0')
												]),
											_List_fromArray(
												[
													$elm$html$Html$text(text)
												]));
									};
									return A2(
										$elm$html$Html$ul,
										_List_fromArray(
											[
												A2($elm$html$Html$Attributes$style, 'padding-left', '25px')
											]),
										_List_fromArray(
											[
												item('Heat maps charts'),
												item('Horizontal bar charts'),
												item('Logarithmic scales'),
												item('Multiple scales'),
												item('Relative stacked bars'),
												item('Further improvements of automatic \"nice\" ticks'),
												item('Pie charts'),
												item('Confidence intervals'),
												item('More interpolation options'),
												item('Animations')
											]));
								}()))
						])),
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$size(14),
							A2($mdgriffith$elm_ui$Element$paddingXY, 0, 30),
							$mdgriffith$elm_ui$Element$spacing(20)
						]),
					_List_fromArray(
						[
							A2($author$project$Ui$Layout$link, 'https://github.com/terezka/elm-charts', 'GitHub'),
							A2($author$project$Ui$Layout$link, 'https://twitter.com/tereza_sokol', 'Twitter'),
							A2($author$project$Ui$Layout$link, 'https://github.com/terezka/elm-charts/issues', 'Report an issue'),
							A2($author$project$Ui$Layout$link, 'mailto:terezasokol@gmail.com', 'Contact')
						]))
				])),
		i5: 'elm-charts'
	};
};
var $author$project$Page$Section$MenuMsg = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$Section$OnExampleMsg = function (a) {
	return {$: 2, a: a};
};
var $author$project$Ui$Layout$heading = F2(
	function (window, text) {
		return A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Font$size(
					function () {
						var _v0 = $author$project$Ui$Layout$screen(window);
						switch (_v0) {
							case 2:
								return 32;
							case 1:
								return 28;
							default:
								return 24;
						}
					}())
				]),
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text(text)
				]));
	});
var $mdgriffith$elm_ui$Internal$Model$Px = function (a) {
	return {$: 0, a: a};
};
var $mdgriffith$elm_ui$Element$px = $mdgriffith$elm_ui$Internal$Model$Px;
var $mdgriffith$elm_ui$Element$spacingXY = F2(
	function (x, y) {
		return A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$spacing,
			A3(
				$mdgriffith$elm_ui$Internal$Model$SpacingStyle,
				A2($mdgriffith$elm_ui$Internal$Model$spacingName, x, y),
				x,
				y));
	});
var $author$project$Internal$Helpers$Attribute = $elm$core$Basics$identity;
var $author$project$Internal$Svg$End = 0;
var $author$project$Chart$Attributes$alignRight = function (config) {
	return _Utils_update(
		config,
		{
			o: $elm$core$Maybe$Just(0)
		});
};
var $author$project$Internal$Property$NotStacked = function (a) {
	return {$: 0, a: a};
};
var $author$project$Internal$Property$notStacked = F3(
	function (toY, interpolation, presentation) {
		return $author$project$Internal$Property$NotStacked(
			{
				hU: interpolation,
				ij: presentation,
				d$: toY,
				dg: toY,
				f8: $elm$core$Maybe$Nothing,
				jj: function (datum) {
					return A2(
						$elm$core$Maybe$withDefault,
						'N/A',
						A2(
							$elm$core$Maybe$map,
							$elm$core$String$fromFloat,
							toY(datum)));
				},
				gd: F2(
					function (_v0, _v1) {
						return _List_Nil;
					})
			});
	});
var $author$project$Chart$bar = function (y) {
	return A2(
		$author$project$Internal$Property$notStacked,
		A2($elm$core$Basics$composeR, y, $elm$core$Maybe$Just),
		_List_Nil);
};
var $author$project$Chart$BarsElement = F5(
	function (a, b, c, d, e) {
		return {$: 2, a: a, b: b, c: c, d: d, e: e};
	});
var $author$project$Chart$Indexed = function (a) {
	return {$: 0, a: a};
};
var $author$project$Internal$Many$apply = F2(
	function (_v0, items) {
		var func = _v0.b;
		return func(items);
	});
var $author$project$Chart$Item$apply = $author$project$Internal$Many$apply;
var $author$project$Internal$Helpers$apply = F2(
	function (attrs, _default) {
		var apply_ = F2(
			function (_v0, a) {
				var f = _v0;
				return f(a);
			});
		return A3($elm$core$List$foldl, apply_, _default, attrs);
	});
var $author$project$Internal$Many$Remodel = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Internal$Item$Rendered = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Internal$Many$editLimits = F2(
	function (edit, _v0) {
		var _v1 = _v0.a;
		var x = _v1.a;
		var xs = _v1.b;
		var rendering = _v0.b;
		return A2(
			$author$project$Internal$Item$Rendered,
			_Utils_Tuple2(x, xs),
			_Utils_update(
				rendering,
				{
					B: A2(edit, x, rendering.B)
				}));
	});
var $author$project$Internal$Item$getPosition = F2(
	function (plane, _v0) {
		var item = _v0.b;
		return item.jc(plane);
	});
var $author$project$Internal$Item$getX1 = function (_v0) {
	var meta = _v0.a;
	return meta.a1;
};
var $author$project$Internal$Item$getX2 = function (_v0) {
	var meta = _v0.a;
	return meta.dm;
};
var $elm$core$List$partition = F2(
	function (pred, list) {
		var step = F2(
			function (x, _v0) {
				var trues = _v0.a;
				var falses = _v0.b;
				return pred(x) ? _Utils_Tuple2(
					A2($elm$core$List$cons, x, trues),
					falses) : _Utils_Tuple2(
					trues,
					A2($elm$core$List$cons, x, falses));
			});
		return A3(
			$elm$core$List$foldr,
			step,
			_Utils_Tuple2(_List_Nil, _List_Nil),
			list);
	});
var $author$project$Internal$Helpers$gatherWith = F2(
	function (testFn, list) {
		var helper = F2(
			function (scattered, gathered) {
				if (!scattered.b) {
					return $elm$core$List$reverse(gathered);
				} else {
					var toGather = scattered.a;
					var population = scattered.b;
					var _v1 = A2(
						$elm$core$List$partition,
						testFn(toGather),
						population);
					var gathering = _v1.a;
					var remaining = _v1.b;
					return A2(
						helper,
						remaining,
						A2(
							$elm$core$List$cons,
							_Utils_Tuple2(toGather, gathering),
							gathered));
				}
			});
		return A2(helper, list, _List_Nil);
	});
var $author$project$Internal$Coordinates$Position = F4(
	function (x1, x2, y1, y2) {
		return {a1: x1, dm: x2, jx: y1, eP: y2};
	});
var $author$project$Internal$Coordinates$foldPosition = F2(
	function (func, data) {
		var fold = F2(
			function (datum, posM) {
				if (!posM.$) {
					var pos = posM.a;
					return $elm$core$Maybe$Just(
						{
							a1: A2(
								$elm$core$Basics$min,
								func(datum).a1,
								pos.a1),
							dm: A2(
								$elm$core$Basics$max,
								func(datum).dm,
								pos.dm),
							jx: A2(
								$elm$core$Basics$min,
								func(datum).jx,
								pos.jx),
							eP: A2(
								$elm$core$Basics$max,
								func(datum).eP,
								pos.eP)
						});
				} else {
					return $elm$core$Maybe$Just(
						func(datum));
				}
			});
		return A2(
			$elm$core$Maybe$withDefault,
			A4($author$project$Internal$Coordinates$Position, 0, 0, 0, 0),
			A3($elm$core$List$foldl, fold, $elm$core$Maybe$Nothing, data));
	});
var $elm$svg$Svg$g = $elm$svg$Svg$trustedNode('g');
var $author$project$Internal$Item$getLimits = function (_v0) {
	var item = _v0.b;
	return item.B;
};
var $author$project$Internal$Item$render = F2(
	function (plane, _v0) {
		var item = _v0.b;
		return A2(
			item.fW,
			plane,
			item.jc(plane));
	});
var $elm$html$Html$table = _VirtualDom_node('table');
var $author$project$Internal$Item$tooltip = function (_v0) {
	var item = _v0.b;
	return item.ji(0);
};
var $author$project$Internal$Many$toGroup = F2(
	function (first, rest) {
		var all = A2($elm$core$List$cons, first, rest);
		return A2(
			$author$project$Internal$Item$Rendered,
			_Utils_Tuple2(first, rest),
			{
				B: A2($author$project$Internal$Coordinates$foldPosition, $author$project$Internal$Item$getLimits, all),
				fW: F2(
					function (plane, _v0) {
						return A2(
							$elm$svg$Svg$g,
							_List_fromArray(
								[
									$elm$svg$Svg$Attributes$class('elm-charts__group')
								]),
							A2(
								$elm$core$List$map,
								$author$project$Internal$Item$render(plane),
								all));
					}),
				jc: function (plane) {
					return A2(
						$author$project$Internal$Coordinates$foldPosition,
						$author$project$Internal$Item$getPosition(plane),
						all);
				},
				ji: function (c) {
					return _List_fromArray(
						[
							A2(
							$elm$html$Html$table,
							_List_Nil,
							A2($elm$core$List$concatMap, $author$project$Internal$Item$tooltip, all))
						]);
				}
			});
	});
var $author$project$Internal$Many$groupingHelp = F2(
	function (_v0, items) {
		var shared = _v0.dX;
		var equality = _v0.dE;
		var edits = _v0.dD;
		var toShared = function (_v2) {
			var meta = _v2.a;
			var item = _v2.b;
			return shared(meta);
		};
		var toNewGroup = function (_v1) {
			var i = _v1.a;
			var is = _v1.b;
			return edits(
				A2($author$project$Internal$Many$toGroup, i, is));
		};
		var toEquality = F2(
			function (aO, bO) {
				return A2(
					equality,
					toShared(aO),
					toShared(bO));
			});
		return A2(
			$elm$core$List$map,
			toNewGroup,
			A2($author$project$Internal$Helpers$gatherWith, toEquality, items));
	});
var $author$project$Internal$Many$bins = A2(
	$author$project$Internal$Many$Remodel,
	$author$project$Internal$Item$getPosition,
	$author$project$Internal$Many$groupingHelp(
		{
			dD: $author$project$Internal$Many$editLimits(
				F2(
					function (item, pos) {
						return _Utils_update(
							pos,
							{
								a1: $author$project$Internal$Item$getX1(item),
								dm: $author$project$Internal$Item$getX2(item)
							});
					})),
			dE: F2(
				function (a, b) {
					return _Utils_eq(a.a1, b.a1) && (_Utils_eq(a.dm, b.dm) && (_Utils_eq(a.ea, b.ea) && _Utils_eq(a.e4, b.e4)));
				}),
			dX: function (config) {
				return {e4: config.hJ.e4, ea: config.hJ.hs, a1: config.a1, dm: config.dm};
			}
		}));
var $author$project$Chart$Item$bins = $author$project$Internal$Many$bins;
var $author$project$Internal$Produce$defaultBars = {l: false, hC: true, aE: 0.1, iq: 0, ir: 0, iG: 0.05, a1: $elm$core$Maybe$Nothing, dm: $elm$core$Maybe$Nothing};
var $author$project$Internal$Item$generalize = function (_v0) {
	var meta = _v0.a;
	var item = _v0.b;
	return A2(
		$author$project$Internal$Item$Rendered,
		{
			d: meta.d,
			hl: meta.hl,
			hJ: meta.hJ,
			hW: meta.hW,
			dO: meta.dO,
			ij: meta.i7(meta.ij),
			i7: $elm$core$Basics$identity,
			jj: meta.jj,
			a1: meta.a1,
			dm: meta.dm,
			a: meta.a
		},
		item);
};
var $author$project$Internal$Many$getMembers = function (_v0) {
	var _v1 = _v0.a;
	var x = _v1.a;
	var xs = _v1.b;
	return A2($elm$core$List$cons, x, xs);
};
var $author$project$Internal$Many$generalize = function (many) {
	return A2(
		$elm$core$List$map,
		$author$project$Internal$Item$generalize,
		$author$project$Internal$Many$getMembers(many));
};
var $author$project$Chart$Item$getLimits = $author$project$Internal$Item$getLimits;
var $author$project$Internal$Item$map = F2(
	function (func, _v0) {
		var meta = _v0.a;
		var item = _v0.b;
		return A2(
			$author$project$Internal$Item$Rendered,
			{
				d: meta.d,
				hl: func(meta.hl),
				hJ: meta.hJ,
				hW: meta.hW,
				dO: meta.dO,
				ij: meta.ij,
				i7: meta.i7,
				jj: meta.jj,
				a1: meta.a1,
				dm: meta.dm,
				a: meta.a
			},
			item);
	});
var $author$project$Internal$Legend$BarLegend = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Chart$Attributes$border = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{H: v});
	};
};
var $author$project$Chart$Attributes$color = function (v) {
	return function (config) {
		return (v === '') ? config : _Utils_update(
			config,
			{d: v});
	};
};
var $author$project$Internal$Helpers$pink = '#ea60df';
var $author$project$Internal$Svg$defaultBar = {i: _List_Nil, H: 'white', P: 0, d: $author$project$Internal$Helpers$pink, d8: $elm$core$Maybe$Nothing, hE: 0, hF: '', hG: 10, ag: 1, iq: 0, ir: 0};
var $author$project$Chart$Attributes$roundBottom = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{iq: v});
	};
};
var $author$project$Chart$Attributes$roundTop = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{ir: v});
	};
};
var $author$project$Internal$Property$toConfigs = function (property) {
	if (!property.$) {
		var config = property.a;
		return _List_fromArray(
			[config]);
	} else {
		var configs = property.a;
		return configs;
	}
};
var $author$project$Internal$Helpers$blue = '#12A5ED';
var $author$project$Internal$Helpers$brown = '#871c1c';
var $author$project$Internal$Helpers$green = '#71c614';
var $author$project$Internal$Helpers$moss = '#92b42c';
var $author$project$Internal$Helpers$orange = '#FF8400';
var $author$project$Internal$Helpers$purple = '#7b4dff';
var $author$project$Internal$Helpers$red = '#F5325B';
var $elm$core$Tuple$pair = F2(
	function (a, b) {
		return _Utils_Tuple2(a, b);
	});
var $elm$core$Dict$sizeHelp = F2(
	function (n, dict) {
		sizeHelp:
		while (true) {
			if (dict.$ === -2) {
				return n;
			} else {
				var left = dict.d;
				var right = dict.e;
				var $temp$n = A2($elm$core$Dict$sizeHelp, n + 1, right),
					$temp$dict = left;
				n = $temp$n;
				dict = $temp$dict;
				continue sizeHelp;
			}
		}
	});
var $elm$core$Dict$size = function (dict) {
	return A2($elm$core$Dict$sizeHelp, 0, dict);
};
var $author$project$Internal$Helpers$toDefault = F3(
	function (_default, items, index) {
		var dict = $elm$core$Dict$fromList(
			A2($elm$core$List$indexedMap, $elm$core$Tuple$pair, items));
		var numOfItems = $elm$core$Dict$size(dict);
		var itemIndex = index % numOfItems;
		return A2(
			$elm$core$Maybe$withDefault,
			_default,
			A2($elm$core$Dict$get, itemIndex, dict));
	});
var $author$project$Internal$Helpers$turquoise = '#22d2ba';
var $author$project$Internal$Helpers$yellow = '#FFCA00';
var $author$project$Internal$Helpers$toDefaultColor = A2(
	$author$project$Internal$Helpers$toDefault,
	$author$project$Internal$Helpers$pink,
	_List_fromArray(
		[$author$project$Internal$Helpers$purple, $author$project$Internal$Helpers$pink, $author$project$Internal$Helpers$blue, $author$project$Internal$Helpers$green, $author$project$Internal$Helpers$red, $author$project$Internal$Helpers$yellow, $author$project$Internal$Helpers$turquoise, $author$project$Internal$Helpers$orange, $author$project$Internal$Helpers$moss, $author$project$Internal$Helpers$brown]));
var $author$project$Internal$Legend$toBarLegends = F3(
	function (elIndex, barsAttrs, properties) {
		var toBarConfig = function (attrs) {
			return A2($author$project$Internal$Helpers$apply, attrs, $author$project$Internal$Svg$defaultBar);
		};
		var barsConfig = A2($author$project$Internal$Helpers$apply, barsAttrs, $author$project$Internal$Produce$defaultBars);
		var toBarLegend = F2(
			function (colorIndex, prop) {
				var rounding = A2($elm$core$Basics$max, barsConfig.ir, barsConfig.iq);
				var defaultName = 'Property #' + $elm$core$String$fromInt(colorIndex + 1);
				var defaultColor = $author$project$Internal$Helpers$toDefaultColor(colorIndex);
				var defaultAttrs = _List_fromArray(
					[
						$author$project$Chart$Attributes$roundTop(rounding),
						$author$project$Chart$Attributes$roundBottom(rounding),
						$author$project$Chart$Attributes$color(defaultColor),
						$author$project$Chart$Attributes$border(defaultColor)
					]);
				var attrsOrg = _Utils_ap(defaultAttrs, prop.ij);
				var productOrg = toBarConfig(attrsOrg);
				var attrs = _Utils_eq(productOrg.H, defaultColor) ? _Utils_ap(
					attrsOrg,
					_List_fromArray(
						[
							$author$project$Chart$Attributes$border(productOrg.d)
						])) : attrsOrg;
				return A2(
					$author$project$Internal$Legend$BarLegend,
					A2($elm$core$Maybe$withDefault, defaultName, prop.f8),
					attrs);
			});
		return A2(
			$elm$core$List$indexedMap,
			function (propIndex) {
				return toBarLegend(elIndex + propIndex);
			},
			A2($elm$core$List$concatMap, $author$project$Internal$Property$toConfigs, properties));
	});
var $author$project$Internal$Item$Bar = function (a) {
	return {$: 1, a: a};
};
var $author$project$Internal$Commands$Arc = F7(
	function (a, b, c, d, e, f, g) {
		return {$: 6, a: a, b: b, c: c, d: d, e: e, f: f, g: g};
	});
var $author$project$Internal$Commands$Line = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $author$project$Internal$Commands$Move = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$core$Basics$abs = function (n) {
	return (n < 0) ? (-n) : n;
};
var $elm$core$Basics$clamp = F3(
	function (low, high, number) {
		return (_Utils_cmp(number, low) < 0) ? low : ((_Utils_cmp(number, high) > 0) ? high : number);
	});
var $elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');
var $author$project$Internal$Commands$joinCommands = function (commands) {
	return A2($elm$core$String$join, ' ', commands);
};
var $author$project$Internal$Commands$stringBoolInt = function (bool) {
	return bool ? '1' : '0';
};
var $author$project$Internal$Commands$stringPoint = function (_v0) {
	var x = _v0.a;
	var y = _v0.b;
	return $elm$core$String$fromFloat(x) + (' ' + $elm$core$String$fromFloat(y));
};
var $author$project$Internal$Commands$stringPoints = function (points) {
	return A2(
		$elm$core$String$join,
		',',
		A2($elm$core$List$map, $author$project$Internal$Commands$stringPoint, points));
};
var $author$project$Internal$Commands$stringCommand = function (command) {
	switch (command.$) {
		case 0:
			var x = command.a;
			var y = command.b;
			return 'M' + $author$project$Internal$Commands$stringPoint(
				_Utils_Tuple2(x, y));
		case 1:
			var x = command.a;
			var y = command.b;
			return 'L' + $author$project$Internal$Commands$stringPoint(
				_Utils_Tuple2(x, y));
		case 2:
			var cx1 = command.a;
			var cy1 = command.b;
			var cx2 = command.c;
			var cy2 = command.d;
			var x = command.e;
			var y = command.f;
			return 'C' + $author$project$Internal$Commands$stringPoints(
				_List_fromArray(
					[
						_Utils_Tuple2(cx1, cy1),
						_Utils_Tuple2(cx2, cy2),
						_Utils_Tuple2(x, y)
					]));
		case 3:
			var cx1 = command.a;
			var cy1 = command.b;
			var x = command.c;
			var y = command.d;
			return 'Q' + $author$project$Internal$Commands$stringPoints(
				_List_fromArray(
					[
						_Utils_Tuple2(cx1, cy1),
						_Utils_Tuple2(x, y)
					]));
		case 4:
			var cx1 = command.a;
			var cy1 = command.b;
			var x = command.c;
			var y = command.d;
			return 'Q' + $author$project$Internal$Commands$stringPoints(
				_List_fromArray(
					[
						_Utils_Tuple2(cx1, cy1),
						_Utils_Tuple2(x, y)
					]));
		case 5:
			var x = command.a;
			var y = command.b;
			return 'T' + $author$project$Internal$Commands$stringPoint(
				_Utils_Tuple2(x, y));
		case 6:
			var rx = command.a;
			var ry = command.b;
			var xAxisRotation = command.c;
			var largeArcFlag = command.d;
			var sweepFlag = command.e;
			var x = command.f;
			var y = command.g;
			return 'A ' + $author$project$Internal$Commands$joinCommands(
				_List_fromArray(
					[
						$author$project$Internal$Commands$stringPoint(
						_Utils_Tuple2(rx, ry)),
						$elm$core$String$fromInt(xAxisRotation),
						$author$project$Internal$Commands$stringBoolInt(largeArcFlag),
						$author$project$Internal$Commands$stringBoolInt(sweepFlag),
						$author$project$Internal$Commands$stringPoint(
						_Utils_Tuple2(x, y))
					]));
		default:
			return 'Z';
	}
};
var $author$project$Internal$Commands$Close = {$: 7};
var $author$project$Internal$Commands$CubicBeziers = F6(
	function (a, b, c, d, e, f) {
		return {$: 2, a: a, b: b, c: c, d: d, e: e, f: f};
	});
var $author$project$Internal$Commands$CubicBeziersShort = F4(
	function (a, b, c, d) {
		return {$: 3, a: a, b: b, c: c, d: d};
	});
var $author$project$Internal$Commands$QuadraticBeziers = F4(
	function (a, b, c, d) {
		return {$: 4, a: a, b: b, c: c, d: d};
	});
var $author$project$Internal$Commands$QuadraticBeziersShort = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $author$project$Internal$Coordinates$innerLength = function (axis) {
	return A2($elm$core$Basics$max, 1, (axis.ae - axis.h1) - axis.h0);
};
var $author$project$Internal$Coordinates$innerWidth = function (plane) {
	return $author$project$Internal$Coordinates$innerLength(plane.b);
};
var $author$project$Internal$Coordinates$range = function (axis) {
	var diff = axis.J - axis.Y;
	return (diff > 0) ? diff : 1;
};
var $author$project$Internal$Coordinates$scaleSVGX = F2(
	function (plane, value) {
		return (value * $author$project$Internal$Coordinates$innerWidth(plane)) / $author$project$Internal$Coordinates$range(plane.b);
	});
var $author$project$Internal$Coordinates$toSVGX = F2(
	function (plane, value) {
		return A2($author$project$Internal$Coordinates$scaleSVGX, plane, value - plane.b.Y) + plane.b.h1;
	});
var $author$project$Internal$Coordinates$innerHeight = function (plane) {
	return $author$project$Internal$Coordinates$innerLength(plane.a);
};
var $author$project$Internal$Coordinates$scaleSVGY = F2(
	function (plane, value) {
		return (value * $author$project$Internal$Coordinates$innerHeight(plane)) / $author$project$Internal$Coordinates$range(plane.a);
	});
var $author$project$Internal$Coordinates$toSVGY = F2(
	function (plane, value) {
		return A2($author$project$Internal$Coordinates$scaleSVGY, plane, plane.a.J - value) + plane.a.h1;
	});
var $author$project$Internal$Commands$translate = F2(
	function (plane, command) {
		switch (command.$) {
			case 0:
				var x = command.a;
				var y = command.b;
				return A2(
					$author$project$Internal$Commands$Move,
					A2($author$project$Internal$Coordinates$toSVGX, plane, x),
					A2($author$project$Internal$Coordinates$toSVGY, plane, y));
			case 1:
				var x = command.a;
				var y = command.b;
				return A2(
					$author$project$Internal$Commands$Line,
					A2($author$project$Internal$Coordinates$toSVGX, plane, x),
					A2($author$project$Internal$Coordinates$toSVGY, plane, y));
			case 2:
				var cx1 = command.a;
				var cy1 = command.b;
				var cx2 = command.c;
				var cy2 = command.d;
				var x = command.e;
				var y = command.f;
				return A6(
					$author$project$Internal$Commands$CubicBeziers,
					A2($author$project$Internal$Coordinates$toSVGX, plane, cx1),
					A2($author$project$Internal$Coordinates$toSVGY, plane, cy1),
					A2($author$project$Internal$Coordinates$toSVGX, plane, cx2),
					A2($author$project$Internal$Coordinates$toSVGY, plane, cy2),
					A2($author$project$Internal$Coordinates$toSVGX, plane, x),
					A2($author$project$Internal$Coordinates$toSVGY, plane, y));
			case 3:
				var cx1 = command.a;
				var cy1 = command.b;
				var x = command.c;
				var y = command.d;
				return A4(
					$author$project$Internal$Commands$CubicBeziersShort,
					A2($author$project$Internal$Coordinates$toSVGX, plane, cx1),
					A2($author$project$Internal$Coordinates$toSVGY, plane, cy1),
					A2($author$project$Internal$Coordinates$toSVGX, plane, x),
					A2($author$project$Internal$Coordinates$toSVGY, plane, y));
			case 4:
				var cx1 = command.a;
				var cy1 = command.b;
				var x = command.c;
				var y = command.d;
				return A4(
					$author$project$Internal$Commands$QuadraticBeziers,
					A2($author$project$Internal$Coordinates$toSVGX, plane, cx1),
					A2($author$project$Internal$Coordinates$toSVGY, plane, cy1),
					A2($author$project$Internal$Coordinates$toSVGX, plane, x),
					A2($author$project$Internal$Coordinates$toSVGY, plane, y));
			case 5:
				var x = command.a;
				var y = command.b;
				return A2(
					$author$project$Internal$Commands$QuadraticBeziersShort,
					A2($author$project$Internal$Coordinates$toSVGX, plane, x),
					A2($author$project$Internal$Coordinates$toSVGY, plane, y));
			case 6:
				var rx = command.a;
				var ry = command.b;
				var xAxisRotation = command.c;
				var largeArcFlag = command.d;
				var sweepFlag = command.e;
				var x = command.f;
				var y = command.g;
				return A7(
					$author$project$Internal$Commands$Arc,
					rx,
					ry,
					xAxisRotation,
					largeArcFlag,
					sweepFlag,
					A2($author$project$Internal$Coordinates$toSVGX, plane, x),
					A2($author$project$Internal$Coordinates$toSVGY, plane, y));
			default:
				return $author$project$Internal$Commands$Close;
		}
	});
var $author$project$Internal$Commands$description = F2(
	function (plane, commands) {
		return $author$project$Internal$Commands$joinCommands(
			A2(
				$elm$core$List$map,
				A2(
					$elm$core$Basics$composeR,
					$author$project$Internal$Commands$translate(plane),
					$author$project$Internal$Commands$stringCommand),
				commands));
	});
var $elm$svg$Svg$Attributes$fillOpacity = _VirtualDom_attribute('fill-opacity');
var $elm$svg$Svg$path = $elm$svg$Svg$trustedNode('path');
var $author$project$Internal$Coordinates$scaleCartesianX = F2(
	function (plane, value) {
		return (value * $author$project$Internal$Coordinates$range(plane.b)) / $author$project$Internal$Coordinates$innerWidth(plane);
	});
var $author$project$Internal$Coordinates$scaleCartesianY = F2(
	function (plane, value) {
		return (value * $author$project$Internal$Coordinates$range(plane.a)) / $author$project$Internal$Coordinates$innerHeight(plane);
	});
var $elm$svg$Svg$Attributes$strokeOpacity = _VirtualDom_attribute('stroke-opacity');
var $elm$svg$Svg$circle = $elm$svg$Svg$trustedNode('circle');
var $elm$svg$Svg$Attributes$cx = _VirtualDom_attribute('cx');
var $elm$svg$Svg$Attributes$cy = _VirtualDom_attribute('cy');
var $elm$svg$Svg$defs = $elm$svg$Svg$trustedNode('defs');
var $elm$svg$Svg$Attributes$id = _VirtualDom_attribute('id');
var $elm$svg$Svg$linearGradient = $elm$svg$Svg$trustedNode('linearGradient');
var $elm$svg$Svg$Attributes$offset = _VirtualDom_attribute('offset');
var $elm$svg$Svg$pattern = $elm$svg$Svg$trustedNode('pattern');
var $elm$svg$Svg$Attributes$patternTransform = _VirtualDom_attribute('patternTransform');
var $elm$svg$Svg$Attributes$patternUnits = _VirtualDom_attribute('patternUnits');
var $elm$svg$Svg$Attributes$r = _VirtualDom_attribute('r');
var $elm$svg$Svg$stop = $elm$svg$Svg$trustedNode('stop');
var $elm$svg$Svg$Attributes$stopColor = _VirtualDom_attribute('stop-color');
var $elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');
var $author$project$Internal$Svg$toPattern = F2(
	function (defaultColor, design) {
		var toPatternId = function (props) {
			return A3(
				$elm$core$String$replace,
				'(',
				'-',
				A3(
					$elm$core$String$replace,
					')',
					'-',
					A3(
						$elm$core$String$replace,
						'.',
						'-',
						A3(
							$elm$core$String$replace,
							',',
							'-',
							A3(
								$elm$core$String$replace,
								' ',
								'-',
								A2(
									$elm$core$String$join,
									'-',
									_Utils_ap(
										_List_fromArray(
											[
												'elm-charts__pattern',
												function () {
												switch (design.$) {
													case 0:
														return 'striped';
													case 1:
														return 'dotted';
													default:
														return 'gradient';
												}
											}()
											]),
										props)))))));
		};
		var toPatternDefs = F4(
			function (id, spacing, rotate, inside) {
				return A2(
					$elm$svg$Svg$defs,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$svg$Svg$pattern,
							_List_fromArray(
								[
									$elm$svg$Svg$Attributes$id(id),
									$elm$svg$Svg$Attributes$patternUnits('userSpaceOnUse'),
									$elm$svg$Svg$Attributes$width(
									$elm$core$String$fromFloat(spacing)),
									$elm$svg$Svg$Attributes$height(
									$elm$core$String$fromFloat(spacing)),
									$elm$svg$Svg$Attributes$patternTransform(
									'rotate(' + ($elm$core$String$fromFloat(rotate) + ')'))
								]),
							_List_fromArray(
								[inside]))
						]));
			});
		var _v0 = function () {
			switch (design.$) {
				case 0:
					var edits = design.a;
					var config = A2(
						$author$project$Internal$Helpers$apply,
						edits,
						{d: defaultColor, u: 45, iG: 4, h: 3});
					var theId = toPatternId(
						_List_fromArray(
							[
								config.d,
								$elm$core$String$fromFloat(config.h),
								$elm$core$String$fromFloat(config.iG),
								$elm$core$String$fromFloat(config.u)
							]));
					return _Utils_Tuple2(
						A4(
							toPatternDefs,
							theId,
							config.iG,
							config.u,
							A2(
								$elm$svg$Svg$line,
								_List_fromArray(
									[
										$elm$svg$Svg$Attributes$x1('0'),
										$elm$svg$Svg$Attributes$y('0'),
										$elm$svg$Svg$Attributes$x2('0'),
										$elm$svg$Svg$Attributes$y2(
										$elm$core$String$fromFloat(config.iG)),
										$elm$svg$Svg$Attributes$stroke(config.d),
										$elm$svg$Svg$Attributes$strokeWidth(
										$elm$core$String$fromFloat(config.h))
									]),
								_List_Nil)),
						theId);
				case 1:
					var edits = design.a;
					var config = A2(
						$author$project$Internal$Helpers$apply,
						edits,
						{d: defaultColor, u: 45, iG: 4, h: 3});
					var theId = toPatternId(
						_List_fromArray(
							[
								config.d,
								$elm$core$String$fromFloat(config.h),
								$elm$core$String$fromFloat(config.iG),
								$elm$core$String$fromFloat(config.u)
							]));
					return _Utils_Tuple2(
						A4(
							toPatternDefs,
							theId,
							config.iG,
							config.u,
							A2(
								$elm$svg$Svg$circle,
								_List_fromArray(
									[
										$elm$svg$Svg$Attributes$fill(config.d),
										$elm$svg$Svg$Attributes$cx(
										$elm$core$String$fromFloat(config.h / 3)),
										$elm$svg$Svg$Attributes$cy(
										$elm$core$String$fromFloat(config.h / 3)),
										$elm$svg$Svg$Attributes$r(
										$elm$core$String$fromFloat(config.h / 3))
									]),
								_List_Nil)),
						theId);
				default:
					var edits = design.a;
					var colors = _Utils_eq(edits, _List_Nil) ? _List_fromArray(
						[defaultColor, 'white']) : edits;
					var theId = toPatternId(colors);
					var totalColors = $elm$core$List$length(colors);
					var toPercentage = function (i) {
						return (i * 100) / (totalColors - 1);
					};
					var toStop = F2(
						function (i, c) {
							return A2(
								$elm$svg$Svg$stop,
								_List_fromArray(
									[
										$elm$svg$Svg$Attributes$offset(
										$elm$core$String$fromFloat(
											toPercentage(i)) + '%'),
										$elm$svg$Svg$Attributes$stopColor(c)
									]),
								_List_Nil);
						});
					return _Utils_Tuple2(
						A2(
							$elm$svg$Svg$defs,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$elm$svg$Svg$linearGradient,
									_List_fromArray(
										[
											$elm$svg$Svg$Attributes$id(theId),
											$elm$svg$Svg$Attributes$x1('0'),
											$elm$svg$Svg$Attributes$x2('0'),
											$elm$svg$Svg$Attributes$y1('0'),
											$elm$svg$Svg$Attributes$y2('1')
										]),
									A2($elm$core$List$indexedMap, toStop, colors))
								])),
						theId);
			}
		}();
		var patternDefs = _v0.a;
		var patternId = _v0.b;
		return _Utils_Tuple2(patternDefs, 'url(#' + (patternId + ')'));
	});
var $elm$virtual_dom$VirtualDom$mapAttribute = _VirtualDom_mapAttribute;
var $elm$html$Html$Attributes$map = $elm$virtual_dom$VirtualDom$mapAttribute;
var $author$project$Internal$Svg$withAttrs = F3(
	function (attrs, toEl, defaultAttrs) {
		return toEl(
			_Utils_ap(
				defaultAttrs,
				A2(
					$elm$core$List$map,
					$elm$html$Html$Attributes$map($elm$core$Basics$never),
					attrs)));
	});
var $elm$svg$Svg$Attributes$clipPath = _VirtualDom_attribute('clip-path');
var $author$project$Internal$Coordinates$toId = function (plane) {
	var numToStr = A2(
		$elm$core$Basics$composeR,
		$elm$core$String$fromFloat,
		A2($elm$core$String$replace, '.', '-'));
	return A2(
		$elm$core$String$join,
		'_',
		_List_fromArray(
			[
				'elm-charts__id',
				numToStr(plane.b.ae),
				numToStr(plane.b.Y),
				numToStr(plane.b.J),
				numToStr(plane.b.h1),
				numToStr(plane.b.h0),
				numToStr(plane.a.ae),
				numToStr(plane.a.Y),
				numToStr(plane.a.J),
				numToStr(plane.a.h1),
				numToStr(plane.a.h0)
			]));
};
var $author$project$Internal$Svg$withinChartArea = function (plane) {
	return $elm$svg$Svg$Attributes$clipPath(
		'url(#' + ($author$project$Internal$Coordinates$toId(plane) + ')'));
};
var $author$project$Internal$Svg$bar = F3(
	function (plane, config, point) {
		var viewBar = F6(
			function (fill, fillOpacity, border, borderWidth, strokeOpacity, cmds) {
				return A4(
					$author$project$Internal$Svg$withAttrs,
					config.i,
					$elm$svg$Svg$path,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$class('elm-charts__bar'),
							$elm$svg$Svg$Attributes$fill(fill),
							$elm$svg$Svg$Attributes$fillOpacity(
							$elm$core$String$fromFloat(fillOpacity)),
							$elm$svg$Svg$Attributes$stroke(border),
							$elm$svg$Svg$Attributes$strokeWidth(
							$elm$core$String$fromFloat(borderWidth)),
							$elm$svg$Svg$Attributes$strokeOpacity(
							$elm$core$String$fromFloat(strokeOpacity)),
							$elm$svg$Svg$Attributes$d(
							A2($author$project$Internal$Commands$description, plane, cmds)),
							$author$project$Internal$Svg$withinChartArea(plane)
						]),
					_List_Nil);
			});
		var highlightColor = (config.hF === '') ? config.d : config.hF;
		var borderWidthCarY = A2($author$project$Internal$Coordinates$scaleCartesianY, plane, config.P / 2);
		var highlightWidthCarY = borderWidthCarY + A2($author$project$Internal$Coordinates$scaleCartesianY, plane, config.hG / 2);
		var borderWidthCarX = A2($author$project$Internal$Coordinates$scaleCartesianX, plane, config.P / 2);
		var highlightWidthCarX = borderWidthCarX + A2($author$project$Internal$Coordinates$scaleCartesianX, plane, config.hG / 2);
		var pos = {
			a1: A2($elm$core$Basics$min, point.a1, point.dm) + borderWidthCarX,
			dm: A2($elm$core$Basics$max, point.a1, point.dm) - borderWidthCarX,
			jx: A2($elm$core$Basics$min, point.jx, point.eP) + borderWidthCarY,
			eP: A2($elm$core$Basics$max, point.jx, point.eP) - borderWidthCarY
		};
		var height = $elm$core$Basics$abs(pos.eP - pos.jx);
		var highlightPos = {a1: pos.a1 - highlightWidthCarX, dm: pos.dm + highlightWidthCarX, jx: pos.jx - highlightWidthCarY, eP: pos.eP + highlightWidthCarY};
		var width = $elm$core$Basics$abs(pos.dm - pos.a1);
		var roundingBottom = (A2($author$project$Internal$Coordinates$scaleSVGX, plane, width) * 0.5) * A3($elm$core$Basics$clamp, 0, 1, config.iq);
		var radiusBottomX = A2($author$project$Internal$Coordinates$scaleCartesianX, plane, roundingBottom);
		var radiusBottomY = A2($author$project$Internal$Coordinates$scaleCartesianY, plane, roundingBottom);
		var roundingTop = (A2($author$project$Internal$Coordinates$scaleSVGX, plane, width) * 0.5) * A3($elm$core$Basics$clamp, 0, 1, config.ir);
		var radiusTopX = A2($author$project$Internal$Coordinates$scaleCartesianX, plane, roundingTop);
		var radiusTopY = A2($author$project$Internal$Coordinates$scaleCartesianY, plane, roundingTop);
		var _v0 = ((((height - (radiusTopY * 0.8)) - (radiusBottomY * 0.8)) <= 0) || (((width - (radiusTopX * 0.8)) - (radiusBottomX * 0.8)) <= 0)) ? _Utils_Tuple2(0, 0) : _Utils_Tuple2(config.ir, config.iq);
		var roundTop = _v0.a;
		var roundBottom = _v0.b;
		var _v1 = function () {
			if (_Utils_eq(pos.jx, pos.eP)) {
				return _Utils_Tuple2(_List_Nil, _List_Nil);
			} else {
				var _v2 = _Utils_Tuple2(roundTop > 0, roundBottom > 0);
				if (!_v2.a) {
					if (!_v2.b) {
						return _Utils_Tuple2(
							_List_fromArray(
								[
									A2($author$project$Internal$Commands$Move, pos.a1, pos.jx),
									A2($author$project$Internal$Commands$Line, pos.a1, pos.eP),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.eP),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.jx),
									A2($author$project$Internal$Commands$Line, pos.a1, pos.jx)
								]),
							_List_fromArray(
								[
									A2($author$project$Internal$Commands$Move, highlightPos.a1, pos.jx),
									A2($author$project$Internal$Commands$Line, highlightPos.a1, highlightPos.eP),
									A2($author$project$Internal$Commands$Line, highlightPos.dm, highlightPos.eP),
									A2($author$project$Internal$Commands$Line, highlightPos.dm, pos.jx),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.jx),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.eP),
									A2($author$project$Internal$Commands$Line, pos.a1, pos.eP),
									A2($author$project$Internal$Commands$Line, pos.a1, pos.jx)
								]));
					} else {
						return _Utils_Tuple2(
							_List_fromArray(
								[
									A2($author$project$Internal$Commands$Move, pos.a1 + radiusBottomX, pos.jx),
									A7($author$project$Internal$Commands$Arc, roundingBottom, roundingBottom, -45, false, true, pos.a1, pos.jx + radiusBottomY),
									A2($author$project$Internal$Commands$Line, pos.a1, pos.eP),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.eP),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.jx + radiusBottomY),
									A7($author$project$Internal$Commands$Arc, roundingBottom, roundingBottom, -45, false, true, pos.dm - radiusBottomX, pos.jx),
									A2($author$project$Internal$Commands$Line, pos.a1 + radiusBottomX, pos.jx)
								]),
							_List_fromArray(
								[
									A2($author$project$Internal$Commands$Move, highlightPos.a1 + radiusBottomX, highlightPos.jx),
									A7($author$project$Internal$Commands$Arc, roundingBottom, roundingBottom, -45, false, true, highlightPos.a1, highlightPos.jx + radiusBottomY),
									A2($author$project$Internal$Commands$Line, highlightPos.a1, highlightPos.eP),
									A2($author$project$Internal$Commands$Line, highlightPos.dm, highlightPos.eP),
									A2($author$project$Internal$Commands$Line, highlightPos.dm, highlightPos.jx + radiusBottomY),
									A7($author$project$Internal$Commands$Arc, roundingBottom, roundingBottom, -45, false, true, highlightPos.dm - radiusBottomX, highlightPos.jx),
									A2($author$project$Internal$Commands$Line, highlightPos.a1 + radiusBottomX, highlightPos.jx),
									A2($author$project$Internal$Commands$Line, pos.dm - radiusBottomX, pos.jx),
									A7($author$project$Internal$Commands$Arc, roundingBottom, roundingBottom, -45, false, false, pos.dm, pos.jx + radiusBottomY),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.eP),
									A2($author$project$Internal$Commands$Line, pos.a1, pos.eP),
									A2($author$project$Internal$Commands$Line, pos.a1, pos.jx + radiusBottomY),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.jx)
								]));
					}
				} else {
					if (!_v2.b) {
						return _Utils_Tuple2(
							_List_fromArray(
								[
									A2($author$project$Internal$Commands$Move, pos.a1, pos.jx),
									A2($author$project$Internal$Commands$Line, pos.a1, pos.eP - radiusTopY),
									A7($author$project$Internal$Commands$Arc, roundingTop, roundingTop, -45, false, true, pos.a1 + radiusTopX, pos.eP),
									A2($author$project$Internal$Commands$Line, pos.dm - radiusTopX, pos.eP),
									A7($author$project$Internal$Commands$Arc, roundingTop, roundingTop, -45, false, true, pos.dm, pos.eP - radiusTopY),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.jx),
									A2($author$project$Internal$Commands$Line, pos.a1, pos.jx)
								]),
							_List_fromArray(
								[
									A2($author$project$Internal$Commands$Move, highlightPos.a1, pos.jx),
									A2($author$project$Internal$Commands$Line, highlightPos.a1, highlightPos.eP - radiusTopY),
									A7($author$project$Internal$Commands$Arc, roundingTop, roundingTop, -45, false, true, highlightPos.a1 + radiusTopX, highlightPos.eP),
									A2($author$project$Internal$Commands$Line, highlightPos.dm - radiusTopX, highlightPos.eP),
									A7($author$project$Internal$Commands$Arc, roundingTop, roundingTop, -45, false, true, highlightPos.dm, highlightPos.eP - radiusTopY),
									A2($author$project$Internal$Commands$Line, highlightPos.dm, pos.jx),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.jx),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.eP - radiusTopY),
									A7($author$project$Internal$Commands$Arc, roundingTop, roundingTop, -45, false, false, pos.dm - radiusTopX, pos.eP),
									A2($author$project$Internal$Commands$Line, pos.a1 + radiusTopX, pos.eP),
									A7($author$project$Internal$Commands$Arc, roundingTop, roundingTop, -45, false, false, pos.a1, pos.eP - radiusTopY),
									A2($author$project$Internal$Commands$Line, pos.a1, pos.jx)
								]));
					} else {
						return _Utils_Tuple2(
							_List_fromArray(
								[
									A2($author$project$Internal$Commands$Move, pos.a1 + radiusBottomX, pos.jx),
									A7($author$project$Internal$Commands$Arc, roundingBottom, roundingBottom, -45, false, true, pos.a1, pos.jx + radiusBottomY),
									A2($author$project$Internal$Commands$Line, pos.a1, pos.eP - radiusTopY),
									A7($author$project$Internal$Commands$Arc, roundingTop, roundingTop, -45, false, true, pos.a1 + radiusTopX, pos.eP),
									A2($author$project$Internal$Commands$Line, pos.dm - radiusTopX, pos.eP),
									A7($author$project$Internal$Commands$Arc, roundingTop, roundingTop, -45, false, true, pos.dm, pos.eP - radiusTopY),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.jx + radiusBottomY),
									A7($author$project$Internal$Commands$Arc, roundingBottom, roundingBottom, -45, false, true, pos.dm - radiusBottomX, pos.jx),
									A2($author$project$Internal$Commands$Line, pos.a1 + radiusBottomX, pos.jx)
								]),
							_List_fromArray(
								[
									A2($author$project$Internal$Commands$Move, highlightPos.a1 + radiusBottomX, highlightPos.jx),
									A7($author$project$Internal$Commands$Arc, roundingBottom, roundingBottom, -45, false, true, highlightPos.a1, highlightPos.jx + radiusBottomY),
									A2($author$project$Internal$Commands$Line, highlightPos.a1, highlightPos.eP - radiusTopY),
									A7($author$project$Internal$Commands$Arc, roundingTop, roundingTop, -45, false, true, highlightPos.a1 + radiusTopX, highlightPos.eP),
									A2($author$project$Internal$Commands$Line, highlightPos.dm - radiusTopX, highlightPos.eP),
									A7($author$project$Internal$Commands$Arc, roundingTop, roundingTop, -45, false, true, highlightPos.dm, highlightPos.eP - radiusTopY),
									A2($author$project$Internal$Commands$Line, highlightPos.dm, highlightPos.jx + radiusBottomY),
									A7($author$project$Internal$Commands$Arc, roundingBottom, roundingBottom, -45, false, true, highlightPos.dm - radiusBottomX, highlightPos.jx),
									A2($author$project$Internal$Commands$Line, highlightPos.a1 + radiusBottomX, highlightPos.jx),
									A2($author$project$Internal$Commands$Line, pos.dm - radiusBottomX, pos.jx),
									A7($author$project$Internal$Commands$Arc, roundingBottom, roundingBottom, -45, false, false, pos.dm, pos.jx + radiusBottomY),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.eP - radiusTopY),
									A7($author$project$Internal$Commands$Arc, roundingTop, roundingTop, -45, false, false, pos.dm - radiusTopX, pos.eP),
									A2($author$project$Internal$Commands$Line, pos.a1 + radiusTopX, pos.eP),
									A7($author$project$Internal$Commands$Arc, roundingTop, roundingTop, -45, false, false, pos.a1, pos.eP - radiusTopY),
									A2($author$project$Internal$Commands$Line, pos.a1, pos.jx + radiusBottomY),
									A2($author$project$Internal$Commands$Line, pos.dm, pos.jx)
								]));
					}
				}
			}
		}();
		var commands = _v1.a;
		var highlightCommands = _v1.b;
		var viewAuraBar = function (fill) {
			return (!config.hE) ? A6(viewBar, fill, config.ag, config.H, config.P, 1, commands) : A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('elm-charts__bar-with-highlight')
					]),
				_List_fromArray(
					[
						A6(viewBar, highlightColor, config.hE, 'transparent', 0, 0, highlightCommands),
						A6(viewBar, fill, config.ag, config.H, config.P, 1, commands)
					]));
		};
		var _v3 = config.d8;
		if (_v3.$ === 1) {
			return viewAuraBar(config.d);
		} else {
			var design = _v3.a;
			var _v4 = A2($author$project$Internal$Svg$toPattern, config.d, design);
			var patternDefs = _v4.a;
			var fill = _v4.b;
			return A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('elm-charts__bar-with-pattern')
					]),
				_List_fromArray(
					[
						patternDefs,
						viewAuraBar(fill)
					]));
		}
	});
var $author$project$Internal$Produce$toBin = F5(
	function (barsConfig, index, prevM, curr, nextM) {
		var _v0 = _Utils_Tuple2(barsConfig.a1, barsConfig.dm);
		if (_v0.a.$ === 1) {
			if (_v0.b.$ === 1) {
				var _v1 = _v0.a;
				var _v2 = _v0.b;
				return {hl: curr, fb: (index + 1) + 0.5, f3: (index + 1) - 0.5};
			} else {
				var _v8 = _v0.a;
				var toX2 = _v0.b.a;
				var _v9 = _Utils_Tuple2(prevM, nextM);
				if (!_v9.a.$) {
					var prev = _v9.a.a;
					return {
						hl: curr,
						fb: toX2(curr),
						f3: toX2(prev)
					};
				} else {
					if (!_v9.b.$) {
						var _v10 = _v9.a;
						var next = _v9.b.a;
						return {
							hl: curr,
							fb: toX2(curr),
							f3: toX2(curr) - (toX2(next) - toX2(curr))
						};
					} else {
						var _v11 = _v9.a;
						var _v12 = _v9.b;
						return {
							hl: curr,
							fb: toX2(curr),
							f3: toX2(curr) - 1
						};
					}
				}
			}
		} else {
			if (_v0.b.$ === 1) {
				var toX1 = _v0.a.a;
				var _v3 = _v0.b;
				var _v4 = _Utils_Tuple2(prevM, nextM);
				if (!_v4.b.$) {
					var next = _v4.b.a;
					return {
						hl: curr,
						fb: toX1(next),
						f3: toX1(curr)
					};
				} else {
					if (!_v4.a.$) {
						var prev = _v4.a.a;
						var _v5 = _v4.b;
						return {
							hl: curr,
							fb: toX1(curr) + (toX1(curr) - toX1(prev)),
							f3: toX1(curr)
						};
					} else {
						var _v6 = _v4.a;
						var _v7 = _v4.b;
						return {
							hl: curr,
							fb: toX1(curr) + 1,
							f3: toX1(curr)
						};
					}
				}
			} else {
				var toX1 = _v0.a.a;
				var toX2 = _v0.b.a;
				return {
					hl: curr,
					fb: toX2(curr),
					f3: toX1(curr)
				};
			}
		}
	});
var $author$project$Internal$Produce$toDefaultName = F2(
	function (ids, name) {
		return A2(
			$elm$core$Maybe$withDefault,
			'Property #' + $elm$core$String$fromInt(ids.gC + 1),
			name);
	});
var $elm$html$Html$td = _VirtualDom_node('td');
var $elm$html$Html$tr = _VirtualDom_node('tr');
var $author$project$Internal$Produce$tooltipRow = F3(
	function (color, title, text) {
		return A2(
			$elm$html$Html$tr,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$td,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'color', color),
							A2($elm$html$Html$Attributes$style, 'padding', '0'),
							A2($elm$html$Html$Attributes$style, 'padding-right', '3px')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(title + ':')
						])),
					A2(
					$elm$html$Html$td,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'text-align', 'right'),
							A2($elm$html$Html$Attributes$style, 'padding', '0')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(text)
						]))
				]));
	});
var $author$project$Internal$Produce$updateBorder = F2(
	function (defaultColor, product) {
		return _Utils_eq(product.H, defaultColor) ? _Utils_update(
			product,
			{H: product.d}) : product;
	});
var $author$project$Internal$Produce$updateColorIfGradientIsSet = F2(
	function (defaultColor, product) {
		var _v0 = product.d8;
		if (((!_v0.$) && (_v0.a.$ === 2)) && _v0.a.a.b) {
			var _v1 = _v0.a.a;
			var first = _v1.a;
			return _Utils_eq(product.d, defaultColor) ? _Utils_update(
				product,
				{d: first}) : product;
		} else {
			return product;
		}
	});
var $author$project$Internal$Helpers$withFirst = F2(
	function (xs, func) {
		if (xs.b) {
			var x = xs.a;
			var rest = xs.b;
			return $elm$core$Maybe$Just(
				A2(func, x, rest));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Internal$Helpers$withSurround = F2(
	function (all, func) {
		var fold = F4(
			function (index, prev, acc, list) {
				fold:
				while (true) {
					if (list.b) {
						if (list.b.b) {
							var a = list.a;
							var _v1 = list.b;
							var b = _v1.a;
							var rest = _v1.b;
							var $temp$index = index + 1,
								$temp$prev = $elm$core$Maybe$Just(a),
								$temp$acc = _Utils_ap(
								acc,
								_List_fromArray(
									[
										A4(
										func,
										index,
										prev,
										a,
										$elm$core$Maybe$Just(b))
									])),
								$temp$list = A2($elm$core$List$cons, b, rest);
							index = $temp$index;
							prev = $temp$prev;
							acc = $temp$acc;
							list = $temp$list;
							continue fold;
						} else {
							var a = list.a;
							return _Utils_ap(
								acc,
								_List_fromArray(
									[
										A4(func, index, prev, a, $elm$core$Maybe$Nothing)
									]));
						}
					} else {
						return acc;
					}
				}
			});
		return A4(fold, 0, $elm$core$Maybe$Nothing, _List_Nil, all);
	});
var $author$project$Internal$Produce$toBarSeries = F4(
	function (elementIndex, barsAttrs, properties, data) {
		var barsConfig = A2($author$project$Internal$Helpers$apply, barsAttrs, $author$project$Internal$Produce$defaultBars);
		var numOfStacks = barsConfig.hC ? $elm$core$List$length(properties) : 1;
		var forEachDataPoint = F7(
			function (absoluteIndex, stackSeriesConfigIndex, barSeriesConfigIndex, numOfBarsInStack, barSeriesConfig, dataIndex, bin) {
				var ySum = barSeriesConfig.dg(bin.hl);
				var y = barSeriesConfig.d$(bin.hl);
				var start = bin.f3;
				var minY = (numOfBarsInStack > 1) ? $elm$core$Basics$max(0) : $elm$core$Basics$identity;
				var y1 = minY(
					A2($elm$core$Maybe$withDefault, 0, ySum) - A2($elm$core$Maybe$withDefault, 0, y));
				var y2 = minY(
					A2($elm$core$Maybe$withDefault, 0, ySum));
				var isSingle = numOfBarsInStack === 1;
				var identification = {gC: absoluteIndex, e4: dataIndex, hs: elementIndex, iz: barSeriesConfigIndex, iI: stackSeriesConfigIndex};
				var isBottom = _Utils_eq(identification.iz, numOfBarsInStack - 1);
				var roundBottom = (isSingle || isBottom) ? barsConfig.iq : 0;
				var isTop = !identification.iz;
				var roundTop = (isSingle || isTop) ? barsConfig.ir : 0;
				var end = bin.fb;
				var length = end - start;
				var margin = length * barsConfig.aE;
				var spacing = length * barsConfig.iG;
				var width = ((length - (margin * 2)) - ((numOfStacks - 1) * spacing)) / numOfStacks;
				var offset = barsConfig.hC ? ((identification.iI * width) + (identification.iI * spacing)) : 0;
				var x1 = (start + margin) + offset;
				var x2 = ((start + margin) + offset) + width;
				var defaultColor = $author$project$Internal$Helpers$toDefaultColor(identification.gC);
				var basicAttributes = _List_fromArray(
					[
						$author$project$Chart$Attributes$roundTop(roundTop),
						$author$project$Chart$Attributes$roundBottom(roundBottom),
						$author$project$Chart$Attributes$color(defaultColor),
						$author$project$Chart$Attributes$border(defaultColor)
					]);
				var barPresentationConfig = A2(
					$author$project$Internal$Produce$updateBorder,
					defaultColor,
					A2(
						$author$project$Internal$Produce$updateColorIfGradientIsSet,
						defaultColor,
						A2(
							$author$project$Internal$Helpers$apply,
							_Utils_ap(
								basicAttributes,
								_Utils_ap(
									barSeriesConfig.ij,
									A2(barSeriesConfig.gd, identification, bin.hl))),
							$author$project$Internal$Svg$defaultBar)));
				return A2(
					$author$project$Internal$Item$Rendered,
					{
						d: barPresentationConfig.d,
						hl: bin.hl,
						hJ: identification,
						hW: !_Utils_eq(y, $elm$core$Maybe$Nothing),
						dO: barSeriesConfig.f8,
						ij: barPresentationConfig,
						i7: $author$project$Internal$Item$Bar,
						jj: barSeriesConfig.jj(bin.hl),
						a1: start,
						dm: end,
						a: A2($elm$core$Maybe$withDefault, 0, y)
					},
					{
						B: {
							a1: x1,
							dm: x2,
							jx: A2($elm$core$Basics$min, y1, y2),
							eP: A2($elm$core$Basics$max, y1, y2)
						},
						fW: F2(
							function (plane, position) {
								return A3($author$project$Internal$Svg$bar, plane, barPresentationConfig, position);
							}),
						jc: function (_v5) {
							return {a1: x1, dm: x2, jx: y1, eP: y2};
						},
						ji: function (_v6) {
							return _List_fromArray(
								[
									A3(
									$author$project$Internal$Produce$tooltipRow,
									barPresentationConfig.d,
									A2($author$project$Internal$Produce$toDefaultName, identification, barSeriesConfig.f8),
									barSeriesConfig.jj(bin.hl))
								]);
						}
					});
			});
		var forEachBarSeriesConfig = F6(
			function (bins, absoluteIndex, stackSeriesConfigIndex, numOfBarsInStack, barSeriesConfigIndex, barSeriesConfig) {
				var absoluteIndexNew = absoluteIndex + barSeriesConfigIndex;
				var items = A2(
					$elm$core$List$indexedMap,
					A5(forEachDataPoint, absoluteIndexNew, stackSeriesConfigIndex, barSeriesConfigIndex, numOfBarsInStack, barSeriesConfig),
					bins);
				return A2(
					$author$project$Internal$Helpers$withFirst,
					items,
					F2(
						function (first, rest) {
							return A2(
								$author$project$Internal$Item$Rendered,
								_Utils_Tuple2(first, rest),
								{
									B: A2($author$project$Internal$Coordinates$foldPosition, $author$project$Internal$Item$getLimits, items),
									fW: F2(
										function (plane, _v3) {
											return A2(
												$elm$svg$Svg$g,
												_List_fromArray(
													[
														$elm$svg$Svg$Attributes$class('elm-charts__series')
													]),
												A2(
													$elm$core$List$map,
													$author$project$Internal$Item$render(plane),
													items));
										}),
									jc: function (plane) {
										return A2(
											$author$project$Internal$Coordinates$foldPosition,
											$author$project$Internal$Item$getPosition(plane),
											items);
									},
									ji: function (_v4) {
										return _List_fromArray(
											[
												A2(
												$elm$html$Html$table,
												_List_fromArray(
													[
														A2($elm$html$Html$Attributes$style, 'margin', '0')
													]),
												A2($elm$core$List$concatMap, $author$project$Internal$Item$tooltip, items))
											]);
									}
								});
						}));
			});
		var forEachStackSeriesConfig = F3(
			function (bins, stackSeriesConfig, _v2) {
				var absoluteIndex = _v2.a;
				var stackSeriesConfigIndex = _v2.b;
				var items = _v2.c;
				var seriesItems = function () {
					if (!stackSeriesConfig.$) {
						var barSeriesConfig = stackSeriesConfig.a;
						return _List_fromArray(
							[
								A6(forEachBarSeriesConfig, bins, absoluteIndex, stackSeriesConfigIndex, 1, 0, barSeriesConfig)
							]);
					} else {
						var barSeriesConfigs = stackSeriesConfig.a;
						var numOfBarsInStack = $elm$core$List$length(barSeriesConfigs);
						return A2(
							$elm$core$List$indexedMap,
							A4(forEachBarSeriesConfig, bins, absoluteIndex, stackSeriesConfigIndex, numOfBarsInStack),
							barSeriesConfigs);
					}
				}();
				return _Utils_Tuple3(
					absoluteIndex + $elm$core$List$length(seriesItems),
					stackSeriesConfigIndex + 1,
					_Utils_ap(
						items,
						A2($elm$core$List$filterMap, $elm$core$Basics$identity, seriesItems)));
			});
		return function (bins) {
			return function (_v0) {
				var items = _v0.c;
				return items;
			}(
				A3(
					$elm$core$List$foldl,
					forEachStackSeriesConfig(bins),
					_Utils_Tuple3(elementIndex, 0, _List_Nil),
					properties));
		}(
			A2(
				$author$project$Internal$Helpers$withSurround,
				data,
				$author$project$Internal$Produce$toBin(barsConfig)));
	});
var $author$project$Chart$barsMap = F4(
	function (mapData, edits, properties, data) {
		return $author$project$Chart$Indexed(
			function (index) {
				var legends_ = A3($author$project$Internal$Legend$toBarLegends, index, edits, properties);
				var items = A4($author$project$Internal$Produce$toBarSeries, index, edits, properties, data);
				var generalized = A2(
					$elm$core$List$map,
					$author$project$Internal$Item$map(mapData),
					A2($elm$core$List$concatMap, $author$project$Internal$Many$generalize, items));
				var bins = A2($author$project$Chart$Item$apply, $author$project$Chart$Item$bins, generalized);
				var toLimits = A2($elm$core$List$map, $author$project$Internal$Item$getLimits, bins);
				var barsConfig = A2($author$project$Internal$Helpers$apply, edits, $author$project$Internal$Produce$defaultBars);
				var toTicks = F2(
					function (plane, acc) {
						return _Utils_update(
							acc,
							{
								O: _Utils_ap(
									acc.O,
									barsConfig.l ? A2(
										$elm$core$List$concatMap,
										A2(
											$elm$core$Basics$composeR,
											$author$project$Chart$Item$getLimits,
											function (pos) {
												return _List_fromArray(
													[pos.a1, pos.dm]);
											}),
										bins) : _List_Nil)
							});
					});
				return _Utils_Tuple2(
					A5(
						$author$project$Chart$BarsElement,
						toLimits,
						generalized,
						legends_,
						toTicks,
						function (plane) {
							return A2(
								$elm$svg$Svg$map,
								$elm$core$Basics$never,
								A2(
									$elm$svg$Svg$g,
									_List_fromArray(
										[
											$elm$svg$Svg$Attributes$class('elm-charts__bar-series')
										]),
									A2(
										$elm$core$List$map,
										$author$project$Internal$Item$render(plane),
										items)));
						}),
					index + $elm$core$List$length(items));
			});
	});
var $author$project$Chart$bars = F3(
	function (edits, properties, data) {
		return A4($author$project$Chart$barsMap, $elm$core$Basics$identity, edits, properties, data);
	});
var $author$project$Internal$Many$andThen = F2(
	function (_v0, _v1) {
		var toPos2 = _v0.a;
		var func2 = _v0.b;
		var toPos1 = _v1.a;
		var func1 = _v1.b;
		return A2(
			$author$project$Internal$Many$Remodel,
			toPos2,
			function (items) {
				return func2(
					func1(items));
			});
	});
var $author$project$Chart$Item$andThen = $author$project$Internal$Many$andThen;
var $author$project$Internal$Item$isBar = function (_v0) {
	var meta = _v0.a;
	var item = _v0.b;
	var _v1 = meta.ij;
	if (_v1.$ === 1) {
		var bar = _v1.a;
		return $elm$core$Maybe$Just(
			A2(
				$author$project$Internal$Item$Rendered,
				{d: meta.d, hl: meta.hl, hJ: meta.hJ, hW: meta.hW, dO: meta.dO, ij: bar, i7: $author$project$Internal$Item$Bar, jj: meta.jj, a1: meta.a1, dm: meta.dm, a: meta.a},
				item));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Internal$Many$bars = A2(
	$author$project$Internal$Many$Remodel,
	$author$project$Internal$Item$getPosition,
	$elm$core$List$filterMap($author$project$Internal$Item$isBar));
var $author$project$Chart$Item$bars = $author$project$Internal$Many$bars;
var $author$project$Internal$Svg$defaultLabel = {o: $elm$core$Maybe$Nothing, i: _List_Nil, H: 'white', P: 0, d: '#808BAB', p: $elm$core$Maybe$Nothing, q: $elm$core$Maybe$Nothing, r: false, u: 0, w: false, m: 0, n: 0};
var $author$project$Internal$Coordinates$bottom = function (pos) {
	return {b: pos.a1 + ((pos.dm - pos.a1) / 2), a: pos.jx};
};
var $author$project$Chart$Item$getBottom = function (p) {
	return A2(
		$elm$core$Basics$composeR,
		$author$project$Internal$Item$getPosition(p),
		$author$project$Internal$Coordinates$bottom);
};
var $author$project$Chart$defaultLabel = {o: $author$project$Internal$Svg$defaultLabel.o, i: $author$project$Internal$Svg$defaultLabel.i, H: $author$project$Internal$Svg$defaultLabel.H, P: $author$project$Internal$Svg$defaultLabel.P, d: $author$project$Internal$Svg$defaultLabel.d, p: $author$project$Internal$Svg$defaultLabel.p, q: $author$project$Internal$Svg$defaultLabel.q, I: $elm$core$Maybe$Nothing, r: $author$project$Internal$Svg$defaultLabel.r, F: $author$project$Chart$Item$getBottom, u: $author$project$Internal$Svg$defaultLabel.u, w: $author$project$Internal$Svg$defaultLabel.w, m: $author$project$Internal$Svg$defaultLabel.m, n: $author$project$Internal$Svg$defaultLabel.n};
var $author$project$Chart$SubElements = function (a) {
	return {$: 10, a: a};
};
var $author$project$Chart$eachCustom = F2(
	function (grouping, func) {
		return $author$project$Chart$SubElements(
			F2(
				function (p, items) {
					var processed = A2($author$project$Chart$Item$apply, grouping, items);
					return A2(
						$elm$core$List$concatMap,
						func(p),
						processed);
				}));
	});
var $author$project$Internal$Item$getDatum = function (_v0) {
	var meta = _v0.a;
	return meta.hl;
};
var $author$project$Internal$Many$getData = function (_v0) {
	var _v1 = _v0.a;
	var x = _v1.a;
	var xs = _v1.b;
	return $author$project$Internal$Item$getDatum(x);
};
var $author$project$Chart$Item$getOneData = $author$project$Internal$Many$getData;
var $elm$html$Html$Attributes$attribute = $elm$virtual_dom$VirtualDom$attribute;
var $elm$svg$Svg$foreignObject = $elm$svg$Svg$trustedNode('foreignObject');
var $elm$svg$Svg$Attributes$transform = _VirtualDom_attribute('transform');
var $author$project$Internal$Svg$position = F6(
	function (plane, rotation, x_, y_, xOff_, yOff_) {
		return $elm$svg$Svg$Attributes$transform(
			'translate(' + ($elm$core$String$fromFloat(
				A2($author$project$Internal$Coordinates$toSVGX, plane, x_) + xOff_) + (',' + ($elm$core$String$fromFloat(
				A2($author$project$Internal$Coordinates$toSVGY, plane, y_) + yOff_) + (') rotate(' + ($elm$core$String$fromFloat(rotation) + ')'))))));
	});
var $elm$svg$Svg$Attributes$style = _VirtualDom_attribute('style');
var $elm$svg$Svg$text_ = $elm$svg$Svg$trustedNode('text');
var $elm$svg$Svg$tspan = $elm$svg$Svg$trustedNode('tspan');
var $author$project$Internal$Svg$label = F4(
	function (plane, config, inner, point) {
		var _v0 = config.p;
		if (_v0.$ === 1) {
			var withOverflowWrap = function (el) {
				return config.r ? A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[
							$author$project$Internal$Svg$withinChartArea(plane)
						]),
					_List_fromArray(
						[el])) : el;
			};
			var uppercaseStyle = config.w ? 'text-transform: uppercase;' : '';
			var fontStyle = function () {
				var _v5 = config.q;
				if (!_v5.$) {
					var size_ = _v5.a;
					return 'font-size: ' + ($elm$core$String$fromInt(size_) + 'px;');
				} else {
					return '';
				}
			}();
			var anchorStyle = function () {
				var _v1 = config.o;
				if (_v1.$ === 1) {
					return 'text-anchor: middle;';
				} else {
					switch (_v1.a) {
						case 0:
							var _v2 = _v1.a;
							return 'text-anchor: end;';
						case 1:
							var _v3 = _v1.a;
							return 'text-anchor: start;';
						default:
							var _v4 = _v1.a;
							return 'text-anchor: middle;';
					}
				}
			}();
			return withOverflowWrap(
				A4(
					$author$project$Internal$Svg$withAttrs,
					config.i,
					$elm$svg$Svg$text_,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$class('elm-charts__label'),
							$elm$svg$Svg$Attributes$stroke(config.H),
							$elm$svg$Svg$Attributes$strokeWidth(
							$elm$core$String$fromFloat(config.P)),
							$elm$svg$Svg$Attributes$fill(config.d),
							A6($author$project$Internal$Svg$position, plane, -config.u, point.b, point.a, config.m, config.n),
							$elm$svg$Svg$Attributes$style(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									['pointer-events: none;', fontStyle, anchorStyle, uppercaseStyle])))
						]),
					_List_fromArray(
						[
							A2($elm$svg$Svg$tspan, _List_Nil, inner)
						])));
		} else {
			var ellipsis = _v0.a;
			var xOffWithAnchor = function () {
				var _v11 = config.o;
				if (_v11.$ === 1) {
					return config.m - (ellipsis.h / 2);
				} else {
					switch (_v11.a) {
						case 0:
							var _v12 = _v11.a;
							return config.m - ellipsis.h;
						case 1:
							var _v13 = _v11.a;
							return config.m;
						default:
							var _v14 = _v11.a;
							return config.m - (ellipsis.h / 2);
					}
				}
			}();
			var withOverflowWrap = function (el) {
				return config.r ? A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[
							$author$project$Internal$Svg$withinChartArea(plane)
						]),
					_List_fromArray(
						[el])) : el;
			};
			var uppercaseStyle = config.w ? A2($elm$html$Html$Attributes$style, 'text-transform', 'uppercase') : A2($elm$html$Html$Attributes$style, '', '');
			var fontStyle = function () {
				var _v10 = config.q;
				if (!_v10.$) {
					var size_ = _v10.a;
					return A2(
						$elm$html$Html$Attributes$style,
						'font-size',
						$elm$core$String$fromInt(size_) + 'px');
				} else {
					return A2($elm$html$Html$Attributes$style, '', '');
				}
			}();
			var anchorStyle = function () {
				var _v6 = config.o;
				if (_v6.$ === 1) {
					return A2($elm$html$Html$Attributes$style, 'text-align', 'center');
				} else {
					switch (_v6.a) {
						case 0:
							var _v7 = _v6.a;
							return A2($elm$html$Html$Attributes$style, 'text-align', 'right');
						case 1:
							var _v8 = _v6.a;
							return A2($elm$html$Html$Attributes$style, 'text-align', 'left');
						default:
							var _v9 = _v6.a;
							return A2($elm$html$Html$Attributes$style, 'text-align', 'center');
					}
				}
			}();
			return withOverflowWrap(
				A4(
					$author$project$Internal$Svg$withAttrs,
					config.i,
					$elm$svg$Svg$foreignObject,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$class('elm-charts__label'),
							$elm$svg$Svg$Attributes$class('elm-charts__html-label'),
							$elm$svg$Svg$Attributes$width(
							$elm$core$String$fromFloat(ellipsis.h)),
							$elm$svg$Svg$Attributes$height(
							$elm$core$String$fromFloat(ellipsis.U)),
							A6($author$project$Internal$Svg$position, plane, -config.u, point.b, point.a, xOffWithAnchor, config.n - 10)
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$attribute, 'xmlns', 'http://www.w3.org/1999/xhtml'),
									A2($elm$html$Html$Attributes$style, 'white-space', 'nowrap'),
									A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
									A2($elm$html$Html$Attributes$style, 'text-overflow', 'ellipsis'),
									A2($elm$html$Html$Attributes$style, 'height', '100%'),
									A2($elm$html$Html$Attributes$style, 'pointer-events', 'none'),
									A2($elm$html$Html$Attributes$style, 'color', config.d),
									fontStyle,
									uppercaseStyle,
									anchorStyle
								]),
							inner)
						])));
		}
	});
var $author$project$Chart$SvgElement = function (a) {
	return {$: 12, a: a};
};
var $author$project$Chart$svg = function (func) {
	return $author$project$Chart$SvgElement(
		function (p) {
			return func(p);
		});
};
var $elm$svg$Svg$text = $elm$virtual_dom$VirtualDom$text;
var $author$project$Chart$toLabelFromItemLabel = function (config) {
	return {o: config.o, i: config.i, H: config.H, P: config.P, d: config.d, p: config.p, q: config.q, r: config.r, u: config.u, w: config.w, m: config.m, n: config.n};
};
var $author$project$Chart$binLabels = F2(
	function (toLabel, edits) {
		return A2(
			$author$project$Chart$eachCustom,
			A2($author$project$Chart$Item$andThen, $author$project$Chart$Item$bins, $author$project$Chart$Item$bars),
			F2(
				function (p, item) {
					var config = A2($author$project$Internal$Helpers$apply, edits, $author$project$Chart$defaultLabel);
					var text = function () {
						var _v1 = config.I;
						if (!_v1.$) {
							var formatting = _v1.a;
							return formatting(item);
						} else {
							return toLabel(
								$author$project$Chart$Item$getOneData(item));
						}
					}();
					return _List_fromArray(
						[
							$author$project$Chart$svg(
							function (_v0) {
								return A4(
									$author$project$Internal$Svg$label,
									p,
									$author$project$Chart$toLabelFromItemLabel(config),
									_List_fromArray(
										[
											$elm$svg$Svg$text(text)
										]),
									A2(config.F, p, item));
							})
						]);
				}));
	});
var $author$project$Chart$Attributes$borderWidth = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{P: v});
	};
};
var $author$project$Chart$Attributes$break = function (config) {
	return _Utils_update(
		config,
		{g5: true});
};
var $author$project$Internal$Svg$Event = F2(
	function (name, handler) {
		return {fk: handler, dO: name};
	});
var $elm$svg$Svg$clipPath = $elm$svg$Svg$trustedNode('clipPath');
var $elm$json$Json$Decode$map3 = _Json_map3;
var $elm$json$Json$Decode$float = _Json_decodeFloat;
var $debois$elm_dom$DOM$offsetHeight = A2($elm$json$Json$Decode$field, 'offsetHeight', $elm$json$Json$Decode$float);
var $debois$elm_dom$DOM$offsetWidth = A2($elm$json$Json$Decode$field, 'offsetWidth', $elm$json$Json$Decode$float);
var $elm$json$Json$Decode$map4 = _Json_map4;
var $debois$elm_dom$DOM$offsetLeft = A2($elm$json$Json$Decode$field, 'offsetLeft', $elm$json$Json$Decode$float);
var $elm$json$Json$Decode$null = _Json_decodeNull;
var $elm$json$Json$Decode$oneOf = _Json_oneOf;
var $debois$elm_dom$DOM$offsetParent = F2(
	function (x, decoder) {
		return $elm$json$Json$Decode$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$json$Json$Decode$field,
					'offsetParent',
					$elm$json$Json$Decode$null(x)),
					A2($elm$json$Json$Decode$field, 'offsetParent', decoder)
				]));
	});
var $debois$elm_dom$DOM$offsetTop = A2($elm$json$Json$Decode$field, 'offsetTop', $elm$json$Json$Decode$float);
var $debois$elm_dom$DOM$scrollLeft = A2($elm$json$Json$Decode$field, 'scrollLeft', $elm$json$Json$Decode$float);
var $debois$elm_dom$DOM$scrollTop = A2($elm$json$Json$Decode$field, 'scrollTop', $elm$json$Json$Decode$float);
var $debois$elm_dom$DOM$position = F2(
	function (x, y) {
		return A2(
			$elm$json$Json$Decode$andThen,
			function (_v0) {
				var x_ = _v0.a;
				var y_ = _v0.b;
				return A2(
					$debois$elm_dom$DOM$offsetParent,
					_Utils_Tuple2(x_, y_),
					A2($debois$elm_dom$DOM$position, x_, y_));
			},
			A5(
				$elm$json$Json$Decode$map4,
				F4(
					function (scrollLeftP, scrollTopP, offsetLeftP, offsetTopP) {
						return _Utils_Tuple2((x + offsetLeftP) - scrollLeftP, (y + offsetTopP) - scrollTopP);
					}),
				$debois$elm_dom$DOM$scrollLeft,
				$debois$elm_dom$DOM$scrollTop,
				$debois$elm_dom$DOM$offsetLeft,
				$debois$elm_dom$DOM$offsetTop));
	});
var $debois$elm_dom$DOM$boundingClientRect = A4(
	$elm$json$Json$Decode$map3,
	F3(
		function (_v0, width, height) {
			var x = _v0.a;
			var y = _v0.b;
			return {U: height, c2: x, di: y, h: width};
		}),
	A2($debois$elm_dom$DOM$position, 0, 0),
	$debois$elm_dom$DOM$offsetWidth,
	$debois$elm_dom$DOM$offsetHeight);
var $elm$json$Json$Decode$lazy = function (thunk) {
	return A2(
		$elm$json$Json$Decode$andThen,
		thunk,
		$elm$json$Json$Decode$succeed(0));
};
var $debois$elm_dom$DOM$parentElement = function (decoder) {
	return A2($elm$json$Json$Decode$field, 'parentElement', decoder);
};
function $author$project$Internal$Svg$cyclic$decodePosition() {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				$debois$elm_dom$DOM$boundingClientRect,
				$elm$json$Json$Decode$lazy(
				function (_v0) {
					return $debois$elm_dom$DOM$parentElement(
						$author$project$Internal$Svg$cyclic$decodePosition());
				})
			]));
}
var $author$project$Internal$Svg$decodePosition = $author$project$Internal$Svg$cyclic$decodePosition();
$author$project$Internal$Svg$cyclic$decodePosition = function () {
	return $author$project$Internal$Svg$decodePosition;
};
var $author$project$Internal$Coordinates$toCartesianX = F2(
	function (plane, value) {
		return A2($author$project$Internal$Coordinates$scaleCartesianX, plane, value - plane.b.h1) + plane.b.Y;
	});
var $author$project$Internal$Coordinates$toCartesianY = F2(
	function (plane, value) {
		return ($author$project$Internal$Coordinates$range(plane.a) - A2($author$project$Internal$Coordinates$scaleCartesianY, plane, value - plane.a.h1)) + plane.a.Y;
	});
var $author$project$Internal$Svg$fromSvg = F2(
	function (plane, point) {
		return {
			b: A2($author$project$Internal$Coordinates$toCartesianX, plane, point.b),
			a: A2($author$project$Internal$Coordinates$toCartesianY, plane, point.a)
		};
	});
var $debois$elm_dom$DOM$target = function (decoder) {
	return A2($elm$json$Json$Decode$field, 'target', decoder);
};
var $author$project$Internal$Svg$decoder = F2(
	function (plane, toMsg) {
		var handle = F3(
			function (mouseX, mouseY, box) {
				var yPrev = plane.a;
				var xPrev = plane.b;
				var widthPercent = box.h / plane.b.ae;
				var heightPercent = box.U / plane.a.ae;
				var newPlane = _Utils_update(
					plane,
					{
						b: _Utils_update(
							xPrev,
							{ae: box.h, h0: plane.b.h0 * widthPercent, h1: plane.b.h1 * widthPercent}),
						a: _Utils_update(
							yPrev,
							{ae: box.U, h0: plane.a.h0 * heightPercent, h1: plane.a.h1 * heightPercent})
					});
				var searched = A2(
					$author$project$Internal$Svg$fromSvg,
					newPlane,
					{b: mouseX - box.c2, a: mouseY - box.di});
				return A2(toMsg, newPlane, searched);
			});
		return A4(
			$elm$json$Json$Decode$map3,
			handle,
			A2($elm$json$Json$Decode$field, 'pageX', $elm$json$Json$Decode$float),
			A2($elm$json$Json$Decode$field, 'pageY', $elm$json$Json$Decode$float),
			$debois$elm_dom$DOM$target($author$project$Internal$Svg$decodePosition));
	});
var $elm$svg$Svg$Events$on = $elm$html$Html$Events$on;
var $elm$svg$Svg$rect = $elm$svg$Svg$trustedNode('rect');
var $elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');
var $author$project$Internal$Svg$container = F5(
	function (plane, config, below, chartEls, above) {
		var toEvent = function (event) {
			return A2(
				$elm$svg$Svg$Events$on,
				event.dO,
				A2($author$project$Internal$Svg$decoder, plane, event.fk));
		};
		var svgAttrsSize = config.dQ ? _List_fromArray(
			[
				$elm$svg$Svg$Attributes$viewBox(
				'0 0 ' + ($elm$core$String$fromFloat(plane.b.ae) + (' ' + $elm$core$String$fromFloat(plane.a.ae)))),
				A2($elm$html$Html$Attributes$style, 'display', 'block')
			]) : _List_fromArray(
			[
				$elm$svg$Svg$Attributes$width(
				$elm$core$String$fromFloat(plane.b.ae)),
				$elm$svg$Svg$Attributes$height(
				$elm$core$String$fromFloat(plane.a.ae)),
				A2($elm$html$Html$Attributes$style, 'display', 'block')
			]);
		var htmlAttrsSize = config.dQ ? _List_fromArray(
			[
				A2($elm$html$Html$Attributes$style, 'width', '100%'),
				A2($elm$html$Html$Attributes$style, 'height', '100%')
			]) : _List_fromArray(
			[
				A2(
				$elm$html$Html$Attributes$style,
				'width',
				$elm$core$String$fromFloat(plane.b.ae) + 'px'),
				A2(
				$elm$html$Html$Attributes$style,
				'height',
				$elm$core$String$fromFloat(plane.a.ae) + 'px')
			]);
		var htmlAttrsDef = _List_fromArray(
			[
				$elm$html$Html$Attributes$class('elm-charts__container-inner')
			]);
		var htmlAttrs = _Utils_ap(
			config.dI,
			_Utils_ap(htmlAttrsDef, htmlAttrsSize));
		var chartPosition = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$x(
				$elm$core$String$fromFloat(plane.b.h1)),
				$elm$svg$Svg$Attributes$y(
				$elm$core$String$fromFloat(plane.a.h1)),
				$elm$svg$Svg$Attributes$width(
				$elm$core$String$fromFloat(
					$author$project$Internal$Coordinates$innerWidth(plane))),
				$elm$svg$Svg$Attributes$height(
				$elm$core$String$fromFloat(
					$author$project$Internal$Coordinates$innerHeight(plane))),
				$elm$svg$Svg$Attributes$fill('transparent')
			]);
		var clipPathDefs = A2(
			$elm$svg$Svg$defs,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$clipPath,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$id(
							$author$project$Internal$Coordinates$toId(plane))
						]),
					_List_fromArray(
						[
							A2($elm$svg$Svg$rect, chartPosition, _List_Nil)
						]))
				]));
		var catcher = A2(
			$elm$svg$Svg$rect,
			_Utils_ap(
				chartPosition,
				A2($elm$core$List$map, toEvent, config.dF)),
			_List_Nil);
		var chart = A2(
			$elm$svg$Svg$svg,
			_Utils_ap(svgAttrsSize, config.i),
			_Utils_ap(
				_List_fromArray(
					[clipPathDefs]),
				_Utils_ap(
					chartEls,
					_List_fromArray(
						[catcher]))));
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('elm-charts__container'),
					A2($elm$html$Html$Attributes$style, 'position', 'relative')
				]),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					htmlAttrs,
					_Utils_ap(
						below,
						_Utils_ap(
							_List_fromArray(
								[chart]),
							above)))
				]));
	});
var $author$project$Chart$Attributes$lowest = F2(
	function (v, edit) {
		return function (b) {
			return _Utils_update(
				b,
				{
					Y: A3(edit, v, b.Y, b.hk)
				});
		};
	});
var $author$project$Chart$Attributes$orLower = F3(
	function (least, real, _v0) {
		return (_Utils_cmp(real, least) > 0) ? least : real;
	});
var $author$project$Chart$definePlane = F2(
	function (config, elements) {
		var width = A2($elm$core$Basics$max, 1, (config.h - config.ai.c2) - config.ai.c5);
		var toLimit = F5(
			function (length, marginMin, marginMax, min, max) {
				return {hj: max, hk: min, ae: length, h0: marginMax, h1: marginMin, J: max, Y: min};
			});
		var height = A2($elm$core$Basics$max, 1, (config.U - config.ai.a4) - config.ai.di);
		var fixSingles = function (bs) {
			return _Utils_eq(bs.Y, bs.J) ? _Utils_update(
				bs,
				{J: bs.Y + 10}) : bs;
		};
		var collectLimits = F2(
			function (el, acc) {
				switch (el.$) {
					case 0:
						return acc;
					case 1:
						var lims = el.a;
						return _Utils_ap(acc, lims);
					case 2:
						var lims = el.a;
						return _Utils_ap(acc, lims);
					case 3:
						var item = el.a;
						return _Utils_ap(
							acc,
							_List_fromArray(
								[
									$author$project$Internal$Item$getLimits(item)
								]));
					case 4:
						return acc;
					case 5:
						return acc;
					case 6:
						return acc;
					case 7:
						return acc;
					case 8:
						return acc;
					case 9:
						return acc;
					case 10:
						return acc;
					case 11:
						var subs = el.a;
						return A3($elm$core$List$foldl, collectLimits, acc, subs);
					case 12:
						return acc;
					default:
						return acc;
				}
			});
		var limits_ = function (pos) {
			return function (_v3) {
				var x = _v3.b;
				var y = _v3.a;
				return {
					b: fixSingles(x),
					a: fixSingles(y)
				};
			}(
				{
					b: A5(toLimit, width, config.aE.c2, config.aE.c5, pos.a1, pos.dm),
					a: A5(toLimit, height, config.aE.di, config.aE.a4, pos.jx, pos.eP)
				});
		}(
			A2(
				$author$project$Internal$Coordinates$foldPosition,
				$elm$core$Basics$identity,
				A3($elm$core$List$foldl, collectLimits, _List_Nil, elements)));
		var calcRange = function () {
			var _v2 = config.ex;
			if (!_v2.b) {
				return limits_.b;
			} else {
				var some = _v2;
				return A2($author$project$Internal$Helpers$apply, some, limits_.b);
			}
		}();
		var calcDomain = function () {
			var _v1 = config.d9;
			if (!_v1.b) {
				return A2(
					$author$project$Internal$Helpers$apply,
					_List_fromArray(
						[
							A2($author$project$Chart$Attributes$lowest, 0, $author$project$Chart$Attributes$orLower)
						]),
					limits_.a);
			} else {
				var some = _v1;
				return A2($author$project$Internal$Helpers$apply, some, limits_.a);
			}
		}();
		var unpadded = {b: calcRange, a: calcDomain};
		var scalePadX = $author$project$Internal$Coordinates$scaleCartesianX(unpadded);
		var xMax = calcRange.J + scalePadX(config.ai.c5);
		var xMin = calcRange.Y - scalePadX(config.ai.c2);
		var scalePadY = $author$project$Internal$Coordinates$scaleCartesianY(unpadded);
		var yMax = calcDomain.J + scalePadY(config.ai.di);
		var yMin = calcDomain.Y - scalePadY(config.ai.a4);
		return {
			b: _Utils_update(
				calcRange,
				{
					ae: config.h,
					J: A2($elm$core$Basics$max, xMin, xMax),
					Y: A2($elm$core$Basics$min, xMin, xMax)
				}),
			a: _Utils_update(
				calcDomain,
				{
					ae: config.U,
					J: A2($elm$core$Basics$max, yMin, yMax),
					Y: A2($elm$core$Basics$min, yMin, yMax)
				})
		};
	});
var $author$project$Chart$getItems = F2(
	function (plane, elements) {
		var toItems = F2(
			function (el, acc) {
				switch (el.$) {
					case 0:
						return acc;
					case 1:
						var items = el.b;
						return _Utils_ap(acc, items);
					case 2:
						var items = el.b;
						return _Utils_ap(acc, items);
					case 3:
						var item = el.a;
						return _Utils_ap(
							acc,
							_List_fromArray(
								[item]));
					case 4:
						var func = el.a;
						return acc;
					case 5:
						return acc;
					case 6:
						return acc;
					case 7:
						return acc;
					case 8:
						return acc;
					case 9:
						return acc;
					case 10:
						return acc;
					case 11:
						var subs = el.a;
						return A3($elm$core$List$foldl, toItems, acc, subs);
					case 12:
						return acc;
					default:
						return acc;
				}
			});
		return A3($elm$core$List$foldl, toItems, _List_Nil, elements);
	});
var $author$project$Chart$getLegends = function (elements) {
	var toLegends = F2(
		function (el, acc) {
			switch (el.$) {
				case 0:
					return acc;
				case 1:
					var legends_ = el.c;
					return _Utils_ap(acc, legends_);
				case 2:
					var legends_ = el.c;
					return _Utils_ap(acc, legends_);
				case 3:
					return acc;
				case 4:
					return acc;
				case 5:
					return acc;
				case 6:
					return acc;
				case 7:
					return acc;
				case 8:
					return acc;
				case 9:
					return acc;
				case 10:
					return acc;
				case 11:
					var subs = el.a;
					return A3($elm$core$List$foldl, toLegends, acc, subs);
				case 12:
					return acc;
				default:
					return acc;
			}
		});
	return A3($elm$core$List$foldl, toLegends, _List_Nil, elements);
};
var $author$project$Chart$TickValues = F4(
	function (xAxis, yAxis, xs, ys) {
		return {dn: xAxis, O: xs, $7: yAxis, _: ys};
	});
var $author$project$Chart$getTickValues = F3(
	function (plane, items, elements) {
		var toValues = F2(
			function (el, acc) {
				switch (el.$) {
					case 0:
						return acc;
					case 1:
						return acc;
					case 2:
						var func = el.d;
						return A2(func, plane, acc);
					case 3:
						return acc;
					case 4:
						var func = el.a;
						return A2(func, plane, acc);
					case 5:
						var func = el.a;
						return A2(func, plane, acc);
					case 6:
						var toC = el.a;
						var func = el.b;
						return A3(
							func,
							plane,
							toC(plane),
							acc);
					case 7:
						var toC = el.a;
						var func = el.b;
						return A3(
							func,
							plane,
							toC(plane),
							acc);
					case 8:
						var toC = el.a;
						var func = el.b;
						return A3(
							func,
							plane,
							toC(plane),
							acc);
					case 10:
						var func = el.a;
						return A3(
							$elm$core$List$foldl,
							toValues,
							acc,
							A2(func, plane, items));
					case 9:
						return acc;
					case 11:
						var subs = el.a;
						return A3($elm$core$List$foldl, toValues, acc, subs);
					case 12:
						return acc;
					default:
						return acc;
				}
			});
		return A3(
			$elm$core$List$foldl,
			toValues,
			A4($author$project$Chart$TickValues, _List_Nil, _List_Nil, _List_Nil, _List_Nil),
			elements);
	});
var $author$project$Chart$GridElement = function (a) {
	return {$: 9, a: a};
};
var $author$project$Internal$Svg$Circle = 0;
var $author$project$Chart$Attributes$circle = function (config) {
	return _Utils_update(
		config,
		{
			aW: $elm$core$Maybe$Just(0)
		});
};
var $author$project$Internal$Helpers$darkGray = 'rgb(200 200 200)';
var $author$project$Chart$Attributes$dashed = function (value) {
	return function (config) {
		return _Utils_update(
			config,
			{dB: value});
	};
};
var $author$project$Internal$Svg$defaultDot = {H: '', P: 0, d: $author$project$Internal$Helpers$pink, r: false, hE: 0, hF: '', hG: 5, ag: 1, aW: $elm$core$Maybe$Nothing, iD: 6};
var $author$project$Internal$Svg$isWithinPlane = F3(
	function (plane, x, y) {
		return _Utils_eq(
			A3($elm$core$Basics$clamp, plane.b.Y, plane.b.J, x),
			x) && _Utils_eq(
			A3($elm$core$Basics$clamp, plane.a.Y, plane.a.J, y),
			y);
	});
var $elm$core$Basics$pi = _Basics_pi;
var $elm$core$Basics$sqrt = _Basics_sqrt;
var $author$project$Internal$Svg$plusPath = F4(
	function (area_, off, x_, y_) {
		var side = $elm$core$Basics$sqrt(area_ / 4) + off;
		var r6 = side / 2;
		var r3 = side;
		return A2(
			$elm$core$String$join,
			' ',
			_List_fromArray(
				[
					'M' + ($elm$core$String$fromFloat(x_ - r6) + (' ' + $elm$core$String$fromFloat(((y_ - r3) - r6) + off))),
					'v' + $elm$core$String$fromFloat(r3 - off),
					'h' + $elm$core$String$fromFloat((-r3) + off),
					'v' + $elm$core$String$fromFloat(r3),
					'h' + $elm$core$String$fromFloat(r3 - off),
					'v' + $elm$core$String$fromFloat(r3 - off),
					'h' + $elm$core$String$fromFloat(r3),
					'v' + $elm$core$String$fromFloat((-r3) + off),
					'h' + $elm$core$String$fromFloat(r3 - off),
					'v' + $elm$core$String$fromFloat(-r3),
					'h' + $elm$core$String$fromFloat((-r3) + off),
					'v' + $elm$core$String$fromFloat((-r3) + off),
					'h' + $elm$core$String$fromFloat(-r3),
					'v' + $elm$core$String$fromFloat(r3 - off)
				]));
	});
var $elm$core$Basics$degrees = function (angleInDegrees) {
	return (angleInDegrees * $elm$core$Basics$pi) / 180;
};
var $elm$core$Basics$tan = _Basics_tan;
var $author$project$Internal$Svg$trianglePath = F4(
	function (area_, off, x_, y_) {
		var side = $elm$core$Basics$sqrt(
			(area_ * 4) / $elm$core$Basics$sqrt(3)) + (off * $elm$core$Basics$sqrt(3));
		var height = ($elm$core$Basics$sqrt(3) * side) / 2;
		var fromMiddle = height - (($elm$core$Basics$tan(
			$elm$core$Basics$degrees(30)) * side) / 2);
		return A2(
			$elm$core$String$join,
			' ',
			_List_fromArray(
				[
					'M' + ($elm$core$String$fromFloat(x_) + (' ' + $elm$core$String$fromFloat(y_ - fromMiddle))),
					'l' + ($elm$core$String$fromFloat((-side) / 2) + (' ' + $elm$core$String$fromFloat(height))),
					'h' + $elm$core$String$fromFloat(side),
					'z'
				]));
	});
var $author$project$Internal$Svg$dot = F5(
	function (plane, toX, toY, config, datum_) {
		var yOrg = toY(datum_);
		var y_ = A2($author$project$Internal$Coordinates$toSVGY, plane, yOrg);
		var xOrg = toX(datum_);
		var x_ = A2($author$project$Internal$Coordinates$toSVGX, plane, xOrg);
		var styleAttrs = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$stroke(
				(config.H === '') ? config.d : config.H),
				$elm$svg$Svg$Attributes$strokeWidth(
				$elm$core$String$fromFloat(config.P)),
				$elm$svg$Svg$Attributes$fillOpacity(
				$elm$core$String$fromFloat(config.ag)),
				$elm$svg$Svg$Attributes$fill(config.d),
				$elm$svg$Svg$Attributes$class('elm-charts__dot'),
				config.r ? $author$project$Internal$Svg$withinChartArea(plane) : $elm$svg$Svg$Attributes$class('')
			]);
		var showDot = A3($author$project$Internal$Svg$isWithinPlane, plane, xOrg, yOrg) || config.r;
		var highlightColor = (config.hF === '') ? config.d : config.hF;
		var highlightAttrs = _List_fromArray(
			[
				$elm$svg$Svg$Attributes$stroke(highlightColor),
				$elm$svg$Svg$Attributes$strokeWidth(
				$elm$core$String$fromFloat(config.hG)),
				$elm$svg$Svg$Attributes$strokeOpacity(
				$elm$core$String$fromFloat(config.hE)),
				$elm$svg$Svg$Attributes$fill('transparent'),
				$elm$svg$Svg$Attributes$class('elm-charts__dot-highlight')
			]);
		var view = F3(
			function (toEl, highlightOff, toAttrs) {
				return (config.hE > 0) ? A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$class('elm-charts__dot-container')
						]),
					_List_fromArray(
						[
							A2(
							toEl,
							_Utils_ap(
								toAttrs(highlightOff),
								highlightAttrs),
							_List_Nil),
							A2(
							toEl,
							_Utils_ap(
								toAttrs(0),
								styleAttrs),
							_List_Nil)
						])) : A2(
					toEl,
					_Utils_ap(
						toAttrs(0),
						styleAttrs),
					_List_Nil);
			});
		var area_ = (2 * $elm$core$Basics$pi) * config.iD;
		if (!showDot) {
			return $elm$svg$Svg$text('');
		} else {
			var _v0 = config.aW;
			if (_v0.$ === 1) {
				return $elm$svg$Svg$text('');
			} else {
				switch (_v0.a) {
					case 0:
						var _v1 = _v0.a;
						return A3(
							view,
							$elm$svg$Svg$circle,
							config.hG / 2,
							function (off) {
								var radius = $elm$core$Basics$sqrt(area_ / $elm$core$Basics$pi);
								return _List_fromArray(
									[
										$elm$svg$Svg$Attributes$cx(
										$elm$core$String$fromFloat(x_)),
										$elm$svg$Svg$Attributes$cy(
										$elm$core$String$fromFloat(y_)),
										$elm$svg$Svg$Attributes$r(
										$elm$core$String$fromFloat(radius + off))
									]);
							});
					case 1:
						var _v2 = _v0.a;
						return A3(
							view,
							$elm$svg$Svg$path,
							config.hG,
							function (off) {
								return _List_fromArray(
									[
										$elm$svg$Svg$Attributes$d(
										A4($author$project$Internal$Svg$trianglePath, area_, off, x_, y_))
									]);
							});
					case 2:
						var _v3 = _v0.a;
						return A3(
							view,
							$elm$svg$Svg$rect,
							config.hG,
							function (off) {
								var side = $elm$core$Basics$sqrt(area_);
								var sideOff = side + off;
								return _List_fromArray(
									[
										$elm$svg$Svg$Attributes$x(
										$elm$core$String$fromFloat(x_ - (sideOff / 2))),
										$elm$svg$Svg$Attributes$y(
										$elm$core$String$fromFloat(y_ - (sideOff / 2))),
										$elm$svg$Svg$Attributes$width(
										$elm$core$String$fromFloat(sideOff)),
										$elm$svg$Svg$Attributes$height(
										$elm$core$String$fromFloat(sideOff))
									]);
							});
					case 3:
						var _v4 = _v0.a;
						return A3(
							view,
							$elm$svg$Svg$rect,
							config.hG,
							function (off) {
								var side = $elm$core$Basics$sqrt(area_);
								var sideOff = side + off;
								return _List_fromArray(
									[
										$elm$svg$Svg$Attributes$x(
										$elm$core$String$fromFloat(x_ - (sideOff / 2))),
										$elm$svg$Svg$Attributes$y(
										$elm$core$String$fromFloat(y_ - (sideOff / 2))),
										$elm$svg$Svg$Attributes$width(
										$elm$core$String$fromFloat(sideOff)),
										$elm$svg$Svg$Attributes$height(
										$elm$core$String$fromFloat(sideOff)),
										$elm$svg$Svg$Attributes$transform(
										'rotate(45 ' + ($elm$core$String$fromFloat(x_) + (' ' + ($elm$core$String$fromFloat(y_) + ')'))))
									]);
							});
					case 4:
						var _v5 = _v0.a;
						return A3(
							view,
							$elm$svg$Svg$path,
							config.hG,
							function (off) {
								return _List_fromArray(
									[
										$elm$svg$Svg$Attributes$d(
										A4($author$project$Internal$Svg$plusPath, area_, off, x_, y_)),
										$elm$svg$Svg$Attributes$transform(
										'rotate(45 ' + ($elm$core$String$fromFloat(x_) + (' ' + ($elm$core$String$fromFloat(y_) + ')'))))
									]);
							});
					default:
						var _v6 = _v0.a;
						return A3(
							view,
							$elm$svg$Svg$path,
							config.hG,
							function (off) {
								return _List_fromArray(
									[
										$elm$svg$Svg$Attributes$d(
										A4($author$project$Internal$Svg$plusPath, area_, off, x_, y_))
									]);
							});
				}
			}
		}
	});
var $author$project$Chart$Svg$dot = F4(
	function (plane, toX, toY, edits) {
		return A4(
			$author$project$Internal$Svg$dot,
			plane,
			toX,
			toY,
			A2($author$project$Internal$Helpers$apply, edits, $author$project$Internal$Svg$defaultDot));
	});
var $author$project$Internal$Helpers$gray = '#EFF2FA';
var $author$project$Internal$Svg$defaultLine = {i: _List_Nil, g5: false, d: 'rgb(210, 210, 210)', dB: _List_Nil, j: false, r: false, ag: 1, i2: -90, i3: 0, h: 1, a1: $elm$core$Maybe$Nothing, dm: $elm$core$Maybe$Nothing, jw: $elm$core$Maybe$Nothing, m: 0, jx: $elm$core$Maybe$Nothing, eP: $elm$core$Maybe$Nothing, jy: $elm$core$Maybe$Nothing, n: 0};
var $elm$core$Basics$cos = _Basics_cos;
var $author$project$Internal$Svg$lengthInCartesianX = $author$project$Internal$Coordinates$scaleCartesianX;
var $author$project$Internal$Svg$lengthInCartesianY = $author$project$Internal$Coordinates$scaleCartesianY;
var $elm$core$Basics$sin = _Basics_sin;
var $elm$svg$Svg$Attributes$strokeDasharray = _VirtualDom_attribute('stroke-dasharray');
var $author$project$Internal$Svg$line = F2(
	function (plane, config) {
		var angle = $elm$core$Basics$degrees(config.i2);
		var _v0 = function () {
			var _v3 = _Utils_Tuple3(
				_Utils_Tuple2(config.a1, config.dm),
				_Utils_Tuple2(config.jx, config.eP),
				_Utils_Tuple2(config.jw, config.jy));
			if (!_v3.a.a.$) {
				if (!_v3.a.b.$) {
					if (_v3.b.a.$ === 1) {
						if (_v3.b.b.$ === 1) {
							var _v4 = _v3.a;
							var a = _v4.a.a;
							var b = _v4.b.a;
							var _v5 = _v3.b;
							var _v6 = _v5.a;
							var _v7 = _v5.b;
							return _Utils_Tuple2(
								_Utils_Tuple2(a, b),
								_Utils_Tuple2(plane.a.Y, plane.a.Y));
						} else {
							var _v38 = _v3.a;
							var a = _v38.a.a;
							var b = _v38.b.a;
							var _v39 = _v3.b;
							var _v40 = _v39.a;
							var c = _v39.b.a;
							return _Utils_Tuple2(
								_Utils_Tuple2(a, b),
								_Utils_Tuple2(c, c));
						}
					} else {
						if (_v3.b.b.$ === 1) {
							var _v41 = _v3.a;
							var a = _v41.a.a;
							var b = _v41.b.a;
							var _v42 = _v3.b;
							var c = _v42.a.a;
							var _v43 = _v42.b;
							return _Utils_Tuple2(
								_Utils_Tuple2(a, b),
								_Utils_Tuple2(c, c));
						} else {
							return _Utils_Tuple2(
								_Utils_Tuple2(
									A2($elm$core$Maybe$withDefault, plane.b.Y, config.a1),
									A2($elm$core$Maybe$withDefault, plane.b.J, config.dm)),
								_Utils_Tuple2(
									A2($elm$core$Maybe$withDefault, plane.a.Y, config.jx),
									A2($elm$core$Maybe$withDefault, plane.a.J, config.eP)));
						}
					}
				} else {
					if (_v3.b.a.$ === 1) {
						if (_v3.b.b.$ === 1) {
							var _v8 = _v3.a;
							var a = _v8.a.a;
							var _v9 = _v8.b;
							var _v10 = _v3.b;
							var _v11 = _v10.a;
							var _v12 = _v10.b;
							return _Utils_Tuple2(
								_Utils_Tuple2(a, a),
								_Utils_Tuple2(plane.a.Y, plane.a.J));
						} else {
							if (!_v3.c.a.$) {
								if (!_v3.c.b.$) {
									var _v51 = _v3.a;
									var a = _v51.a.a;
									var _v52 = _v51.b;
									var _v53 = _v3.b;
									var _v54 = _v53.a;
									var b = _v53.b.a;
									var _v55 = _v3.c;
									var xOff = _v55.a.a;
									var yOff = _v55.b.a;
									return _Utils_Tuple2(
										_Utils_Tuple2(
											a,
											a + A2($author$project$Internal$Coordinates$scaleCartesianX, plane, xOff)),
										_Utils_Tuple2(
											b,
											b + A2($author$project$Internal$Coordinates$scaleCartesianY, plane, yOff)));
								} else {
									var _v56 = _v3.a;
									var a = _v56.a.a;
									var _v57 = _v56.b;
									var _v58 = _v3.b;
									var _v59 = _v58.a;
									var b = _v58.b.a;
									var _v60 = _v3.c;
									var xOff = _v60.a.a;
									var _v61 = _v60.b;
									return _Utils_Tuple2(
										_Utils_Tuple2(
											a,
											a + A2($author$project$Internal$Coordinates$scaleCartesianX, plane, xOff)),
										_Utils_Tuple2(b, b));
								}
							} else {
								if (_v3.c.b.$ === 1) {
									var _v44 = _v3.a;
									var a = _v44.a.a;
									var _v45 = _v44.b;
									var _v46 = _v3.b;
									var _v47 = _v46.a;
									var b = _v46.b.a;
									var _v48 = _v3.c;
									var _v49 = _v48.a;
									var _v50 = _v48.b;
									return _Utils_Tuple2(
										_Utils_Tuple2(a, plane.b.J),
										_Utils_Tuple2(b, b));
								} else {
									var _v62 = _v3.a;
									var a = _v62.a.a;
									var _v63 = _v62.b;
									var _v64 = _v3.b;
									var _v65 = _v64.a;
									var b = _v64.b.a;
									var _v66 = _v3.c;
									var _v67 = _v66.a;
									var yOff = _v66.b.a;
									return _Utils_Tuple2(
										_Utils_Tuple2(a, a),
										_Utils_Tuple2(
											b,
											b + A2($author$project$Internal$Coordinates$scaleCartesianY, plane, yOff)));
								}
							}
						}
					} else {
						if (!_v3.b.b.$) {
							var _v35 = _v3.a;
							var c = _v35.a.a;
							var _v36 = _v35.b;
							var _v37 = _v3.b;
							var a = _v37.a.a;
							var b = _v37.b.a;
							return _Utils_Tuple2(
								_Utils_Tuple2(c, c),
								_Utils_Tuple2(a, b));
						} else {
							if (!_v3.c.a.$) {
								if (!_v3.c.b.$) {
									var _v75 = _v3.a;
									var a = _v75.a.a;
									var _v76 = _v75.b;
									var _v77 = _v3.b;
									var b = _v77.a.a;
									var _v78 = _v77.b;
									var _v79 = _v3.c;
									var xOff = _v79.a.a;
									var yOff = _v79.b.a;
									return _Utils_Tuple2(
										_Utils_Tuple2(
											a,
											a + A2($author$project$Internal$Coordinates$scaleCartesianX, plane, xOff)),
										_Utils_Tuple2(
											b,
											b + A2($author$project$Internal$Coordinates$scaleCartesianY, plane, yOff)));
								} else {
									var _v80 = _v3.a;
									var a = _v80.a.a;
									var _v81 = _v80.b;
									var _v82 = _v3.b;
									var b = _v82.a.a;
									var _v83 = _v82.b;
									var _v84 = _v3.c;
									var xOff = _v84.a.a;
									var _v85 = _v84.b;
									return _Utils_Tuple2(
										_Utils_Tuple2(
											a,
											a + A2($author$project$Internal$Coordinates$scaleCartesianX, plane, xOff)),
										_Utils_Tuple2(b, b));
								}
							} else {
								if (_v3.c.b.$ === 1) {
									var _v68 = _v3.a;
									var a = _v68.a.a;
									var _v69 = _v68.b;
									var _v70 = _v3.b;
									var b = _v70.a.a;
									var _v71 = _v70.b;
									var _v72 = _v3.c;
									var _v73 = _v72.a;
									var _v74 = _v72.b;
									return _Utils_Tuple2(
										_Utils_Tuple2(a, plane.b.J),
										_Utils_Tuple2(b, b));
								} else {
									var _v86 = _v3.a;
									var a = _v86.a.a;
									var _v87 = _v86.b;
									var _v88 = _v3.b;
									var b = _v88.a.a;
									var _v89 = _v88.b;
									var _v90 = _v3.c;
									var _v91 = _v90.a;
									var yOff = _v90.b.a;
									return _Utils_Tuple2(
										_Utils_Tuple2(a, a),
										_Utils_Tuple2(
											b,
											b + A2($author$project$Internal$Coordinates$scaleCartesianY, plane, yOff)));
								}
							}
						}
					}
				}
			} else {
				if (!_v3.a.b.$) {
					if (_v3.b.a.$ === 1) {
						if (_v3.b.b.$ === 1) {
							var _v13 = _v3.a;
							var _v14 = _v13.a;
							var b = _v13.b.a;
							var _v15 = _v3.b;
							var _v16 = _v15.a;
							var _v17 = _v15.b;
							return _Utils_Tuple2(
								_Utils_Tuple2(b, b),
								_Utils_Tuple2(plane.a.Y, plane.a.J));
						} else {
							if (!_v3.c.a.$) {
								if (!_v3.c.b.$) {
									var _v99 = _v3.a;
									var _v100 = _v99.a;
									var a = _v99.b.a;
									var _v101 = _v3.b;
									var _v102 = _v101.a;
									var b = _v101.b.a;
									var _v103 = _v3.c;
									var xOff = _v103.a.a;
									var yOff = _v103.b.a;
									return _Utils_Tuple2(
										_Utils_Tuple2(
											a,
											a + A2($author$project$Internal$Coordinates$scaleCartesianX, plane, xOff)),
										_Utils_Tuple2(
											b,
											b + A2($author$project$Internal$Coordinates$scaleCartesianY, plane, yOff)));
								} else {
									var _v104 = _v3.a;
									var _v105 = _v104.a;
									var a = _v104.b.a;
									var _v106 = _v3.b;
									var _v107 = _v106.a;
									var b = _v106.b.a;
									var _v108 = _v3.c;
									var xOff = _v108.a.a;
									var _v109 = _v108.b;
									return _Utils_Tuple2(
										_Utils_Tuple2(
											a,
											a + A2($author$project$Internal$Coordinates$scaleCartesianX, plane, xOff)),
										_Utils_Tuple2(b, b));
								}
							} else {
								if (_v3.c.b.$ === 1) {
									var _v92 = _v3.a;
									var _v93 = _v92.a;
									var a = _v92.b.a;
									var _v94 = _v3.b;
									var _v95 = _v94.a;
									var b = _v94.b.a;
									var _v96 = _v3.c;
									var _v97 = _v96.a;
									var _v98 = _v96.b;
									return _Utils_Tuple2(
										_Utils_Tuple2(a, plane.b.J),
										_Utils_Tuple2(b, b));
								} else {
									var _v110 = _v3.a;
									var _v111 = _v110.a;
									var a = _v110.b.a;
									var _v112 = _v3.b;
									var _v113 = _v112.a;
									var b = _v112.b.a;
									var _v114 = _v3.c;
									var _v115 = _v114.a;
									var yOff = _v114.b.a;
									return _Utils_Tuple2(
										_Utils_Tuple2(a, a),
										_Utils_Tuple2(
											b,
											b + A2($author$project$Internal$Coordinates$scaleCartesianY, plane, yOff)));
								}
							}
						}
					} else {
						if (!_v3.b.b.$) {
							var _v32 = _v3.a;
							var _v33 = _v32.a;
							var c = _v32.b.a;
							var _v34 = _v3.b;
							var a = _v34.a.a;
							var b = _v34.b.a;
							return _Utils_Tuple2(
								_Utils_Tuple2(c, c),
								_Utils_Tuple2(a, b));
						} else {
							if (!_v3.c.a.$) {
								if (!_v3.c.b.$) {
									var _v123 = _v3.a;
									var _v124 = _v123.a;
									var a = _v123.b.a;
									var _v125 = _v3.b;
									var b = _v125.a.a;
									var _v126 = _v125.b;
									var _v127 = _v3.c;
									var xOff = _v127.a.a;
									var yOff = _v127.b.a;
									return _Utils_Tuple2(
										_Utils_Tuple2(
											a,
											a + A2($author$project$Internal$Coordinates$scaleCartesianX, plane, xOff)),
										_Utils_Tuple2(
											b,
											b + A2($author$project$Internal$Coordinates$scaleCartesianY, plane, yOff)));
								} else {
									var _v128 = _v3.a;
									var _v129 = _v128.a;
									var a = _v128.b.a;
									var _v130 = _v3.b;
									var b = _v130.a.a;
									var _v131 = _v130.b;
									var _v132 = _v3.c;
									var xOff = _v132.a.a;
									var _v133 = _v132.b;
									return _Utils_Tuple2(
										_Utils_Tuple2(
											a,
											a + A2($author$project$Internal$Coordinates$scaleCartesianX, plane, xOff)),
										_Utils_Tuple2(b, b));
								}
							} else {
								if (_v3.c.b.$ === 1) {
									var _v116 = _v3.a;
									var _v117 = _v116.a;
									var a = _v116.b.a;
									var _v118 = _v3.b;
									var b = _v118.a.a;
									var _v119 = _v118.b;
									var _v120 = _v3.c;
									var _v121 = _v120.a;
									var _v122 = _v120.b;
									return _Utils_Tuple2(
										_Utils_Tuple2(a, plane.b.J),
										_Utils_Tuple2(b, b));
								} else {
									var _v134 = _v3.a;
									var _v135 = _v134.a;
									var a = _v134.b.a;
									var _v136 = _v3.b;
									var b = _v136.a.a;
									var _v137 = _v136.b;
									var _v138 = _v3.c;
									var _v139 = _v138.a;
									var yOff = _v138.b.a;
									return _Utils_Tuple2(
										_Utils_Tuple2(a, a),
										_Utils_Tuple2(
											b,
											b + A2($author$project$Internal$Coordinates$scaleCartesianY, plane, yOff)));
								}
							}
						}
					}
				} else {
					if (!_v3.b.a.$) {
						if (!_v3.b.b.$) {
							var _v18 = _v3.a;
							var _v19 = _v18.a;
							var _v20 = _v18.b;
							var _v21 = _v3.b;
							var a = _v21.a.a;
							var b = _v21.b.a;
							return _Utils_Tuple2(
								_Utils_Tuple2(plane.b.Y, plane.b.Y),
								_Utils_Tuple2(a, b));
						} else {
							var _v22 = _v3.a;
							var _v23 = _v22.a;
							var _v24 = _v22.b;
							var _v25 = _v3.b;
							var a = _v25.a.a;
							var _v26 = _v25.b;
							return _Utils_Tuple2(
								_Utils_Tuple2(plane.b.Y, plane.b.J),
								_Utils_Tuple2(a, a));
						}
					} else {
						if (!_v3.b.b.$) {
							var _v27 = _v3.a;
							var _v28 = _v27.a;
							var _v29 = _v27.b;
							var _v30 = _v3.b;
							var _v31 = _v30.a;
							var b = _v30.b.a;
							return _Utils_Tuple2(
								_Utils_Tuple2(plane.b.Y, plane.b.J),
								_Utils_Tuple2(b, b));
						} else {
							var _v140 = _v3.a;
							var _v141 = _v140.a;
							var _v142 = _v140.b;
							var _v143 = _v3.b;
							var _v144 = _v143.a;
							var _v145 = _v143.b;
							return _Utils_Tuple2(
								_Utils_Tuple2(plane.b.Y, plane.b.J),
								_Utils_Tuple2(plane.a.Y, plane.a.J));
						}
					}
				}
			}
		}();
		var _v1 = _v0.a;
		var x1 = _v1.a;
		var x2 = _v1.b;
		var _v2 = _v0.b;
		var y1 = _v2.a;
		var y2 = _v2.b;
		var x1_ = x1 + A2($author$project$Internal$Svg$lengthInCartesianX, plane, config.m);
		var x2_ = x2 + A2($author$project$Internal$Svg$lengthInCartesianX, plane, config.m);
		var y1_ = y1 - A2($author$project$Internal$Svg$lengthInCartesianY, plane, config.n);
		var y2_ = y2 - A2($author$project$Internal$Svg$lengthInCartesianY, plane, config.n);
		var _v146 = (config.i3 > 0) ? _Utils_Tuple2(
			A2(
				$author$project$Internal$Svg$lengthInCartesianX,
				plane,
				$elm$core$Basics$cos(angle) * config.i3),
			A2(
				$author$project$Internal$Svg$lengthInCartesianY,
				plane,
				$elm$core$Basics$sin(angle) * config.i3)) : _Utils_Tuple2(0, 0);
		var tickOffsetX = _v146.a;
		var tickOffsetY = _v146.b;
		var cmds = config.j ? _Utils_ap(
			(config.i3 > 0) ? _List_fromArray(
				[
					A2($author$project$Internal$Commands$Move, x2_ + tickOffsetX, y2_ + tickOffsetY),
					A2($author$project$Internal$Commands$Line, x2_, y2_)
				]) : _List_fromArray(
				[
					A2($author$project$Internal$Commands$Move, x2_, y2_)
				]),
			_Utils_ap(
				config.g5 ? _List_fromArray(
					[
						A2($author$project$Internal$Commands$Line, x2_, y1_),
						A2($author$project$Internal$Commands$Line, x1_, y1_)
					]) : _List_fromArray(
					[
						A2($author$project$Internal$Commands$Line, x1_, y1_)
					]),
				(config.i3 > 0) ? _List_fromArray(
					[
						A2($author$project$Internal$Commands$Line, x1_ + tickOffsetX, y1_ + tickOffsetY)
					]) : _List_Nil)) : _Utils_ap(
			(config.i3 > 0) ? _List_fromArray(
				[
					A2($author$project$Internal$Commands$Move, x1_ + tickOffsetX, y1_ + tickOffsetY),
					A2($author$project$Internal$Commands$Line, x1_, y1_)
				]) : _List_fromArray(
				[
					A2($author$project$Internal$Commands$Move, x1_, y1_)
				]),
			_Utils_ap(
				config.g5 ? _List_fromArray(
					[
						A2($author$project$Internal$Commands$Line, x1_, y2_),
						A2($author$project$Internal$Commands$Line, x2_, y2_)
					]) : _List_fromArray(
					[
						A2($author$project$Internal$Commands$Line, x2_, y2_)
					]),
				(config.i3 > 0) ? _List_fromArray(
					[
						A2($author$project$Internal$Commands$Line, x2_ + tickOffsetX, y2_ + tickOffsetY)
					]) : _List_Nil));
		return A4(
			$author$project$Internal$Svg$withAttrs,
			config.i,
			$elm$svg$Svg$path,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('elm-charts__line'),
					$elm$svg$Svg$Attributes$fill('transparent'),
					$elm$svg$Svg$Attributes$stroke(config.d),
					$elm$svg$Svg$Attributes$strokeWidth(
					$elm$core$String$fromFloat(config.h)),
					$elm$svg$Svg$Attributes$strokeOpacity(
					$elm$core$String$fromFloat(config.ag)),
					$elm$svg$Svg$Attributes$strokeDasharray(
					A2(
						$elm$core$String$join,
						' ',
						A2($elm$core$List$map, $elm$core$String$fromFloat, config.dB))),
					$elm$svg$Svg$Attributes$d(
					A2($author$project$Internal$Commands$description, plane, cmds)),
					config.r ? $author$project$Internal$Svg$withinChartArea(plane) : $elm$svg$Svg$Attributes$class('')
				]),
			_List_Nil);
	});
var $author$project$Chart$Svg$line = F2(
	function (plane, edits) {
		return A2(
			$author$project$Internal$Svg$line,
			plane,
			A2($author$project$Internal$Helpers$apply, edits, $author$project$Internal$Svg$defaultLine));
	});
var $elm$core$List$member = F2(
	function (x, xs) {
		return A2(
			$elm$core$List$any,
			function (a) {
				return _Utils_eq(a, x);
			},
			xs);
	});
var $author$project$Chart$Attributes$size = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{iD: v});
	};
};
var $author$project$Chart$Attributes$width = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{h: v});
	};
};
var $author$project$Chart$Attributes$x1 = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{
				a1: $elm$core$Maybe$Just(v)
			});
	};
};
var $author$project$Chart$Attributes$y1 = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{
				jx: $elm$core$Maybe$Just(v)
			});
	};
};
var $author$project$Chart$grid = function (edits) {
	var config = A2(
		$author$project$Internal$Helpers$apply,
		edits,
		{d: '', dB: _List_Nil, bg: false, h: 0});
	var width = (!config.h) ? (config.bg ? 0.5 : 1) : config.h;
	var color = $elm$core$String$isEmpty(config.d) ? (config.bg ? $author$project$Internal$Helpers$darkGray : $author$project$Internal$Helpers$gray) : config.d;
	var toDot = F4(
		function (vs, p, x, y) {
			return (A2($elm$core$List$member, x, vs.dn) || A2($elm$core$List$member, y, vs.$7)) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
				A5(
					$author$project$Chart$Svg$dot,
					p,
					function ($) {
						return $.b;
					},
					function ($) {
						return $.a;
					},
					_List_fromArray(
						[
							$author$project$Chart$Attributes$color(color),
							$author$project$Chart$Attributes$size(width),
							$author$project$Chart$Attributes$circle
						]),
					{b: x, a: y}));
		});
	var toXGrid = F3(
		function (vs, p, v) {
			return A2($elm$core$List$member, v, vs.dn) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
				A2(
					$author$project$Chart$Svg$line,
					p,
					_List_fromArray(
						[
							$author$project$Chart$Attributes$color(color),
							$author$project$Chart$Attributes$width(width),
							$author$project$Chart$Attributes$x1(v),
							$author$project$Chart$Attributes$dashed(config.dB)
						])));
		});
	var toYGrid = F3(
		function (vs, p, v) {
			return A2($elm$core$List$member, v, vs.$7) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
				A2(
					$author$project$Chart$Svg$line,
					p,
					_List_fromArray(
						[
							$author$project$Chart$Attributes$color(color),
							$author$project$Chart$Attributes$width(width),
							$author$project$Chart$Attributes$y1(v),
							$author$project$Chart$Attributes$dashed(config.dB)
						])));
		});
	return $author$project$Chart$GridElement(
		F2(
			function (p, vs) {
				return A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$class('elm-charts__grid')
						]),
					config.bg ? A2(
						$elm$core$List$concatMap,
						function (x) {
							return A2(
								$elm$core$List$filterMap,
								A3(toDot, vs, p, x),
								vs._);
						},
						vs.O) : _List_fromArray(
						[
							A2(
							$elm$svg$Svg$g,
							_List_fromArray(
								[
									$elm$svg$Svg$Attributes$class('elm-charts__x-grid')
								]),
							A2(
								$elm$core$List$filterMap,
								A2(toXGrid, vs, p),
								vs.O)),
							A2(
							$elm$svg$Svg$g,
							_List_fromArray(
								[
									$elm$svg$Svg$Attributes$class('elm-charts__y-grid')
								]),
							A2(
								$elm$core$List$filterMap,
								A2(toYGrid, vs, p),
								vs._))
						]));
			}));
};
var $author$project$Chart$viewElements = F6(
	function (config, plane, tickValues, allItems, allLegends, elements) {
		var viewOne = F2(
			function (el, _v0) {
				var before = _v0.a;
				var chart_ = _v0.b;
				var after = _v0.c;
				switch (el.$) {
					case 0:
						return _Utils_Tuple3(before, chart_, after);
					case 1:
						var view = el.d;
						return _Utils_Tuple3(
							before,
							A2(
								$elm$core$List$cons,
								view(plane),
								chart_),
							after);
					case 2:
						var view = el.e;
						return _Utils_Tuple3(
							before,
							A2(
								$elm$core$List$cons,
								view(plane),
								chart_),
							after);
					case 3:
						var view = el.b;
						return _Utils_Tuple3(
							before,
							A2(
								$elm$core$List$cons,
								view(plane),
								chart_),
							after);
					case 4:
						var view = el.b;
						return _Utils_Tuple3(
							before,
							A2(
								$elm$core$List$cons,
								view(plane),
								chart_),
							after);
					case 5:
						var view = el.b;
						return _Utils_Tuple3(
							before,
							A2(
								$elm$core$List$cons,
								view(plane),
								chart_),
							after);
					case 6:
						var toC = el.a;
						var view = el.c;
						return _Utils_Tuple3(
							before,
							A2(
								$elm$core$List$cons,
								A2(
									view,
									plane,
									toC(plane)),
								chart_),
							after);
					case 7:
						var toC = el.a;
						var view = el.c;
						return _Utils_Tuple3(
							before,
							A2(
								$elm$core$List$cons,
								A2(
									view,
									plane,
									toC(plane)),
								chart_),
							after);
					case 8:
						var toC = el.a;
						var view = el.c;
						return _Utils_Tuple3(
							before,
							A2(
								$elm$core$List$cons,
								A2(
									view,
									plane,
									toC(plane)),
								chart_),
							after);
					case 9:
						var view = el.a;
						return _Utils_Tuple3(
							before,
							A2(
								$elm$core$List$cons,
								A2(view, plane, tickValues),
								chart_),
							after);
					case 10:
						var func = el.a;
						return A3(
							$elm$core$List$foldr,
							viewOne,
							_Utils_Tuple3(before, chart_, after),
							A2(func, plane, allItems));
					case 11:
						var els = el.a;
						return A3(
							$elm$core$List$foldr,
							viewOne,
							_Utils_Tuple3(before, chart_, after),
							els);
					case 12:
						var view = el.a;
						return _Utils_Tuple3(
							before,
							A2(
								$elm$core$List$cons,
								view(plane),
								chart_),
							after);
					default:
						var view = el.a;
						return _Utils_Tuple3(
							($elm$core$List$length(chart_) > 0) ? A2(
								$elm$core$List$cons,
								A2(view, plane, allLegends),
								before) : before,
							chart_,
							($elm$core$List$length(chart_) > 0) ? after : A2(
								$elm$core$List$cons,
								A2(view, plane, allLegends),
								after));
				}
			});
		return A3(
			$elm$core$List$foldr,
			viewOne,
			_Utils_Tuple3(_List_Nil, _List_Nil, _List_Nil),
			elements);
	});
var $author$project$Chart$chart = F2(
	function (edits, unindexedElements) {
		var indexedElements = function () {
			var toIndexedEl = F2(
				function (el, _v4) {
					var acc = _v4.a;
					var index = _v4.b;
					switch (el.$) {
						case 0:
							var toElAndIndex = el.a;
							var _v6 = toElAndIndex(index);
							var newEl = _v6.a;
							var newIndex = _v6.b;
							return _Utils_Tuple2(
								_Utils_ap(
									acc,
									_List_fromArray(
										[newEl])),
								newIndex);
						case 11:
							var els = el.a;
							return A3(
								$elm$core$List$foldl,
								toIndexedEl,
								_Utils_Tuple2(acc, index),
								els);
						default:
							return _Utils_Tuple2(
								_Utils_ap(
									acc,
									_List_fromArray(
										[el])),
								index);
					}
				});
			return A3(
				$elm$core$List$foldl,
				toIndexedEl,
				_Utils_Tuple2(_List_Nil, 0),
				unindexedElements).a;
		}();
		var elements = function () {
			var isGrid = function (el) {
				if (el.$ === 9) {
					return true;
				} else {
					return false;
				}
			};
			return A2($elm$core$List$any, isGrid, indexedElements) ? indexedElements : A2(
				$elm$core$List$cons,
				$author$project$Chart$grid(_List_Nil),
				indexedElements);
		}();
		var legends_ = $author$project$Chart$getLegends(elements);
		var config = A2(
			$author$project$Internal$Helpers$apply,
			edits,
			{
				i: _List_fromArray(
					[
						$elm$svg$Svg$Attributes$style('overflow: visible;')
					]),
				d9: _List_Nil,
				dF: _List_Nil,
				U: 300,
				dI: _List_Nil,
				aE: {a4: 0, c2: 0, c5: 0, di: 0},
				ai: {a4: 0, c2: 0, c5: 0, di: 0},
				ex: _List_Nil,
				dQ: true,
				h: 300
			});
		var plane = A2($author$project$Chart$definePlane, config, elements);
		var items = A2($author$project$Chart$getItems, plane, elements);
		var toEvent = function (_v2) {
			var event_ = _v2;
			var _v1 = event_.hm;
			var decoder = _v1;
			return A2(
				$author$project$Internal$Svg$Event,
				event_.dO,
				decoder(items));
		};
		var tickValues = A3($author$project$Chart$getTickValues, plane, items, elements);
		var _v0 = A6($author$project$Chart$viewElements, config, plane, tickValues, items, legends_, elements);
		var beforeEls = _v0.a;
		var chartEls = _v0.b;
		var afterEls = _v0.c;
		return A5(
			$author$project$Internal$Svg$container,
			plane,
			{
				i: config.i,
				dF: A2($elm$core$List$map, toEvent, config.dF),
				dI: config.dI,
				dQ: config.dQ
			},
			beforeEls,
			chartEls,
			afterEls);
	});
var $author$project$Charts$Terminology$Data = F7(
	function (x, y, z, a, b, c, label) {
		return {eR: a, eX: b, e$: c, dL: label, b: x, a: y, gA: z};
	});
var $author$project$Charts$Terminology$data = _List_fromArray(
	[
		A7($author$project$Charts$Terminology$Data, 1, 4, 3, 2, 1, 2, 'A'),
		A7($author$project$Charts$Terminology$Data, 2, 5, 2, 2, 2, 1, 'B'),
		A7($author$project$Charts$Terminology$Data, 3, 4, 3, 2, 1, 2, 'C'),
		A7($author$project$Charts$Terminology$Data, 4, 8, 2, 1, 2, 2, 'D')
	]);
var $author$project$Internal$Item$isReal = function (_v0) {
	var meta = _v0.a;
	return meta.hW;
};
var $author$project$Internal$Many$real = A2(
	$author$project$Internal$Many$Remodel,
	$author$project$Internal$Item$getPosition,
	$elm$core$List$filter($author$project$Internal$Item$isReal));
var $author$project$Chart$Item$real = $author$project$Internal$Many$real;
var $author$project$Chart$eachBar = function (func) {
	return $author$project$Chart$SubElements(
		F2(
			function (p, is) {
				return A2(
					$elm$core$List$concatMap,
					func(p),
					A2(
						$author$project$Chart$Item$apply,
						A2($author$project$Chart$Item$andThen, $author$project$Chart$Item$real, $author$project$Chart$Item$bars),
						is));
			}));
};
var $author$project$Internal$Many$any = A2($author$project$Internal$Many$Remodel, $author$project$Internal$Item$getPosition, $elm$core$Basics$identity);
var $author$project$Chart$Item$any = $author$project$Internal$Many$any;
var $author$project$Internal$Many$stacks = A2(
	$author$project$Internal$Many$Remodel,
	$author$project$Internal$Item$getPosition,
	$author$project$Internal$Many$groupingHelp(
		{
			dD: $elm$core$Basics$identity,
			dE: F2(
				function (a, b) {
					return _Utils_eq(a.a1, b.a1) && (_Utils_eq(a.dm, b.dm) && _Utils_eq(a.ew, b.ew));
				}),
			dX: function (config) {
				return {ew: config.hJ.iI, a1: config.a1, dm: config.dm};
			}
		}));
var $author$project$Chart$Item$stacks = $author$project$Internal$Many$stacks;
var $author$project$Chart$eachStack = function (func) {
	return $author$project$Chart$SubElements(
		F2(
			function (p, is) {
				return A2(
					$elm$core$List$concatMap,
					func(p),
					A2(
						$author$project$Chart$Item$apply,
						A2(
							$author$project$Chart$Item$andThen,
							$author$project$Chart$Item$stacks,
							A2($author$project$Chart$Item$andThen, $author$project$Chart$Item$real, $author$project$Chart$Item$any)),
						is));
			}));
};
var $author$project$Chart$Attributes$flip = function (config) {
	return _Utils_update(
		config,
		{j: true});
};
var $author$project$Chart$Item$getData = $author$project$Internal$Item$getDatum;
var $author$project$Chart$Item$getMembers = $author$project$Internal$Many$getMembers;
var $author$project$Internal$Coordinates$top = function (pos) {
	return {b: pos.a1 + ((pos.dm - pos.a1) / 2), a: pos.eP};
};
var $author$project$Chart$Item$getTop = function (p) {
	return A2(
		$elm$core$Basics$composeR,
		$author$project$Internal$Item$getPosition(p),
		$author$project$Internal$Coordinates$top);
};
var $author$project$Internal$Item$getY = function (_v0) {
	var meta = _v0.a;
	return meta.a;
};
var $author$project$Chart$Item$getY = $author$project$Internal$Item$getY;
var $author$project$Chart$Attributes$height = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{U: v});
	};
};
var $author$project$Chart$Svg$label = F2(
	function (plane, edits) {
		return A2(
			$author$project$Internal$Svg$label,
			plane,
			A2($author$project$Internal$Helpers$apply, edits, $author$project$Internal$Svg$defaultLabel));
	});
var $author$project$Chart$label = F3(
	function (attrs, inner, point) {
		return $author$project$Chart$SvgElement(
			function (p) {
				return A4($author$project$Chart$Svg$label, p, attrs, inner, point);
			});
	});
var $author$project$Chart$line = function (attrs) {
	return $author$project$Chart$SvgElement(
		function (p) {
			return A2($author$project$Chart$Svg$line, p, attrs);
		});
};
var $author$project$Chart$Attributes$margin = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{aE: v});
	};
};
var $author$project$Chart$Attributes$moveDown = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{n: config.n + v});
	};
};
var $author$project$Chart$Attributes$moveLeft = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{m: config.m - v});
	};
};
var $author$project$Chart$Attributes$moveRight = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{m: config.m + v});
	};
};
var $author$project$Chart$Attributes$moveUp = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{n: config.n - v});
	};
};
var $author$project$Chart$Attributes$noArrow = function (config) {
	return _Utils_update(
		config,
		{aO: false});
};
var $author$project$Chart$Attributes$opacity = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{ag: v});
	};
};
var $author$project$Chart$Attributes$padding = function (value) {
	return function (config) {
		return _Utils_update(
			config,
			{ai: value});
	};
};
var $author$project$Chart$Attributes$rotate = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{u: config.u + v});
	};
};
var $author$project$Chart$Attributes$spacing = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{iG: v});
	};
};
var $author$project$Internal$Property$Stacked = function (a) {
	return {$: 1, a: a};
};
var $elm$core$List$sum = function (numbers) {
	return A3($elm$core$List$foldl, $elm$core$Basics$add, 0, numbers);
};
var $author$project$Internal$Property$stacked = function (properties) {
	var toYSum = F2(
		function (toYs, datum) {
			var yValues = A2(
				$elm$core$List$filterMap,
				function (toY) {
					return toY(datum);
				},
				toYs);
			var isYValueMissing = !_Utils_eq(
				$elm$core$List$length(yValues),
				$elm$core$List$length(toYs));
			return isYValueMissing ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
				$elm$core$List$sum(yValues));
		});
	var stack = F3(
		function (list, toYs, result) {
			stack:
			while (true) {
				if (list.b) {
					var config = list.a;
					var rest = list.b;
					var toYs_ = A2($elm$core$List$cons, config.d$, toYs);
					var $temp$list = rest,
						$temp$toYs = toYs_,
						$temp$result = A2(
						$elm$core$List$cons,
						_Utils_update(
							config,
							{
								dg: toYSum(toYs_)
							}),
						result);
					list = $temp$list;
					toYs = $temp$toYs;
					result = $temp$result;
					continue stack;
				} else {
					return result;
				}
			}
		});
	var configs = A2(
		$elm$core$List$concatMap,
		$author$project$Internal$Property$toConfigs,
		$elm$core$List$reverse(properties));
	return $author$project$Internal$Property$Stacked(
		A3(stack, configs, _List_Nil, _List_Nil));
};
var $author$project$Chart$stacked = $author$project$Internal$Property$stacked;
var $author$project$Chart$Attributes$tickDirection = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{i2: v});
	};
};
var $author$project$Chart$Attributes$tickLength = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{i3: v});
	};
};
var $author$project$Chart$Attributes$withGrid = function (config) {
	return _Utils_update(
		config,
		{l: true});
};
var $author$project$Chart$Attributes$x2 = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{
				dm: $elm$core$Maybe$Just(v)
			});
	};
};
var $author$project$Chart$Attributes$x2Svg = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{
				jw: $elm$core$Maybe$Just(v)
			});
	};
};
var $author$project$Chart$AxisElement = F2(
	function (a, b) {
		return {$: 4, a: a, b: b};
	});
var $elm$svg$Svg$Attributes$points = _VirtualDom_attribute('points');
var $elm$svg$Svg$polygon = $elm$svg$Svg$trustedNode('polygon');
var $author$project$Internal$Svg$arrow = F3(
	function (plane, config, point) {
		var points_ = '0,0 ' + ($elm$core$String$fromFloat(config.ae) + (',' + ($elm$core$String$fromFloat(config.h) + (' 0, ' + $elm$core$String$fromFloat(config.h * 2)))));
		var commands = 'rotate(' + ($elm$core$String$fromFloat(config.u) + (') translate(0 ' + ($elm$core$String$fromFloat(-config.h) + ') ')));
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('elm-charts__arrow'),
					A6($author$project$Internal$Svg$position, plane, 0, point.b, point.a, config.m, config.n)
				]),
			_List_fromArray(
				[
					A4(
					$author$project$Internal$Svg$withAttrs,
					config.i,
					$elm$svg$Svg$polygon,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$fill(config.d),
							$elm$svg$Svg$Attributes$points(points_),
							$elm$svg$Svg$Attributes$transform(commands)
						]),
					_List_Nil)
				]));
	});
var $author$project$Internal$Svg$defaultArrow = {i: _List_Nil, d: 'rgb(210, 210, 210)', ae: 7, u: 0, h: 4, m: 0, n: 0};
var $author$project$Chart$Svg$arrow = F2(
	function (plane, edits) {
		return A2(
			$author$project$Internal$Svg$arrow,
			plane,
			A2($author$project$Internal$Helpers$apply, edits, $author$project$Internal$Svg$defaultArrow));
	});
var $author$project$Chart$Attributes$zero = function (b) {
	return A3($elm$core$Basics$clamp, b.Y, b.J, 0);
};
var $author$project$Chart$xAxis = function (edits) {
	var config = A2(
		$author$project$Internal$Helpers$apply,
		edits,
		{aO: true, d: '', B: _List_Nil, t: $author$project$Chart$Attributes$zero, h: 1});
	var addTickValues = F2(
		function (p, ts) {
			return _Utils_update(
				ts,
				{
					$7: A2(
						$elm$core$List$cons,
						config.t(p.a),
						ts.$7)
				});
		});
	return A2(
		$author$project$Chart$AxisElement,
		addTickValues,
		function (p) {
			var xLimit = A2($author$project$Internal$Helpers$apply, config.B, p.b);
			return A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('elm-charts__x-axis')
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$Svg$line,
						p,
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color(config.d),
								$author$project$Chart$Attributes$width(config.h),
								$author$project$Chart$Attributes$y1(
								config.t(p.a)),
								$author$project$Chart$Attributes$x1(
								A2($elm$core$Basics$max, p.b.Y, xLimit.Y)),
								$author$project$Chart$Attributes$x2(
								A2($elm$core$Basics$min, p.b.J, xLimit.J))
							])),
						config.aO ? A3(
						$author$project$Chart$Svg$arrow,
						p,
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color(config.d)
							]),
						{
							b: xLimit.J,
							a: config.t(p.a)
						}) : $elm$svg$Svg$text('')
					]));
		});
};
var $author$project$Chart$Attributes$y2 = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{
				eP: $elm$core$Maybe$Just(v)
			});
	};
};
var $author$project$Chart$Attributes$y2Svg = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{
				jy: $elm$core$Maybe$Just(v)
			});
	};
};
var $author$project$Internal$Svg$Floats = {$: 0};
var $author$project$Chart$LabelsElement = F3(
	function (a, b, c) {
		return {$: 7, a: a, b: b, c: c};
	});
var $author$project$Internal$Svg$Start = 1;
var $author$project$Internal$Svg$Generator = $elm$core$Basics$identity;
var $terezka$intervals$Intervals$Around = function (a) {
	return {$: 1, a: a};
};
var $terezka$intervals$Intervals$around = $terezka$intervals$Intervals$Around;
var $terezka$intervals$Intervals$ceilingTo = F2(
	function (prec, number) {
		return prec * $elm$core$Basics$ceiling(number / prec);
	});
var $terezka$intervals$Intervals$getBeginning = F2(
	function (min, interval) {
		var multiple = min / interval;
		return _Utils_eq(
			multiple,
			$elm$core$Basics$round(multiple)) ? min : A2($terezka$intervals$Intervals$ceilingTo, interval, min);
	});
var $elm$core$String$foldr = _String_foldr;
var $elm$core$String$toList = function (string) {
	return A3($elm$core$String$foldr, $elm$core$List$cons, _List_Nil, string);
};
var $myrho$elm_round$Round$addSign = F2(
	function (signed, str) {
		var isNotZero = A2(
			$elm$core$List$any,
			function (c) {
				return (c !== '0') && (c !== '.');
			},
			$elm$core$String$toList(str));
		return _Utils_ap(
			(signed && isNotZero) ? '-' : '',
			str);
	});
var $elm$core$String$cons = _String_cons;
var $elm$core$Char$fromCode = _Char_fromCode;
var $myrho$elm_round$Round$increaseNum = function (_v0) {
	var head = _v0.a;
	var tail = _v0.b;
	if (head === '9') {
		var _v1 = $elm$core$String$uncons(tail);
		if (_v1.$ === 1) {
			return '01';
		} else {
			var headtail = _v1.a;
			return A2(
				$elm$core$String$cons,
				'0',
				$myrho$elm_round$Round$increaseNum(headtail));
		}
	} else {
		var c = $elm$core$Char$toCode(head);
		return ((c >= 48) && (c < 57)) ? A2(
			$elm$core$String$cons,
			$elm$core$Char$fromCode(c + 1),
			tail) : '0';
	}
};
var $elm$core$Basics$isInfinite = _Basics_isInfinite;
var $elm$core$Basics$isNaN = _Basics_isNaN;
var $elm$core$String$fromChar = function (_char) {
	return A2($elm$core$String$cons, _char, '');
};
var $elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;
var $elm$core$String$repeatHelp = F3(
	function (n, chunk, result) {
		return (n <= 0) ? result : A3(
			$elm$core$String$repeatHelp,
			n >> 1,
			_Utils_ap(chunk, chunk),
			(!(n & 1)) ? result : _Utils_ap(result, chunk));
	});
var $elm$core$String$repeat = F2(
	function (n, chunk) {
		return A3($elm$core$String$repeatHelp, n, chunk, '');
	});
var $elm$core$String$padRight = F3(
	function (n, _char, string) {
		return _Utils_ap(
			string,
			A2(
				$elm$core$String$repeat,
				n - $elm$core$String$length(string),
				$elm$core$String$fromChar(_char)));
	});
var $elm$core$String$reverse = _String_reverse;
var $myrho$elm_round$Round$splitComma = function (str) {
	var _v0 = A2($elm$core$String$split, '.', str);
	if (_v0.b) {
		if (_v0.b.b) {
			var before = _v0.a;
			var _v1 = _v0.b;
			var after = _v1.a;
			return _Utils_Tuple2(before, after);
		} else {
			var before = _v0.a;
			return _Utils_Tuple2(before, '0');
		}
	} else {
		return _Utils_Tuple2('0', '0');
	}
};
var $myrho$elm_round$Round$toDecimal = function (fl) {
	var _v0 = A2(
		$elm$core$String$split,
		'e',
		$elm$core$String$fromFloat(
			$elm$core$Basics$abs(fl)));
	if (_v0.b) {
		if (_v0.b.b) {
			var num = _v0.a;
			var _v1 = _v0.b;
			var exp = _v1.a;
			var e = A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$String$toInt(
					A2($elm$core$String$startsWith, '+', exp) ? A2($elm$core$String$dropLeft, 1, exp) : exp));
			var _v2 = $myrho$elm_round$Round$splitComma(num);
			var before = _v2.a;
			var after = _v2.b;
			var total = _Utils_ap(before, after);
			var zeroed = (e < 0) ? A2(
				$elm$core$Maybe$withDefault,
				'0',
				A2(
					$elm$core$Maybe$map,
					function (_v3) {
						var a = _v3.a;
						var b = _v3.b;
						return a + ('.' + b);
					},
					A2(
						$elm$core$Maybe$map,
						$elm$core$Tuple$mapFirst($elm$core$String$fromChar),
						$elm$core$String$uncons(
							_Utils_ap(
								A2(
									$elm$core$String$repeat,
									$elm$core$Basics$abs(e),
									'0'),
								total))))) : A3($elm$core$String$padRight, e + 1, '0', total);
			return _Utils_ap(
				(fl < 0) ? '-' : '',
				zeroed);
		} else {
			var num = _v0.a;
			return _Utils_ap(
				(fl < 0) ? '-' : '',
				num);
		}
	} else {
		return '';
	}
};
var $myrho$elm_round$Round$roundFun = F3(
	function (functor, s, fl) {
		if ($elm$core$Basics$isInfinite(fl) || $elm$core$Basics$isNaN(fl)) {
			return $elm$core$String$fromFloat(fl);
		} else {
			var signed = fl < 0;
			var _v0 = $myrho$elm_round$Round$splitComma(
				$myrho$elm_round$Round$toDecimal(
					$elm$core$Basics$abs(fl)));
			var before = _v0.a;
			var after = _v0.b;
			var r = $elm$core$String$length(before) + s;
			var normalized = _Utils_ap(
				A2($elm$core$String$repeat, (-r) + 1, '0'),
				A3(
					$elm$core$String$padRight,
					r,
					'0',
					_Utils_ap(before, after)));
			var totalLen = $elm$core$String$length(normalized);
			var roundDigitIndex = A2($elm$core$Basics$max, 1, r);
			var increase = A2(
				functor,
				signed,
				A3($elm$core$String$slice, roundDigitIndex, totalLen, normalized));
			var remains = A3($elm$core$String$slice, 0, roundDigitIndex, normalized);
			var num = increase ? $elm$core$String$reverse(
				A2(
					$elm$core$Maybe$withDefault,
					'1',
					A2(
						$elm$core$Maybe$map,
						$myrho$elm_round$Round$increaseNum,
						$elm$core$String$uncons(
							$elm$core$String$reverse(remains))))) : remains;
			var numLen = $elm$core$String$length(num);
			var numZeroed = (num === '0') ? num : ((s <= 0) ? _Utils_ap(
				num,
				A2(
					$elm$core$String$repeat,
					$elm$core$Basics$abs(s),
					'0')) : ((_Utils_cmp(
				s,
				$elm$core$String$length(after)) < 0) ? (A3($elm$core$String$slice, 0, numLen - s, num) + ('.' + A3($elm$core$String$slice, numLen - s, numLen, num))) : _Utils_ap(
				before + '.',
				A3($elm$core$String$padRight, s, '0', after))));
			return A2($myrho$elm_round$Round$addSign, signed, numZeroed);
		}
	});
var $myrho$elm_round$Round$round = $myrho$elm_round$Round$roundFun(
	F2(
		function (signed, str) {
			var _v0 = $elm$core$String$uncons(str);
			if (_v0.$ === 1) {
				return false;
			} else {
				if ('5' === _v0.a.a) {
					if (_v0.a.b === '') {
						var _v1 = _v0.a;
						return !signed;
					} else {
						var _v2 = _v0.a;
						return true;
					}
				} else {
					var _v3 = _v0.a;
					var _int = _v3.a;
					return function (i) {
						return ((i > 53) && signed) || ((i >= 53) && (!signed));
					}(
						$elm$core$Char$toCode(_int));
				}
			}
		}));
var $elm$core$String$toFloat = _String_toFloat;
var $terezka$intervals$Intervals$correctFloat = function (prec) {
	return A2(
		$elm$core$Basics$composeR,
		$myrho$elm_round$Round$round(prec),
		A2(
			$elm$core$Basics$composeR,
			$elm$core$String$toFloat,
			$elm$core$Maybe$withDefault(0)));
};
var $terezka$intervals$Intervals$getMultiples = F3(
	function (magnitude, allowDecimals, hasTickAmount) {
		var defaults = hasTickAmount ? _List_fromArray(
			[1, 1.2, 1.5, 2, 2.5, 3, 4, 5, 6, 8, 10]) : _List_fromArray(
			[1, 2, 2.5, 5, 10]);
		return allowDecimals ? defaults : ((magnitude === 1) ? A2(
			$elm$core$List$filter,
			function (n) {
				return _Utils_eq(
					$elm$core$Basics$round(n),
					n);
			},
			defaults) : ((magnitude <= 0.1) ? _List_fromArray(
			[1 / magnitude]) : defaults));
	});
var $terezka$intervals$Intervals$getPrecision = function (number) {
	var _v0 = A2(
		$elm$core$String$split,
		'e',
		$elm$core$String$fromFloat(number));
	if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
		var before = _v0.a;
		var _v1 = _v0.b;
		var after = _v1.a;
		return $elm$core$Basics$abs(
			A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$String$toInt(after)));
	} else {
		var _v2 = A2(
			$elm$core$String$split,
			'.',
			$elm$core$String$fromFloat(number));
		if ((_v2.b && _v2.b.b) && (!_v2.b.b.b)) {
			var before = _v2.a;
			var _v3 = _v2.b;
			var after = _v3.a;
			return $elm$core$String$length(after);
		} else {
			return 0;
		}
	}
};
var $elm$core$Basics$e = _Basics_e;
var $elm$core$Basics$pow = _Basics_pow;
var $terezka$intervals$Intervals$toMagnitude = function (num) {
	return A2(
		$elm$core$Basics$pow,
		10,
		$elm$core$Basics$floor(
			A2($elm$core$Basics$logBase, $elm$core$Basics$e, num) / A2($elm$core$Basics$logBase, $elm$core$Basics$e, 10)));
};
var $terezka$intervals$Intervals$getInterval = F3(
	function (intervalRaw, allowDecimals, hasTickAmount) {
		var magnitude = $terezka$intervals$Intervals$toMagnitude(intervalRaw);
		var multiples = A3($terezka$intervals$Intervals$getMultiples, magnitude, allowDecimals, hasTickAmount);
		var normalized = intervalRaw / magnitude;
		var findMultipleExact = function (multiples_) {
			findMultipleExact:
			while (true) {
				if (multiples_.b) {
					var m1 = multiples_.a;
					var rest = multiples_.b;
					if (_Utils_cmp(m1 * magnitude, intervalRaw) > -1) {
						return m1;
					} else {
						var $temp$multiples_ = rest;
						multiples_ = $temp$multiples_;
						continue findMultipleExact;
					}
				} else {
					return 1;
				}
			}
		};
		var findMultiple = function (multiples_) {
			findMultiple:
			while (true) {
				if (multiples_.b) {
					if (multiples_.b.b) {
						var m1 = multiples_.a;
						var _v2 = multiples_.b;
						var m2 = _v2.a;
						var rest = _v2.b;
						if (_Utils_cmp(normalized, (m1 + m2) / 2) < 1) {
							return m1;
						} else {
							var $temp$multiples_ = A2($elm$core$List$cons, m2, rest);
							multiples_ = $temp$multiples_;
							continue findMultiple;
						}
					} else {
						var m1 = multiples_.a;
						var rest = multiples_.b;
						if (_Utils_cmp(normalized, m1) < 1) {
							return m1;
						} else {
							var $temp$multiples_ = rest;
							multiples_ = $temp$multiples_;
							continue findMultiple;
						}
					}
				} else {
					return 1;
				}
			}
		};
		var multiple = hasTickAmount ? findMultipleExact(multiples) : findMultiple(multiples);
		var precision = $terezka$intervals$Intervals$getPrecision(magnitude) + $terezka$intervals$Intervals$getPrecision(multiple);
		return A2($terezka$intervals$Intervals$correctFloat, precision, multiple * magnitude);
	});
var $terezka$intervals$Intervals$positions = F5(
	function (range, beginning, interval, m, acc) {
		positions:
		while (true) {
			var nextPosition = A2(
				$terezka$intervals$Intervals$correctFloat,
				$terezka$intervals$Intervals$getPrecision(interval),
				beginning + (m * interval));
			if (_Utils_cmp(nextPosition, range.J) > 0) {
				return acc;
			} else {
				var $temp$range = range,
					$temp$beginning = beginning,
					$temp$interval = interval,
					$temp$m = m + 1,
					$temp$acc = _Utils_ap(
					acc,
					_List_fromArray(
						[nextPosition]));
				range = $temp$range;
				beginning = $temp$beginning;
				interval = $temp$interval;
				m = $temp$m;
				acc = $temp$acc;
				continue positions;
			}
		}
	});
var $terezka$intervals$Intervals$values = F4(
	function (allowDecimals, exact, amountRough, range) {
		var intervalRough = (range.J - range.Y) / amountRough;
		var interval = A3($terezka$intervals$Intervals$getInterval, intervalRough, allowDecimals, exact);
		var intervalSafe = (!interval) ? 1 : interval;
		var beginning = A2($terezka$intervals$Intervals$getBeginning, range.Y, intervalSafe);
		var amountRoughSafe = (!amountRough) ? 1 : amountRough;
		return A5($terezka$intervals$Intervals$positions, range, beginning, intervalSafe, 0, _List_Nil);
	});
var $terezka$intervals$Intervals$floats = function (amount) {
	if (!amount.$) {
		var number = amount.a;
		return A3($terezka$intervals$Intervals$values, true, true, number);
	} else {
		var number = amount.a;
		return A3($terezka$intervals$Intervals$values, true, false, number);
	}
};
var $author$project$Internal$Svg$floats = F2(
	function (i, b) {
		return A2(
			$terezka$intervals$Intervals$floats,
			$terezka$intervals$Intervals$around(i),
			{J: b.J, Y: b.Y});
	});
var $author$project$Chart$Svg$floats = $author$project$Internal$Svg$floats;
var $ryannhg$date_format$DateFormat$Language$Language = F6(
	function (toMonthName, toMonthAbbreviation, toWeekdayName, toWeekdayAbbreviation, toAmPm, toOrdinalSuffix) {
		return {i6: toAmPm, i9: toMonthAbbreviation, ja: toMonthName, aZ: toOrdinalSuffix, jg: toWeekdayAbbreviation, jh: toWeekdayName};
	});
var $ryannhg$date_format$DateFormat$Language$toEnglishAmPm = function (hour) {
	return (hour > 11) ? 'pm' : 'am';
};
var $ryannhg$date_format$DateFormat$Language$toEnglishMonthName = function (month) {
	switch (month) {
		case 0:
			return 'January';
		case 1:
			return 'February';
		case 2:
			return 'March';
		case 3:
			return 'April';
		case 4:
			return 'May';
		case 5:
			return 'June';
		case 6:
			return 'July';
		case 7:
			return 'August';
		case 8:
			return 'September';
		case 9:
			return 'October';
		case 10:
			return 'November';
		default:
			return 'December';
	}
};
var $elm$core$Basics$modBy = _Basics_modBy;
var $ryannhg$date_format$DateFormat$Language$toEnglishSuffix = function (num) {
	var _v0 = A2($elm$core$Basics$modBy, 100, num);
	switch (_v0) {
		case 11:
			return 'th';
		case 12:
			return 'th';
		case 13:
			return 'th';
		default:
			var _v1 = A2($elm$core$Basics$modBy, 10, num);
			switch (_v1) {
				case 1:
					return 'st';
				case 2:
					return 'nd';
				case 3:
					return 'rd';
				default:
					return 'th';
			}
	}
};
var $ryannhg$date_format$DateFormat$Language$toEnglishWeekdayName = function (weekday) {
	switch (weekday) {
		case 0:
			return 'Monday';
		case 1:
			return 'Tuesday';
		case 2:
			return 'Wednesday';
		case 3:
			return 'Thursday';
		case 4:
			return 'Friday';
		case 5:
			return 'Saturday';
		default:
			return 'Sunday';
	}
};
var $ryannhg$date_format$DateFormat$Language$english = A6(
	$ryannhg$date_format$DateFormat$Language$Language,
	$ryannhg$date_format$DateFormat$Language$toEnglishMonthName,
	A2(
		$elm$core$Basics$composeR,
		$ryannhg$date_format$DateFormat$Language$toEnglishMonthName,
		$elm$core$String$left(3)),
	$ryannhg$date_format$DateFormat$Language$toEnglishWeekdayName,
	A2(
		$elm$core$Basics$composeR,
		$ryannhg$date_format$DateFormat$Language$toEnglishWeekdayName,
		$elm$core$String$left(3)),
	$ryannhg$date_format$DateFormat$Language$toEnglishAmPm,
	$ryannhg$date_format$DateFormat$Language$toEnglishSuffix);
var $elm$time$Time$flooredDiv = F2(
	function (numerator, denominator) {
		return $elm$core$Basics$floor(numerator / denominator);
	});
var $elm$time$Time$posixToMillis = function (_v0) {
	var millis = _v0;
	return millis;
};
var $elm$time$Time$toAdjustedMinutesHelp = F3(
	function (defaultOffset, posixMinutes, eras) {
		toAdjustedMinutesHelp:
		while (true) {
			if (!eras.b) {
				return posixMinutes + defaultOffset;
			} else {
				var era = eras.a;
				var olderEras = eras.b;
				if (_Utils_cmp(era.f3, posixMinutes) < 0) {
					return posixMinutes + era.h8;
				} else {
					var $temp$defaultOffset = defaultOffset,
						$temp$posixMinutes = posixMinutes,
						$temp$eras = olderEras;
					defaultOffset = $temp$defaultOffset;
					posixMinutes = $temp$posixMinutes;
					eras = $temp$eras;
					continue toAdjustedMinutesHelp;
				}
			}
		}
	});
var $elm$time$Time$toAdjustedMinutes = F2(
	function (_v0, time) {
		var defaultOffset = _v0.a;
		var eras = _v0.b;
		return A3(
			$elm$time$Time$toAdjustedMinutesHelp,
			defaultOffset,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				60000),
			eras);
	});
var $elm$time$Time$toHour = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			24,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60));
	});
var $ryannhg$date_format$DateFormat$amPm = F3(
	function (language, zone, posix) {
		return language.i6(
			A2($elm$time$Time$toHour, zone, posix));
	});
var $elm$time$Time$toCivil = function (minutes) {
	var rawDay = A2($elm$time$Time$flooredDiv, minutes, 60 * 24) + 719468;
	var era = (((rawDay >= 0) ? rawDay : (rawDay - 146096)) / 146097) | 0;
	var dayOfEra = rawDay - (era * 146097);
	var yearOfEra = ((((dayOfEra - ((dayOfEra / 1460) | 0)) + ((dayOfEra / 36524) | 0)) - ((dayOfEra / 146096) | 0)) / 365) | 0;
	var dayOfYear = dayOfEra - (((365 * yearOfEra) + ((yearOfEra / 4) | 0)) - ((yearOfEra / 100) | 0));
	var mp = (((5 * dayOfYear) + 2) / 153) | 0;
	var month = mp + ((mp < 10) ? 3 : (-9));
	var year = yearOfEra + (era * 400);
	return {
		e5: (dayOfYear - ((((153 * mp) + 2) / 5) | 0)) + 1,
		fC: month,
		dp: year + ((month <= 2) ? 1 : 0)
	};
};
var $elm$time$Time$toDay = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).e5;
	});
var $ryannhg$date_format$DateFormat$dayOfMonth = $elm$time$Time$toDay;
var $elm$time$Time$Sun = 6;
var $elm$time$Time$Fri = 4;
var $elm$time$Time$Mon = 0;
var $elm$time$Time$Sat = 5;
var $elm$time$Time$Thu = 3;
var $elm$time$Time$Tue = 1;
var $elm$time$Time$Wed = 2;
var $ryannhg$date_format$DateFormat$days = _List_fromArray(
	[6, 0, 1, 2, 3, 4, 5]);
var $elm$time$Time$toWeekday = F2(
	function (zone, time) {
		var _v0 = A2(
			$elm$core$Basics$modBy,
			7,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60 * 24));
		switch (_v0) {
			case 0:
				return 3;
			case 1:
				return 4;
			case 2:
				return 5;
			case 3:
				return 6;
			case 4:
				return 0;
			case 5:
				return 1;
			default:
				return 2;
		}
	});
var $ryannhg$date_format$DateFormat$dayOfWeek = F2(
	function (zone, posix) {
		return function (_v1) {
			var i = _v1.a;
			return i;
		}(
			A2(
				$elm$core$Maybe$withDefault,
				_Utils_Tuple2(0, 6),
				$elm$core$List$head(
					A2(
						$elm$core$List$filter,
						function (_v0) {
							var day = _v0.b;
							return _Utils_eq(
								day,
								A2($elm$time$Time$toWeekday, zone, posix));
						},
						A2(
							$elm$core$List$indexedMap,
							F2(
								function (i, day) {
									return _Utils_Tuple2(i, day);
								}),
							$ryannhg$date_format$DateFormat$days)))));
	});
var $ryannhg$date_format$DateFormat$isLeapYear = function (year_) {
	return (!(!A2($elm$core$Basics$modBy, 4, year_))) ? false : ((!(!A2($elm$core$Basics$modBy, 100, year_))) ? true : ((!(!A2($elm$core$Basics$modBy, 400, year_))) ? false : true));
};
var $ryannhg$date_format$DateFormat$daysInMonth = F2(
	function (year_, month) {
		switch (month) {
			case 0:
				return 31;
			case 1:
				return $ryannhg$date_format$DateFormat$isLeapYear(year_) ? 29 : 28;
			case 2:
				return 31;
			case 3:
				return 30;
			case 4:
				return 31;
			case 5:
				return 30;
			case 6:
				return 31;
			case 7:
				return 31;
			case 8:
				return 30;
			case 9:
				return 31;
			case 10:
				return 30;
			default:
				return 31;
		}
	});
var $elm$time$Time$Jan = 0;
var $elm$time$Time$Apr = 3;
var $elm$time$Time$Aug = 7;
var $elm$time$Time$Dec = 11;
var $elm$time$Time$Feb = 1;
var $elm$time$Time$Jul = 6;
var $elm$time$Time$Jun = 5;
var $elm$time$Time$Mar = 2;
var $elm$time$Time$May = 4;
var $elm$time$Time$Nov = 10;
var $elm$time$Time$Oct = 9;
var $elm$time$Time$Sep = 8;
var $ryannhg$date_format$DateFormat$months = _List_fromArray(
	[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]);
var $elm$time$Time$toMonth = F2(
	function (zone, time) {
		var _v0 = $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).fC;
		switch (_v0) {
			case 1:
				return 0;
			case 2:
				return 1;
			case 3:
				return 2;
			case 4:
				return 3;
			case 5:
				return 4;
			case 6:
				return 5;
			case 7:
				return 6;
			case 8:
				return 7;
			case 9:
				return 8;
			case 10:
				return 9;
			case 11:
				return 10;
			default:
				return 11;
		}
	});
var $ryannhg$date_format$DateFormat$monthPair = F2(
	function (zone, posix) {
		return A2(
			$elm$core$Maybe$withDefault,
			_Utils_Tuple2(0, 0),
			$elm$core$List$head(
				A2(
					$elm$core$List$filter,
					function (_v0) {
						var i = _v0.a;
						var m = _v0.b;
						return _Utils_eq(
							m,
							A2($elm$time$Time$toMonth, zone, posix));
					},
					A2(
						$elm$core$List$indexedMap,
						F2(
							function (a, b) {
								return _Utils_Tuple2(a, b);
							}),
						$ryannhg$date_format$DateFormat$months))));
	});
var $ryannhg$date_format$DateFormat$monthNumber_ = F2(
	function (zone, posix) {
		return 1 + function (_v0) {
			var i = _v0.a;
			var m = _v0.b;
			return i;
		}(
			A2($ryannhg$date_format$DateFormat$monthPair, zone, posix));
	});
var $elm$core$List$takeReverse = F3(
	function (n, list, kept) {
		takeReverse:
		while (true) {
			if (n <= 0) {
				return kept;
			} else {
				if (!list.b) {
					return kept;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs,
						$temp$kept = A2($elm$core$List$cons, x, kept);
					n = $temp$n;
					list = $temp$list;
					kept = $temp$kept;
					continue takeReverse;
				}
			}
		}
	});
var $elm$core$List$takeTailRec = F2(
	function (n, list) {
		return $elm$core$List$reverse(
			A3($elm$core$List$takeReverse, n, list, _List_Nil));
	});
var $elm$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (n <= 0) {
			return _List_Nil;
		} else {
			var _v0 = _Utils_Tuple2(n, list);
			_v0$1:
			while (true) {
				_v0$5:
				while (true) {
					if (!_v0.b.b) {
						return list;
					} else {
						if (_v0.b.b.b) {
							switch (_v0.a) {
								case 1:
									break _v0$1;
								case 2:
									var _v2 = _v0.b;
									var x = _v2.a;
									var _v3 = _v2.b;
									var y = _v3.a;
									return _List_fromArray(
										[x, y]);
								case 3:
									if (_v0.b.b.b.b) {
										var _v4 = _v0.b;
										var x = _v4.a;
										var _v5 = _v4.b;
										var y = _v5.a;
										var _v6 = _v5.b;
										var z = _v6.a;
										return _List_fromArray(
											[x, y, z]);
									} else {
										break _v0$5;
									}
								default:
									if (_v0.b.b.b.b && _v0.b.b.b.b.b) {
										var _v7 = _v0.b;
										var x = _v7.a;
										var _v8 = _v7.b;
										var y = _v8.a;
										var _v9 = _v8.b;
										var z = _v9.a;
										var _v10 = _v9.b;
										var w = _v10.a;
										var tl = _v10.b;
										return (ctr > 1000) ? A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));
									} else {
										break _v0$5;
									}
							}
						} else {
							if (_v0.a === 1) {
								break _v0$1;
							} else {
								break _v0$5;
							}
						}
					}
				}
				return list;
			}
			var _v1 = _v0.b;
			var x = _v1.a;
			return _List_fromArray(
				[x]);
		}
	});
var $elm$core$List$take = F2(
	function (n, list) {
		return A3($elm$core$List$takeFast, 0, n, list);
	});
var $elm$time$Time$toYear = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).dp;
	});
var $ryannhg$date_format$DateFormat$dayOfYear = F2(
	function (zone, posix) {
		var monthsBeforeThisOne = A2(
			$elm$core$List$take,
			A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix) - 1,
			$ryannhg$date_format$DateFormat$months);
		var daysBeforeThisMonth = $elm$core$List$sum(
			A2(
				$elm$core$List$map,
				$ryannhg$date_format$DateFormat$daysInMonth(
					A2($elm$time$Time$toYear, zone, posix)),
				monthsBeforeThisOne));
		return daysBeforeThisMonth + A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix);
	});
var $ryannhg$date_format$DateFormat$quarter = F2(
	function (zone, posix) {
		return (A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix) / 4) | 0;
	});
var $elm$core$String$right = F2(
	function (n, string) {
		return (n < 1) ? '' : A3(
			$elm$core$String$slice,
			-n,
			$elm$core$String$length(string),
			string);
	});
var $ryannhg$date_format$DateFormat$toFixedLength = F2(
	function (totalChars, num) {
		var numStr = $elm$core$String$fromInt(num);
		var numZerosNeeded = totalChars - $elm$core$String$length(numStr);
		var zeros = A2(
			$elm$core$String$join,
			'',
			A2(
				$elm$core$List$map,
				function (_v0) {
					return '0';
				},
				A2($elm$core$List$range, 1, numZerosNeeded)));
		return _Utils_ap(zeros, numStr);
	});
var $elm$time$Time$toMillis = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			1000,
			$elm$time$Time$posixToMillis(time));
	});
var $elm$time$Time$toMinute = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2($elm$time$Time$toAdjustedMinutes, zone, time));
	});
var $ryannhg$date_format$DateFormat$toNonMilitary = function (num) {
	return (!num) ? 12 : ((num <= 12) ? num : (num - 12));
};
var $elm$time$Time$toSecond = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				1000));
	});
var $elm$core$String$toUpper = _String_toUpper;
var $elm$time$Time$Posix = $elm$core$Basics$identity;
var $elm$time$Time$millisToPosix = $elm$core$Basics$identity;
var $ryannhg$date_format$DateFormat$millisecondsPerYear = $elm$core$Basics$round((((1000 * 60) * 60) * 24) * 365.25);
var $ryannhg$date_format$DateFormat$firstDayOfYear = F2(
	function (zone, time) {
		return $elm$time$Time$millisToPosix(
			$ryannhg$date_format$DateFormat$millisecondsPerYear * A2($elm$time$Time$toYear, zone, time));
	});
var $ryannhg$date_format$DateFormat$weekOfYear = F2(
	function (zone, posix) {
		var firstDay = A2($ryannhg$date_format$DateFormat$firstDayOfYear, zone, posix);
		var firstDayOffset = A2($ryannhg$date_format$DateFormat$dayOfWeek, zone, firstDay);
		var daysSoFar = A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix);
		return (((daysSoFar + firstDayOffset) / 7) | 0) + 1;
	});
var $ryannhg$date_format$DateFormat$year = F2(
	function (zone, time) {
		return $elm$core$String$fromInt(
			A2($elm$time$Time$toYear, zone, time));
	});
var $ryannhg$date_format$DateFormat$piece = F4(
	function (language, zone, posix, token) {
		switch (token.$) {
			case 0:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix));
			case 1:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.aZ(num));
				}(
					A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix));
			case 2:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($ryannhg$date_format$DateFormat$monthNumber_, zone, posix));
			case 3:
				return language.i9(
					A2($elm$time$Time$toMonth, zone, posix));
			case 4:
				return language.ja(
					A2($elm$time$Time$toMonth, zone, posix));
			case 17:
				return $elm$core$String$fromInt(
					1 + A2($ryannhg$date_format$DateFormat$quarter, zone, posix));
			case 18:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.aZ(num));
				}(
					1 + A2($ryannhg$date_format$DateFormat$quarter, zone, posix));
			case 5:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix));
			case 6:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.aZ(num));
				}(
					A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix));
			case 7:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($ryannhg$date_format$DateFormat$dayOfMonth, zone, posix));
			case 8:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix));
			case 9:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.aZ(num));
				}(
					A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix));
			case 10:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					3,
					A2($ryannhg$date_format$DateFormat$dayOfYear, zone, posix));
			case 11:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$dayOfWeek, zone, posix));
			case 12:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.aZ(num));
				}(
					A2($ryannhg$date_format$DateFormat$dayOfWeek, zone, posix));
			case 13:
				return language.jg(
					A2($elm$time$Time$toWeekday, zone, posix));
			case 14:
				return language.jh(
					A2($elm$time$Time$toWeekday, zone, posix));
			case 19:
				return $elm$core$String$fromInt(
					A2($ryannhg$date_format$DateFormat$weekOfYear, zone, posix));
			case 20:
				return function (num) {
					return _Utils_ap(
						$elm$core$String$fromInt(num),
						language.aZ(num));
				}(
					A2($ryannhg$date_format$DateFormat$weekOfYear, zone, posix));
			case 21:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($ryannhg$date_format$DateFormat$weekOfYear, zone, posix));
			case 15:
				return A2(
					$elm$core$String$right,
					2,
					A2($ryannhg$date_format$DateFormat$year, zone, posix));
			case 16:
				return A2($ryannhg$date_format$DateFormat$year, zone, posix);
			case 22:
				return $elm$core$String$toUpper(
					A3($ryannhg$date_format$DateFormat$amPm, language, zone, posix));
			case 23:
				return $elm$core$String$toLower(
					A3($ryannhg$date_format$DateFormat$amPm, language, zone, posix));
			case 24:
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toHour, zone, posix));
			case 25:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($elm$time$Time$toHour, zone, posix));
			case 26:
				return $elm$core$String$fromInt(
					$ryannhg$date_format$DateFormat$toNonMilitary(
						A2($elm$time$Time$toHour, zone, posix)));
			case 27:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					$ryannhg$date_format$DateFormat$toNonMilitary(
						A2($elm$time$Time$toHour, zone, posix)));
			case 28:
				return $elm$core$String$fromInt(
					1 + A2($elm$time$Time$toHour, zone, posix));
			case 29:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					1 + A2($elm$time$Time$toHour, zone, posix));
			case 30:
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toMinute, zone, posix));
			case 31:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($elm$time$Time$toMinute, zone, posix));
			case 32:
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toSecond, zone, posix));
			case 33:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					2,
					A2($elm$time$Time$toSecond, zone, posix));
			case 34:
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toMillis, zone, posix));
			case 35:
				return A2(
					$ryannhg$date_format$DateFormat$toFixedLength,
					3,
					A2($elm$time$Time$toMillis, zone, posix));
			default:
				var string = token.a;
				return string;
		}
	});
var $ryannhg$date_format$DateFormat$formatWithLanguage = F4(
	function (language, tokens, zone, time) {
		return A2(
			$elm$core$String$join,
			'',
			A2(
				$elm$core$List$map,
				A3($ryannhg$date_format$DateFormat$piece, language, zone, time),
				tokens));
	});
var $ryannhg$date_format$DateFormat$format = $ryannhg$date_format$DateFormat$formatWithLanguage($ryannhg$date_format$DateFormat$Language$english);
var $ryannhg$date_format$DateFormat$HourMilitaryFixed = {$: 25};
var $ryannhg$date_format$DateFormat$hourMilitaryFixed = $ryannhg$date_format$DateFormat$HourMilitaryFixed;
var $ryannhg$date_format$DateFormat$MinuteFixed = {$: 31};
var $ryannhg$date_format$DateFormat$minuteFixed = $ryannhg$date_format$DateFormat$MinuteFixed;
var $ryannhg$date_format$DateFormat$Text = function (a) {
	return {$: 36, a: a};
};
var $ryannhg$date_format$DateFormat$text = $ryannhg$date_format$DateFormat$Text;
var $author$project$Internal$Svg$formatClock = $ryannhg$date_format$DateFormat$format(
	_List_fromArray(
		[
			$ryannhg$date_format$DateFormat$hourMilitaryFixed,
			$ryannhg$date_format$DateFormat$text(':'),
			$ryannhg$date_format$DateFormat$minuteFixed
		]));
var $ryannhg$date_format$DateFormat$MillisecondFixed = {$: 35};
var $ryannhg$date_format$DateFormat$millisecondFixed = $ryannhg$date_format$DateFormat$MillisecondFixed;
var $ryannhg$date_format$DateFormat$SecondFixed = {$: 33};
var $ryannhg$date_format$DateFormat$secondFixed = $ryannhg$date_format$DateFormat$SecondFixed;
var $author$project$Internal$Svg$formatClockMillis = $ryannhg$date_format$DateFormat$format(
	_List_fromArray(
		[
			$ryannhg$date_format$DateFormat$hourMilitaryFixed,
			$ryannhg$date_format$DateFormat$text(':'),
			$ryannhg$date_format$DateFormat$minuteFixed,
			$ryannhg$date_format$DateFormat$text(':'),
			$ryannhg$date_format$DateFormat$secondFixed,
			$ryannhg$date_format$DateFormat$text(':'),
			$ryannhg$date_format$DateFormat$millisecondFixed
		]));
var $author$project$Internal$Svg$formatClockSecond = $ryannhg$date_format$DateFormat$format(
	_List_fromArray(
		[
			$ryannhg$date_format$DateFormat$hourMilitaryFixed,
			$ryannhg$date_format$DateFormat$text(':'),
			$ryannhg$date_format$DateFormat$minuteFixed,
			$ryannhg$date_format$DateFormat$text(':'),
			$ryannhg$date_format$DateFormat$secondFixed
		]));
var $ryannhg$date_format$DateFormat$DayOfMonthNumber = {$: 5};
var $ryannhg$date_format$DateFormat$dayOfMonthNumber = $ryannhg$date_format$DateFormat$DayOfMonthNumber;
var $ryannhg$date_format$DateFormat$MonthNumber = {$: 0};
var $ryannhg$date_format$DateFormat$monthNumber = $ryannhg$date_format$DateFormat$MonthNumber;
var $author$project$Internal$Svg$formatDate = $ryannhg$date_format$DateFormat$format(
	_List_fromArray(
		[
			$ryannhg$date_format$DateFormat$monthNumber,
			$ryannhg$date_format$DateFormat$text('/'),
			$ryannhg$date_format$DateFormat$dayOfMonthNumber
		]));
var $ryannhg$date_format$DateFormat$MonthNameAbbreviated = {$: 3};
var $ryannhg$date_format$DateFormat$monthNameAbbreviated = $ryannhg$date_format$DateFormat$MonthNameAbbreviated;
var $author$project$Internal$Svg$formatMonth = $ryannhg$date_format$DateFormat$format(
	_List_fromArray(
		[$ryannhg$date_format$DateFormat$monthNameAbbreviated]));
var $ryannhg$date_format$DateFormat$DayOfWeekNameFull = {$: 14};
var $ryannhg$date_format$DateFormat$dayOfWeekNameFull = $ryannhg$date_format$DateFormat$DayOfWeekNameFull;
var $author$project$Internal$Svg$formatWeekday = $ryannhg$date_format$DateFormat$format(
	_List_fromArray(
		[$ryannhg$date_format$DateFormat$dayOfWeekNameFull]));
var $ryannhg$date_format$DateFormat$YearNumber = {$: 16};
var $ryannhg$date_format$DateFormat$yearNumber = $ryannhg$date_format$DateFormat$YearNumber;
var $author$project$Internal$Svg$formatYear = $ryannhg$date_format$DateFormat$format(
	_List_fromArray(
		[$ryannhg$date_format$DateFormat$yearNumber]));
var $author$project$Internal$Svg$formatTime = F2(
	function (zone, time) {
		var _v0 = A2($elm$core$Maybe$withDefault, time.jo, time.ha);
		switch (_v0) {
			case 0:
				return A2($author$project$Internal$Svg$formatClockMillis, zone, time.i4);
			case 1:
				return A2($author$project$Internal$Svg$formatClockSecond, zone, time.i4);
			case 2:
				return A2($author$project$Internal$Svg$formatClock, zone, time.i4);
			case 3:
				return A2($author$project$Internal$Svg$formatClock, zone, time.i4);
			case 4:
				return (time.h6 === 7) ? A2($author$project$Internal$Svg$formatWeekday, zone, time.i4) : A2($author$project$Internal$Svg$formatDate, zone, time.i4);
			case 5:
				return A2($author$project$Internal$Svg$formatMonth, zone, time.i4);
			default:
				return A2($author$project$Internal$Svg$formatYear, zone, time.i4);
		}
	});
var $author$project$Chart$Svg$formatTime = $author$project$Internal$Svg$formatTime;
var $author$project$Internal$Svg$generate = F3(
	function (amount, _v0, limits) {
		var func = _v0;
		return A2(func, amount, limits);
	});
var $author$project$Chart$Svg$generate = $author$project$Internal$Svg$generate;
var $terezka$intervals$Intervals$ints = F2(
	function (amount, range) {
		return A2(
			$elm$core$List$map,
			$elm$core$Basics$round,
			function () {
				if (!amount.$) {
					var number = amount.a;
					return A4($terezka$intervals$Intervals$values, false, true, number, range);
				} else {
					var number = amount.a;
					return A4($terezka$intervals$Intervals$values, false, false, number, range);
				}
			}());
	});
var $author$project$Internal$Svg$ints = F2(
	function (i, b) {
		return A2(
			$terezka$intervals$Intervals$ints,
			$terezka$intervals$Intervals$around(i),
			{J: b.J, Y: b.Y});
	});
var $author$project$Chart$Svg$ints = $author$project$Internal$Svg$ints;
var $terezka$intervals$Intervals$Day = 4;
var $terezka$intervals$Intervals$Hour = 3;
var $terezka$intervals$Intervals$Millisecond = 0;
var $terezka$intervals$Intervals$Minute = 2;
var $terezka$intervals$Intervals$Month = 5;
var $terezka$intervals$Intervals$Second = 1;
var $terezka$intervals$Intervals$Year = 6;
var $justinmimbs$time_extra$Time$Extra$Day = 11;
var $justinmimbs$date$Date$Days = 3;
var $justinmimbs$time_extra$Time$Extra$Millisecond = 15;
var $justinmimbs$time_extra$Time$Extra$Month = 2;
var $justinmimbs$date$Date$Months = 1;
var $justinmimbs$date$Date$RD = $elm$core$Basics$identity;
var $justinmimbs$date$Date$isLeapYear = function (y) {
	return ((!A2($elm$core$Basics$modBy, 4, y)) && (!(!A2($elm$core$Basics$modBy, 100, y)))) || (!A2($elm$core$Basics$modBy, 400, y));
};
var $justinmimbs$date$Date$daysBeforeMonth = F2(
	function (y, m) {
		var leapDays = $justinmimbs$date$Date$isLeapYear(y) ? 1 : 0;
		switch (m) {
			case 0:
				return 0;
			case 1:
				return 31;
			case 2:
				return 59 + leapDays;
			case 3:
				return 90 + leapDays;
			case 4:
				return 120 + leapDays;
			case 5:
				return 151 + leapDays;
			case 6:
				return 181 + leapDays;
			case 7:
				return 212 + leapDays;
			case 8:
				return 243 + leapDays;
			case 9:
				return 273 + leapDays;
			case 10:
				return 304 + leapDays;
			default:
				return 334 + leapDays;
		}
	});
var $justinmimbs$date$Date$floorDiv = F2(
	function (a, b) {
		return $elm$core$Basics$floor(a / b);
	});
var $justinmimbs$date$Date$daysBeforeYear = function (y1) {
	var y = y1 - 1;
	var leapYears = (A2($justinmimbs$date$Date$floorDiv, y, 4) - A2($justinmimbs$date$Date$floorDiv, y, 100)) + A2($justinmimbs$date$Date$floorDiv, y, 400);
	return (365 * y) + leapYears;
};
var $justinmimbs$date$Date$daysInMonth = F2(
	function (y, m) {
		switch (m) {
			case 0:
				return 31;
			case 1:
				return $justinmimbs$date$Date$isLeapYear(y) ? 29 : 28;
			case 2:
				return 31;
			case 3:
				return 30;
			case 4:
				return 31;
			case 5:
				return 30;
			case 6:
				return 31;
			case 7:
				return 31;
			case 8:
				return 30;
			case 9:
				return 31;
			case 10:
				return 30;
			default:
				return 31;
		}
	});
var $justinmimbs$date$Date$monthToNumber = function (m) {
	switch (m) {
		case 0:
			return 1;
		case 1:
			return 2;
		case 2:
			return 3;
		case 3:
			return 4;
		case 4:
			return 5;
		case 5:
			return 6;
		case 6:
			return 7;
		case 7:
			return 8;
		case 8:
			return 9;
		case 9:
			return 10;
		case 10:
			return 11;
		default:
			return 12;
	}
};
var $justinmimbs$date$Date$numberToMonth = function (mn) {
	var _v0 = A2($elm$core$Basics$max, 1, mn);
	switch (_v0) {
		case 1:
			return 0;
		case 2:
			return 1;
		case 3:
			return 2;
		case 4:
			return 3;
		case 5:
			return 4;
		case 6:
			return 5;
		case 7:
			return 6;
		case 8:
			return 7;
		case 9:
			return 8;
		case 10:
			return 9;
		case 11:
			return 10;
		default:
			return 11;
	}
};
var $justinmimbs$date$Date$toCalendarDateHelp = F3(
	function (y, m, d) {
		toCalendarDateHelp:
		while (true) {
			var monthDays = A2($justinmimbs$date$Date$daysInMonth, y, m);
			var mn = $justinmimbs$date$Date$monthToNumber(m);
			if ((mn < 12) && (_Utils_cmp(d, monthDays) > 0)) {
				var $temp$y = y,
					$temp$m = $justinmimbs$date$Date$numberToMonth(mn + 1),
					$temp$d = d - monthDays;
				y = $temp$y;
				m = $temp$m;
				d = $temp$d;
				continue toCalendarDateHelp;
			} else {
				return {e5: d, fC: m, dp: y};
			}
		}
	});
var $justinmimbs$date$Date$divWithRemainder = F2(
	function (a, b) {
		return _Utils_Tuple2(
			A2($justinmimbs$date$Date$floorDiv, a, b),
			A2($elm$core$Basics$modBy, b, a));
	});
var $justinmimbs$date$Date$year = function (_v0) {
	var rd = _v0;
	var _v1 = A2($justinmimbs$date$Date$divWithRemainder, rd, 146097);
	var n400 = _v1.a;
	var r400 = _v1.b;
	var _v2 = A2($justinmimbs$date$Date$divWithRemainder, r400, 36524);
	var n100 = _v2.a;
	var r100 = _v2.b;
	var _v3 = A2($justinmimbs$date$Date$divWithRemainder, r100, 1461);
	var n4 = _v3.a;
	var r4 = _v3.b;
	var _v4 = A2($justinmimbs$date$Date$divWithRemainder, r4, 365);
	var n1 = _v4.a;
	var r1 = _v4.b;
	var n = (!r1) ? 0 : 1;
	return ((((n400 * 400) + (n100 * 100)) + (n4 * 4)) + n1) + n;
};
var $justinmimbs$date$Date$toOrdinalDate = function (_v0) {
	var rd = _v0;
	var y = $justinmimbs$date$Date$year(rd);
	return {
		eu: rd - $justinmimbs$date$Date$daysBeforeYear(y),
		dp: y
	};
};
var $justinmimbs$date$Date$toCalendarDate = function (_v0) {
	var rd = _v0;
	var date = $justinmimbs$date$Date$toOrdinalDate(rd);
	return A3($justinmimbs$date$Date$toCalendarDateHelp, date.dp, 0, date.eu);
};
var $justinmimbs$date$Date$add = F3(
	function (unit, n, _v0) {
		var rd = _v0;
		switch (unit) {
			case 0:
				return A3($justinmimbs$date$Date$add, 1, 12 * n, rd);
			case 1:
				var date = $justinmimbs$date$Date$toCalendarDate(rd);
				var wholeMonths = ((12 * (date.dp - 1)) + ($justinmimbs$date$Date$monthToNumber(date.fC) - 1)) + n;
				var m = $justinmimbs$date$Date$numberToMonth(
					A2($elm$core$Basics$modBy, 12, wholeMonths) + 1);
				var y = A2($justinmimbs$date$Date$floorDiv, wholeMonths, 12) + 1;
				return ($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + A2(
					$elm$core$Basics$min,
					date.e5,
					A2($justinmimbs$date$Date$daysInMonth, y, m));
			case 2:
				return rd + (7 * n);
			default:
				return rd + n;
		}
	});
var $justinmimbs$date$Date$fromCalendarDate = F3(
	function (y, m, d) {
		return ($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + A3(
			$elm$core$Basics$clamp,
			1,
			A2($justinmimbs$date$Date$daysInMonth, y, m),
			d);
	});
var $justinmimbs$date$Date$fromPosix = F2(
	function (zone, posix) {
		return A3(
			$justinmimbs$date$Date$fromCalendarDate,
			A2($elm$time$Time$toYear, zone, posix),
			A2($elm$time$Time$toMonth, zone, posix),
			A2($elm$time$Time$toDay, zone, posix));
	});
var $justinmimbs$date$Date$toRataDie = function (_v0) {
	var rd = _v0;
	return rd;
};
var $justinmimbs$time_extra$Time$Extra$dateToMillis = function (date) {
	var daysSinceEpoch = $justinmimbs$date$Date$toRataDie(date) - 719163;
	return daysSinceEpoch * 86400000;
};
var $justinmimbs$time_extra$Time$Extra$timeFromClock = F4(
	function (hour, minute, second, millisecond) {
		return (((hour * 3600000) + (minute * 60000)) + (second * 1000)) + millisecond;
	});
var $justinmimbs$time_extra$Time$Extra$timeFromPosix = F2(
	function (zone, posix) {
		return A4(
			$justinmimbs$time_extra$Time$Extra$timeFromClock,
			A2($elm$time$Time$toHour, zone, posix),
			A2($elm$time$Time$toMinute, zone, posix),
			A2($elm$time$Time$toSecond, zone, posix),
			A2($elm$time$Time$toMillis, zone, posix));
	});
var $justinmimbs$time_extra$Time$Extra$toOffset = F2(
	function (zone, posix) {
		var millis = $elm$time$Time$posixToMillis(posix);
		var localMillis = $justinmimbs$time_extra$Time$Extra$dateToMillis(
			A2($justinmimbs$date$Date$fromPosix, zone, posix)) + A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix);
		return ((localMillis - millis) / 60000) | 0;
	});
var $justinmimbs$time_extra$Time$Extra$posixFromDateTime = F3(
	function (zone, date, time) {
		var millis = $justinmimbs$time_extra$Time$Extra$dateToMillis(date) + time;
		var offset0 = A2(
			$justinmimbs$time_extra$Time$Extra$toOffset,
			zone,
			$elm$time$Time$millisToPosix(millis));
		var posix1 = $elm$time$Time$millisToPosix(millis - (offset0 * 60000));
		var offset1 = A2($justinmimbs$time_extra$Time$Extra$toOffset, zone, posix1);
		if (_Utils_eq(offset0, offset1)) {
			return posix1;
		} else {
			var posix2 = $elm$time$Time$millisToPosix(millis - (offset1 * 60000));
			var offset2 = A2($justinmimbs$time_extra$Time$Extra$toOffset, zone, posix2);
			return _Utils_eq(offset1, offset2) ? posix2 : posix1;
		}
	});
var $justinmimbs$time_extra$Time$Extra$add = F4(
	function (interval, n, zone, posix) {
		add:
		while (true) {
			switch (interval) {
				case 15:
					return $elm$time$Time$millisToPosix(
						$elm$time$Time$posixToMillis(posix) + n);
				case 14:
					var $temp$interval = 15,
						$temp$n = n * 1000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 13:
					var $temp$interval = 15,
						$temp$n = n * 60000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 12:
					var $temp$interval = 15,
						$temp$n = n * 3600000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 11:
					return A3(
						$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
						zone,
						A3(
							$justinmimbs$date$Date$add,
							3,
							n,
							A2($justinmimbs$date$Date$fromPosix, zone, posix)),
						A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix));
				case 2:
					return A3(
						$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
						zone,
						A3(
							$justinmimbs$date$Date$add,
							1,
							n,
							A2($justinmimbs$date$Date$fromPosix, zone, posix)),
						A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix));
				case 0:
					var $temp$interval = 2,
						$temp$n = n * 12,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 1:
					var $temp$interval = 2,
						$temp$n = n * 3,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 3:
					var $temp$interval = 11,
						$temp$n = n * 7,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				default:
					var weekday = interval;
					var $temp$interval = 11,
						$temp$n = n * 7,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
			}
		}
	});
var $justinmimbs$time_extra$Time$Extra$Week = 3;
var $justinmimbs$date$Date$Day = 11;
var $justinmimbs$date$Date$Friday = 8;
var $justinmimbs$date$Date$Monday = 4;
var $justinmimbs$date$Date$Month = 2;
var $justinmimbs$date$Date$Quarter = 1;
var $justinmimbs$date$Date$Saturday = 9;
var $justinmimbs$date$Date$Sunday = 10;
var $justinmimbs$date$Date$Thursday = 7;
var $justinmimbs$date$Date$Tuesday = 5;
var $justinmimbs$date$Date$Wednesday = 6;
var $justinmimbs$date$Date$Week = 3;
var $justinmimbs$date$Date$Year = 0;
var $justinmimbs$date$Date$weekdayNumber = function (_v0) {
	var rd = _v0;
	var _v1 = A2($elm$core$Basics$modBy, 7, rd);
	if (!_v1) {
		return 7;
	} else {
		var n = _v1;
		return n;
	}
};
var $justinmimbs$date$Date$weekdayToNumber = function (wd) {
	switch (wd) {
		case 0:
			return 1;
		case 1:
			return 2;
		case 2:
			return 3;
		case 3:
			return 4;
		case 4:
			return 5;
		case 5:
			return 6;
		default:
			return 7;
	}
};
var $justinmimbs$date$Date$daysSincePreviousWeekday = F2(
	function (wd, date) {
		return A2(
			$elm$core$Basics$modBy,
			7,
			($justinmimbs$date$Date$weekdayNumber(date) + 7) - $justinmimbs$date$Date$weekdayToNumber(wd));
	});
var $justinmimbs$date$Date$firstOfMonth = F2(
	function (y, m) {
		return ($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + 1;
	});
var $justinmimbs$date$Date$firstOfYear = function (y) {
	return $justinmimbs$date$Date$daysBeforeYear(y) + 1;
};
var $justinmimbs$date$Date$month = A2(
	$elm$core$Basics$composeR,
	$justinmimbs$date$Date$toCalendarDate,
	function ($) {
		return $.fC;
	});
var $justinmimbs$date$Date$monthToQuarter = function (m) {
	return (($justinmimbs$date$Date$monthToNumber(m) + 2) / 3) | 0;
};
var $justinmimbs$date$Date$quarter = A2($elm$core$Basics$composeR, $justinmimbs$date$Date$month, $justinmimbs$date$Date$monthToQuarter);
var $justinmimbs$date$Date$quarterToMonth = function (q) {
	return $justinmimbs$date$Date$numberToMonth((q * 3) - 2);
};
var $justinmimbs$date$Date$floor = F2(
	function (interval, date) {
		var rd = date;
		switch (interval) {
			case 0:
				return $justinmimbs$date$Date$firstOfYear(
					$justinmimbs$date$Date$year(date));
			case 1:
				return A2(
					$justinmimbs$date$Date$firstOfMonth,
					$justinmimbs$date$Date$year(date),
					$justinmimbs$date$Date$quarterToMonth(
						$justinmimbs$date$Date$quarter(date)));
			case 2:
				return A2(
					$justinmimbs$date$Date$firstOfMonth,
					$justinmimbs$date$Date$year(date),
					$justinmimbs$date$Date$month(date));
			case 3:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 0, date);
			case 4:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 0, date);
			case 5:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 1, date);
			case 6:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 2, date);
			case 7:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 3, date);
			case 8:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 4, date);
			case 9:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 5, date);
			case 10:
				return rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, 6, date);
			default:
				return date;
		}
	});
var $justinmimbs$time_extra$Time$Extra$floorDate = F3(
	function (dateInterval, zone, posix) {
		return A3(
			$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
			zone,
			A2(
				$justinmimbs$date$Date$floor,
				dateInterval,
				A2($justinmimbs$date$Date$fromPosix, zone, posix)),
			0);
	});
var $justinmimbs$time_extra$Time$Extra$floor = F3(
	function (interval, zone, posix) {
		switch (interval) {
			case 15:
				return posix;
			case 14:
				return A3(
					$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
					zone,
					A2($justinmimbs$date$Date$fromPosix, zone, posix),
					A4(
						$justinmimbs$time_extra$Time$Extra$timeFromClock,
						A2($elm$time$Time$toHour, zone, posix),
						A2($elm$time$Time$toMinute, zone, posix),
						A2($elm$time$Time$toSecond, zone, posix),
						0));
			case 13:
				return A3(
					$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
					zone,
					A2($justinmimbs$date$Date$fromPosix, zone, posix),
					A4(
						$justinmimbs$time_extra$Time$Extra$timeFromClock,
						A2($elm$time$Time$toHour, zone, posix),
						A2($elm$time$Time$toMinute, zone, posix),
						0,
						0));
			case 12:
				return A3(
					$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
					zone,
					A2($justinmimbs$date$Date$fromPosix, zone, posix),
					A4(
						$justinmimbs$time_extra$Time$Extra$timeFromClock,
						A2($elm$time$Time$toHour, zone, posix),
						0,
						0,
						0));
			case 11:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 11, zone, posix);
			case 2:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 2, zone, posix);
			case 0:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 0, zone, posix);
			case 1:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 1, zone, posix);
			case 3:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 3, zone, posix);
			case 4:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 4, zone, posix);
			case 5:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 5, zone, posix);
			case 6:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 6, zone, posix);
			case 7:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 7, zone, posix);
			case 8:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 8, zone, posix);
			case 9:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 9, zone, posix);
			default:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, 10, zone, posix);
		}
	});
var $justinmimbs$time_extra$Time$Extra$ceiling = F3(
	function (interval, zone, posix) {
		var floored = A3($justinmimbs$time_extra$Time$Extra$floor, interval, zone, posix);
		return _Utils_eq(floored, posix) ? posix : A4($justinmimbs$time_extra$Time$Extra$add, interval, 1, zone, floored);
	});
var $terezka$intervals$Intervals$Time$ceilingDay = F3(
	function (zone, mult, stamp) {
		return (mult === 7) ? A3($justinmimbs$time_extra$Time$Extra$ceiling, 3, zone, stamp) : A3($justinmimbs$time_extra$Time$Extra$ceiling, 11, zone, stamp);
	});
var $justinmimbs$time_extra$Time$Extra$Hour = 12;
var $justinmimbs$time_extra$Time$Extra$partsToPosix = F2(
	function (zone, _v0) {
		var year = _v0.dp;
		var month = _v0.fC;
		var day = _v0.e5;
		var hour = _v0.eg;
		var minute = _v0.eq;
		var second = _v0.eA;
		var millisecond = _v0.ep;
		return A3(
			$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
			zone,
			A3($justinmimbs$date$Date$fromCalendarDate, year, month, day),
			A4(
				$justinmimbs$time_extra$Time$Extra$timeFromClock,
				A3($elm$core$Basics$clamp, 0, 23, hour),
				A3($elm$core$Basics$clamp, 0, 59, minute),
				A3($elm$core$Basics$clamp, 0, 59, second),
				A3($elm$core$Basics$clamp, 0, 999, millisecond)));
	});
var $justinmimbs$time_extra$Time$Extra$posixToParts = F2(
	function (zone, posix) {
		return {
			e5: A2($elm$time$Time$toDay, zone, posix),
			eg: A2($elm$time$Time$toHour, zone, posix),
			ep: A2($elm$time$Time$toMillis, zone, posix),
			eq: A2($elm$time$Time$toMinute, zone, posix),
			fC: A2($elm$time$Time$toMonth, zone, posix),
			eA: A2($elm$time$Time$toSecond, zone, posix),
			dp: A2($elm$time$Time$toYear, zone, posix)
		};
	});
var $terezka$intervals$Intervals$Time$ceilingHour = F3(
	function (zone, mult, stamp) {
		var parts = A2(
			$justinmimbs$time_extra$Time$Extra$posixToParts,
			zone,
			A3($justinmimbs$time_extra$Time$Extra$ceiling, 12, zone, stamp));
		var rem = parts.eg % mult;
		return (!rem) ? A2($justinmimbs$time_extra$Time$Extra$partsToPosix, zone, parts) : A4($justinmimbs$time_extra$Time$Extra$add, 12, mult - rem, zone, stamp);
	});
var $justinmimbs$time_extra$Time$Extra$Minute = 13;
var $terezka$intervals$Intervals$Time$ceilingMinute = F3(
	function (zone, mult, stamp) {
		var parts = A2(
			$justinmimbs$time_extra$Time$Extra$posixToParts,
			zone,
			A3($justinmimbs$time_extra$Time$Extra$ceiling, 13, zone, stamp));
		var rem = parts.eq % mult;
		return (!rem) ? A2($justinmimbs$time_extra$Time$Extra$partsToPosix, zone, parts) : A4($justinmimbs$time_extra$Time$Extra$add, 13, mult - rem, zone, stamp);
	});
var $terezka$intervals$Intervals$Time$intAsMonth = function (_int) {
	switch (_int) {
		case 1:
			return 0;
		case 2:
			return 1;
		case 3:
			return 2;
		case 4:
			return 3;
		case 5:
			return 4;
		case 6:
			return 5;
		case 7:
			return 6;
		case 8:
			return 7;
		case 9:
			return 8;
		case 10:
			return 9;
		case 11:
			return 10;
		case 12:
			return 11;
		default:
			return 11;
	}
};
var $terezka$intervals$Intervals$Time$monthAsInt = function (month) {
	switch (month) {
		case 0:
			return 1;
		case 1:
			return 2;
		case 2:
			return 3;
		case 3:
			return 4;
		case 4:
			return 5;
		case 5:
			return 6;
		case 6:
			return 7;
		case 7:
			return 8;
		case 8:
			return 9;
		case 9:
			return 10;
		case 10:
			return 11;
		default:
			return 12;
	}
};
var $terezka$intervals$Intervals$Time$ceilingMonth = F3(
	function (zone, mult, stamp) {
		var parts = A2(
			$justinmimbs$time_extra$Time$Extra$posixToParts,
			zone,
			A3($justinmimbs$time_extra$Time$Extra$ceiling, 2, zone, stamp));
		var monthInt = $terezka$intervals$Intervals$Time$monthAsInt(parts.fC);
		var rem = (monthInt - 1) % mult;
		var newMonth = (!rem) ? monthInt : ((monthInt - rem) + mult);
		return A2(
			$justinmimbs$time_extra$Time$Extra$partsToPosix,
			zone,
			(newMonth > 12) ? _Utils_update(
				parts,
				{
					fC: $terezka$intervals$Intervals$Time$intAsMonth(newMonth - 12),
					dp: parts.dp + 1
				}) : _Utils_update(
				parts,
				{
					fC: $terezka$intervals$Intervals$Time$intAsMonth(newMonth)
				}));
	});
var $terezka$intervals$Intervals$Time$ceilingMs = F3(
	function (zone, mult, stamp) {
		var parts = A2($justinmimbs$time_extra$Time$Extra$posixToParts, zone, stamp);
		var rem = parts.ep % mult;
		return (!rem) ? A2($justinmimbs$time_extra$Time$Extra$partsToPosix, zone, parts) : A4($justinmimbs$time_extra$Time$Extra$add, 15, mult - rem, zone, stamp);
	});
var $justinmimbs$time_extra$Time$Extra$Second = 14;
var $terezka$intervals$Intervals$Time$ceilingSecond = F3(
	function (zone, mult, stamp) {
		var parts = A2(
			$justinmimbs$time_extra$Time$Extra$posixToParts,
			zone,
			A3($justinmimbs$time_extra$Time$Extra$ceiling, 14, zone, stamp));
		var rem = parts.eA % mult;
		return (!rem) ? A2($justinmimbs$time_extra$Time$Extra$partsToPosix, zone, parts) : A4($justinmimbs$time_extra$Time$Extra$add, 14, mult - rem, zone, stamp);
	});
var $justinmimbs$time_extra$Time$Extra$Year = 0;
var $terezka$intervals$Intervals$Time$ceilingYear = F3(
	function (zone, mult, stamp) {
		var parts = A2(
			$justinmimbs$time_extra$Time$Extra$posixToParts,
			zone,
			A3($justinmimbs$time_extra$Time$Extra$ceiling, 0, zone, stamp));
		var rem = parts.dp % mult;
		var newYear = (!rem) ? parts.dp : ((parts.dp - rem) + mult);
		return A2(
			$justinmimbs$time_extra$Time$Extra$partsToPosix,
			zone,
			_Utils_update(
				parts,
				{dp: newYear}));
	});
var $terezka$intervals$Intervals$Time$ceilingUnit = F3(
	function (zone, unit, mult) {
		switch (unit) {
			case 0:
				return A2($terezka$intervals$Intervals$Time$ceilingMs, zone, mult);
			case 1:
				return A2($terezka$intervals$Intervals$Time$ceilingSecond, zone, mult);
			case 2:
				return A2($terezka$intervals$Intervals$Time$ceilingMinute, zone, mult);
			case 3:
				return A2($terezka$intervals$Intervals$Time$ceilingHour, zone, mult);
			case 4:
				return A2($terezka$intervals$Intervals$Time$ceilingDay, zone, mult);
			case 5:
				return A2($terezka$intervals$Intervals$Time$ceilingMonth, zone, mult);
			default:
				return A2($terezka$intervals$Intervals$Time$ceilingYear, zone, mult);
		}
	});
var $terezka$intervals$Intervals$Time$Day = 4;
var $terezka$intervals$Intervals$Time$Hour = 3;
var $terezka$intervals$Intervals$Time$Millisecond = 0;
var $terezka$intervals$Intervals$Time$Minute = 2;
var $terezka$intervals$Intervals$Time$Month = 5;
var $terezka$intervals$Intervals$Time$Second = 1;
var $terezka$intervals$Intervals$Time$Year = 6;
var $terezka$intervals$Intervals$Time$getChange = F3(
	function (zone, a, b) {
		var bP = A2($justinmimbs$time_extra$Time$Extra$posixToParts, zone, b);
		var aP = A2($justinmimbs$time_extra$Time$Extra$posixToParts, zone, a);
		return (!_Utils_eq(aP.dp, bP.dp)) ? 6 : ((!_Utils_eq(aP.fC, bP.fC)) ? 5 : ((!_Utils_eq(aP.e5, bP.e5)) ? 4 : ((!_Utils_eq(aP.eg, bP.eg)) ? 3 : ((!_Utils_eq(aP.eq, bP.eq)) ? 2 : ((!_Utils_eq(aP.eA, bP.eA)) ? 1 : 0)))));
	});
var $danhandrea$elm_time_extra$Util$isLeapYear = function (year) {
	return (!A2($elm$core$Basics$modBy, 400, year)) || ((!(!A2($elm$core$Basics$modBy, 100, year))) && (!A2($elm$core$Basics$modBy, 4, year)));
};
var $danhandrea$elm_time_extra$Month$days = F2(
	function (year, month) {
		switch (month) {
			case 0:
				return 31;
			case 1:
				return $danhandrea$elm_time_extra$Util$isLeapYear(year) ? 29 : 28;
			case 2:
				return 31;
			case 3:
				return 30;
			case 4:
				return 31;
			case 5:
				return 30;
			case 6:
				return 31;
			case 7:
				return 31;
			case 8:
				return 30;
			case 9:
				return 31;
			case 10:
				return 30;
			default:
				return 31;
		}
	});
var $danhandrea$elm_time_extra$TimeExtra$daysInMonth = $danhandrea$elm_time_extra$Month$days;
var $terezka$intervals$Intervals$Time$toMs = $elm$time$Time$posixToMillis;
var $terezka$intervals$Intervals$Time$getDiff = F3(
	function (zone, a, b) {
		var _v0 = (_Utils_cmp(
			$terezka$intervals$Intervals$Time$toMs(a),
			$terezka$intervals$Intervals$Time$toMs(b)) < 0) ? _Utils_Tuple2(
			A2($justinmimbs$time_extra$Time$Extra$posixToParts, zone, a),
			A2($justinmimbs$time_extra$Time$Extra$posixToParts, zone, b)) : _Utils_Tuple2(
			A2($justinmimbs$time_extra$Time$Extra$posixToParts, zone, b),
			A2($justinmimbs$time_extra$Time$Extra$posixToParts, zone, a));
		var aP = _v0.a;
		var bP = _v0.b;
		var dMsX = bP.ep - aP.ep;
		var dMs = (dMsX < 0) ? (1000 + dMsX) : dMsX;
		var dSecondX = (bP.eA - aP.eA) + ((dMsX < 0) ? (-1) : 0);
		var dMinuteX = (bP.eq - aP.eq) + ((dSecondX < 0) ? (-1) : 0);
		var dHourX = (bP.eg - aP.eg) + ((dMinuteX < 0) ? (-1) : 0);
		var dDayX = (bP.e5 - aP.e5) + ((dHourX < 0) ? (-1) : 0);
		var dDay = (dDayX < 0) ? (A2($danhandrea$elm_time_extra$TimeExtra$daysInMonth, bP.dp, bP.fC) + dDayX) : dDayX;
		var dMonthX = ($terezka$intervals$Intervals$Time$monthAsInt(bP.fC) - $terezka$intervals$Intervals$Time$monthAsInt(aP.fC)) + ((dDayX < 0) ? (-1) : 0);
		var dMonth = (dMonthX < 0) ? (12 + dMonthX) : dMonthX;
		var dHour = (dHourX < 0) ? (24 + dHourX) : dHourX;
		var dMinute = (dMinuteX < 0) ? (60 + dMinuteX) : dMinuteX;
		var dSecond = (dSecondX < 0) ? (60 + dSecondX) : dSecondX;
		var dYearX = (bP.dp - aP.dp) + ((dMonthX < 0) ? (-1) : 0);
		var dYear = (dYearX < 0) ? ($terezka$intervals$Intervals$Time$monthAsInt(bP.fC) + dYearX) : dYearX;
		return {e5: dDay, eg: dHour, ep: dMs, eq: dMinute, fC: dMonth, eA: dSecond, dp: dYear};
	});
var $terezka$intervals$Intervals$Time$oneSecond = 1000;
var $terezka$intervals$Intervals$Time$oneMinute = $terezka$intervals$Intervals$Time$oneSecond * 60;
var $terezka$intervals$Intervals$Time$oneHour = $terezka$intervals$Intervals$Time$oneMinute * 60;
var $terezka$intervals$Intervals$Time$oneDay = $terezka$intervals$Intervals$Time$oneHour * 24;
var $terezka$intervals$Intervals$Time$oneMs = 1;
var $terezka$intervals$Intervals$Time$getNumOfTicks = F5(
	function (zone, unit, mult, a, b) {
		var div = F2(
			function (n1, n2) {
				return $elm$core$Basics$floor(n1 / n2);
			});
		var timeDiff = function (ms) {
			var ceiled = A4($terezka$intervals$Intervals$Time$ceilingUnit, zone, unit, mult, a);
			return (_Utils_cmp(
				$terezka$intervals$Intervals$Time$toMs(ceiled),
				$terezka$intervals$Intervals$Time$toMs(b)) > 0) ? (-1) : A2(
				div,
				A2(
					div,
					$terezka$intervals$Intervals$Time$toMs(b) - $terezka$intervals$Intervals$Time$toMs(ceiled),
					ms),
				mult);
		};
		var diff = function (property) {
			var ceiled = A4($terezka$intervals$Intervals$Time$ceilingUnit, zone, unit, mult, a);
			return (_Utils_cmp(
				$terezka$intervals$Intervals$Time$toMs(ceiled),
				$terezka$intervals$Intervals$Time$toMs(b)) > 0) ? (-1) : A2(
				div,
				property(
					A3($terezka$intervals$Intervals$Time$getDiff, zone, ceiled, b)),
				mult);
		};
		switch (unit) {
			case 0:
				return timeDiff($terezka$intervals$Intervals$Time$oneMs) + 1;
			case 1:
				return timeDiff($terezka$intervals$Intervals$Time$oneSecond) + 1;
			case 2:
				return timeDiff($terezka$intervals$Intervals$Time$oneMinute) + 1;
			case 3:
				return timeDiff($terezka$intervals$Intervals$Time$oneHour) + 1;
			case 4:
				return timeDiff($terezka$intervals$Intervals$Time$oneDay) + 1;
			case 5:
				return diff(
					function (d) {
						return d.fC + (d.dp * 12);
					}) + 1;
			default:
				return diff(
					function ($) {
						return $.dp;
					}) + 1;
		}
	});
var $terezka$intervals$Intervals$Time$largerUnit = function (unit) {
	switch (unit) {
		case 0:
			return $elm$core$Maybe$Just(1);
		case 1:
			return $elm$core$Maybe$Just(2);
		case 2:
			return $elm$core$Maybe$Just(3);
		case 3:
			return $elm$core$Maybe$Just(4);
		case 4:
			return $elm$core$Maybe$Just(5);
		case 5:
			return $elm$core$Maybe$Just(6);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $terezka$intervals$Intervals$Time$niceMultiples = function (unit) {
	switch (unit) {
		case 0:
			return _List_fromArray(
				[1, 2, 5, 10, 20, 25, 50, 100, 200, 500]);
		case 1:
			return _List_fromArray(
				[1, 2, 5, 10, 15, 30]);
		case 2:
			return _List_fromArray(
				[1, 2, 5, 10, 15, 30]);
		case 3:
			return _List_fromArray(
				[1, 2, 3, 4, 6, 8, 12]);
		case 4:
			return _List_fromArray(
				[1, 2, 3, 7, 14]);
		case 5:
			return _List_fromArray(
				[1, 2, 3, 4, 6]);
		default:
			return _List_fromArray(
				[1, 2, 5, 10, 20, 25, 50, 100, 200, 500, 1000, 10000, 1000000, 10000000]);
	}
};
var $terezka$intervals$Intervals$Time$toBestUnit = F4(
	function (zone, amount, min, max) {
		var toNice = function (unit) {
			toNice:
			while (true) {
				var niceNums = $terezka$intervals$Intervals$Time$niceMultiples(unit);
				var maybeNiceNum = A2(
					$elm$core$List$filter,
					function (n) {
						return _Utils_cmp(
							A5($terezka$intervals$Intervals$Time$getNumOfTicks, zone, unit, n, min, max),
							amount) < 1;
					},
					niceNums);
				var div = F2(
					function (n1, n2) {
						return $elm$core$Basics$ceiling(n1 / n2);
					});
				var _v0 = $elm$core$List$head(maybeNiceNum);
				if (!_v0.$) {
					var niceNum = _v0.a;
					return _Utils_Tuple2(unit, niceNum);
				} else {
					var _v1 = $terezka$intervals$Intervals$Time$largerUnit(unit);
					if (!_v1.$) {
						var larger = _v1.a;
						var $temp$unit = larger;
						unit = $temp$unit;
						continue toNice;
					} else {
						return _Utils_Tuple2(6, 100000000);
					}
				}
			}
		};
		return toNice(0);
	});
var $terezka$intervals$Intervals$Time$toExtraUnit = function (unit) {
	switch (unit) {
		case 0:
			return 15;
		case 1:
			return 14;
		case 2:
			return 13;
		case 3:
			return 12;
		case 4:
			return 11;
		case 5:
			return 2;
		default:
			return 0;
	}
};
var $terezka$intervals$Intervals$Time$unitToInt = function (unit) {
	switch (unit) {
		case 0:
			return 0;
		case 1:
			return 1;
		case 2:
			return 2;
		case 3:
			return 3;
		case 4:
			return 4;
		case 5:
			return 5;
		default:
			return 6;
	}
};
var $terezka$intervals$Intervals$Time$values = F4(
	function (zone, maxMmount, min, max) {
		var _v0 = A4($terezka$intervals$Intervals$Time$toBestUnit, zone, maxMmount, min, max);
		var unit = _v0.a;
		var mult = _v0.b;
		var amount = A5($terezka$intervals$Intervals$Time$getNumOfTicks, zone, unit, mult, min, max);
		var initial = A4($terezka$intervals$Intervals$Time$ceilingUnit, zone, unit, mult, min);
		var tUnit = $terezka$intervals$Intervals$Time$toExtraUnit(unit);
		var toTick = F3(
			function (x, timestamp, change) {
				return {
					ha: (_Utils_cmp(
						$terezka$intervals$Intervals$Time$unitToInt(change),
						$terezka$intervals$Intervals$Time$unitToInt(unit)) > 0) ? $elm$core$Maybe$Just(change) : $elm$core$Maybe$Nothing,
					en: !x,
					h6: mult,
					i4: timestamp,
					jo: unit,
					eQ: zone
				};
			});
		var toTicks = F2(
			function (xs, acc) {
				toTicks:
				while (true) {
					if (xs.b) {
						var x = xs.a;
						var rest = xs.b;
						var prev = A4($justinmimbs$time_extra$Time$Extra$add, tUnit, (x - 1) * mult, zone, initial);
						var curr = A4($justinmimbs$time_extra$Time$Extra$add, tUnit, x * mult, zone, initial);
						var change = A3($terezka$intervals$Intervals$Time$getChange, zone, prev, curr);
						var $temp$xs = rest,
							$temp$acc = A2(
							$elm$core$List$cons,
							A3(toTick, x, curr, change),
							acc);
						xs = $temp$xs;
						acc = $temp$acc;
						continue toTicks;
					} else {
						return acc;
					}
				}
			});
		return $elm$core$List$reverse(
			A2(
				toTicks,
				A2($elm$core$List$range, 0, amount - 1),
				_List_Nil));
	});
var $terezka$intervals$Intervals$times = F3(
	function (zone, amount, range) {
		var toUnit = function (unit) {
			switch (unit) {
				case 0:
					return 0;
				case 1:
					return 1;
				case 2:
					return 2;
				case 3:
					return 3;
				case 4:
					return 4;
				case 5:
					return 5;
				default:
					return 6;
			}
		};
		var translateUnit = function (time) {
			return {
				ha: A2($elm$core$Maybe$map, toUnit, time.ha),
				en: time.en,
				h6: time.h6,
				i4: time.i4,
				jo: toUnit(time.jo),
				eQ: time.eQ
			};
		};
		var fromMs = function (ts) {
			return $elm$time$Time$millisToPosix(
				$elm$core$Basics$round(ts));
		};
		return A2(
			$elm$core$List$map,
			translateUnit,
			A4(
				$terezka$intervals$Intervals$Time$values,
				zone,
				amount,
				fromMs(range.Y),
				fromMs(range.J)));
	});
var $author$project$Internal$Svg$times = function (zone) {
	return F2(
		function (i, b) {
			return A3(
				$terezka$intervals$Intervals$times,
				zone,
				i,
				{J: b.J, Y: b.Y});
		});
};
var $author$project$Chart$Svg$times = $author$project$Internal$Svg$times;
var $author$project$Chart$generateValues = F4(
	function (amount, tick, maybeFormat, axis) {
		var toTickValues = F2(
			function (toValue, toString) {
				return $elm$core$List$map(
					function (i) {
						return {
							dL: function () {
								if (!maybeFormat.$) {
									var formatter = maybeFormat.a;
									return formatter(
										toValue(i));
								} else {
									return toString(i);
								}
							}(),
							ay: toValue(i)
						};
					});
			});
		switch (tick.$) {
			case 0:
				return A3(
					toTickValues,
					$elm$core$Basics$identity,
					$elm$core$String$fromFloat,
					A3($author$project$Chart$Svg$generate, amount, $author$project$Chart$Svg$floats, axis));
			case 1:
				return A3(
					toTickValues,
					$elm$core$Basics$toFloat,
					$elm$core$String$fromInt,
					A3($author$project$Chart$Svg$generate, amount, $author$project$Chart$Svg$ints, axis));
			default:
				var zone = tick.a;
				return A3(
					toTickValues,
					A2(
						$elm$core$Basics$composeL,
						A2($elm$core$Basics$composeL, $elm$core$Basics$toFloat, $elm$time$Time$posixToMillis),
						function ($) {
							return $.i4;
						}),
					$author$project$Chart$Svg$formatTime(zone),
					A3(
						$author$project$Chart$Svg$generate,
						amount,
						$author$project$Chart$Svg$times(zone),
						axis));
		}
	});
var $author$project$Chart$yLabels = function (edits) {
	var toTicks = F2(
		function (p, config) {
			return A4(
				$author$project$Chart$generateValues,
				config.aa,
				config.ad,
				config.I,
				A2($author$project$Internal$Helpers$apply, config.B, p.a));
		});
	var toTickValues = F3(
		function (p, config, ts) {
			return (!config.l) ? ts : _Utils_update(
				ts,
				{
					_: _Utils_ap(
						ts._,
						A2(
							$elm$core$List$map,
							function ($) {
								return $.ay;
							},
							A2(toTicks, p, config)))
				});
		});
	var toConfig = function (p) {
		return A2(
			$author$project$Internal$Helpers$apply,
			edits,
			{aa: 5, o: $elm$core$Maybe$Nothing, i: _List_Nil, d: '#808BAB', p: $elm$core$Maybe$Nothing, j: false, q: $elm$core$Maybe$Nothing, I: $elm$core$Maybe$Nothing, ad: $author$project$Internal$Svg$Floats, l: false, r: false, B: _List_Nil, t: $author$project$Chart$Attributes$zero, u: 0, w: false, m: -10, n: 3});
	};
	return A3(
		$author$project$Chart$LabelsElement,
		toConfig,
		toTickValues,
		F2(
			function (p, config) {
				var _default = $author$project$Internal$Svg$defaultLabel;
				var toLabel = function (item) {
					return A4(
						$author$project$Internal$Svg$label,
						p,
						_Utils_update(
							_default,
							{
								o: function () {
									var _v0 = config.o;
									if (_v0.$ === 1) {
										return $elm$core$Maybe$Just(
											config.j ? 1 : 0);
									} else {
										var anchor = _v0.a;
										return $elm$core$Maybe$Just(anchor);
									}
								}(),
								i: config.i,
								d: config.d,
								p: config.p,
								q: config.q,
								r: config.r,
								u: config.u,
								w: config.w,
								m: config.j ? (-config.m) : config.m,
								n: config.n
							}),
						_List_fromArray(
							[
								$elm$svg$Svg$text(item.dL)
							]),
						{
							b: config.t(p.b),
							a: item.ay
						});
				};
				return A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$class('elm-charts__y-labels')
						]),
					A2(
						$elm$core$List$map,
						toLabel,
						A2(toTicks, p, config)));
			}));
};
var $author$project$Charts$Terminology$view = A2(
	$author$project$Chart$chart,
	_List_fromArray(
		[
			$author$project$Chart$Attributes$height(350),
			$author$project$Chart$Attributes$width(1000),
			$author$project$Chart$Attributes$margin(
			{a4: 15, c2: 25, c5: 0, di: 0}),
			$author$project$Chart$Attributes$padding(
			{a4: 30, c2: 0, c5: 0, di: 40})
		]),
	_List_fromArray(
		[
			$author$project$Chart$grid(_List_Nil),
			$author$project$Chart$yLabels(
			_List_fromArray(
				[$author$project$Chart$Attributes$withGrid])),
			$author$project$Chart$xAxis(
			_List_fromArray(
				[$author$project$Chart$Attributes$noArrow])),
			A3(
			$author$project$Chart$bars,
			_List_fromArray(
				[
					$author$project$Chart$Attributes$margin(0.2),
					$author$project$Chart$Attributes$spacing(0.15)
				]),
			_List_fromArray(
				[
					$author$project$Chart$stacked(
					_List_fromArray(
						[
							A2(
							$author$project$Chart$bar,
							function ($) {
								return $.eR;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$opacity(0.8),
									$author$project$Chart$Attributes$borderWidth(1)
								])),
							A2(
							$author$project$Chart$bar,
							function ($) {
								return $.eX;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$opacity(0.8),
									$author$project$Chart$Attributes$borderWidth(1)
								]))
						])),
					A2(
					$author$project$Chart$bar,
					function ($) {
						return $.e$;
					},
					_List_fromArray(
						[
							$author$project$Chart$Attributes$opacity(0.8),
							$author$project$Chart$Attributes$borderWidth(1)
						]))
				]),
			$author$project$Charts$Terminology$data),
			$author$project$Chart$line(
			_List_fromArray(
				[
					$author$project$Chart$Attributes$color('#888'),
					$author$project$Chart$Attributes$tickLength(7),
					$author$project$Chart$Attributes$x1(2.5),
					$author$project$Chart$Attributes$x2(3.5),
					$author$project$Chart$Attributes$y1(4),
					$author$project$Chart$Attributes$moveDown(20)
				])),
			A3(
			$author$project$Chart$label,
			_List_fromArray(
				[
					$author$project$Chart$Attributes$moveDown(15)
				]),
			_List_fromArray(
				[
					$elm$svg$Svg$text('bin')
				]),
			{b: 3, a: 4}),
			$author$project$Chart$line(
			_List_fromArray(
				[
					$author$project$Chart$Attributes$color('#888'),
					$author$project$Chart$Attributes$tickLength(7),
					$author$project$Chart$Attributes$x1(2.5),
					$author$project$Chart$Attributes$x2(2.7),
					$author$project$Chart$Attributes$y1(3),
					$author$project$Chart$Attributes$moveUp(15)
				])),
			A3(
			$author$project$Chart$label,
			_List_fromArray(
				[
					$author$project$Chart$Attributes$moveUp(20)
				]),
			_List_fromArray(
				[
					$elm$svg$Svg$text('bin margin')
				]),
			{b: 2.6, a: 3}),
			$author$project$Chart$line(
			_List_fromArray(
				[
					$author$project$Chart$Attributes$color('#888'),
					$author$project$Chart$Attributes$tickLength(7),
					$author$project$Chart$Attributes$x1(2.925),
					$author$project$Chart$Attributes$x2(3.075),
					$author$project$Chart$Attributes$y1(3),
					$author$project$Chart$Attributes$moveUp(15)
				])),
			A3(
			$author$project$Chart$label,
			_List_fromArray(
				[
					$author$project$Chart$Attributes$moveUp(20)
				]),
			_List_fromArray(
				[
					$elm$svg$Svg$text('bin spacing')
				]),
			{b: 3, a: 3}),
			$author$project$Chart$line(
			_List_fromArray(
				[
					$author$project$Chart$Attributes$color('#888'),
					$author$project$Chart$Attributes$tickLength(7),
					$author$project$Chart$Attributes$tickDirection(360),
					$author$project$Chart$Attributes$x1(0.5),
					$author$project$Chart$Attributes$y1(0),
					$author$project$Chart$Attributes$y2(3),
					$author$project$Chart$Attributes$moveRight(26)
				])),
			A3(
			$author$project$Chart$label,
			_List_fromArray(
				[
					$author$project$Chart$Attributes$rotate(90),
					$author$project$Chart$Attributes$moveRight(18)
				]),
			_List_fromArray(
				[
					$elm$svg$Svg$text('stack')
				]),
			{b: 0.5, a: 1.5}),
			$author$project$Chart$line(
			_List_fromArray(
				[
					$author$project$Chart$Attributes$color('#888'),
					$author$project$Chart$Attributes$tickLength(7),
					$author$project$Chart$Attributes$tickDirection(360),
					$author$project$Chart$Attributes$x1(1.5),
					$author$project$Chart$Attributes$y1(0),
					$author$project$Chart$Attributes$y2(2),
					$author$project$Chart$Attributes$moveRight(26)
				])),
			A3(
			$author$project$Chart$label,
			_List_fromArray(
				[
					$author$project$Chart$Attributes$rotate(90),
					$author$project$Chart$Attributes$moveRight(18)
				]),
			_List_fromArray(
				[
					$elm$svg$Svg$text('bar #1 in stack')
				]),
			{b: 1.5, a: 1}),
			$author$project$Chart$line(
			_List_fromArray(
				[
					$author$project$Chart$Attributes$color('#888'),
					$author$project$Chart$Attributes$tickLength(7),
					$author$project$Chart$Attributes$tickDirection(360),
					$author$project$Chart$Attributes$x1(1.5),
					$author$project$Chart$Attributes$y1(2),
					$author$project$Chart$Attributes$y2(4),
					$author$project$Chart$Attributes$moveRight(26)
				])),
			A3(
			$author$project$Chart$label,
			_List_fromArray(
				[
					$author$project$Chart$Attributes$rotate(90),
					$author$project$Chart$Attributes$moveRight(18)
				]),
			_List_fromArray(
				[
					$elm$svg$Svg$text('bar #2 in stack')
				]),
			{b: 1.5, a: 3}),
			$author$project$Chart$line(
			_List_fromArray(
				[
					$author$project$Chart$Attributes$color('#888'),
					$author$project$Chart$Attributes$tickLength(7),
					$author$project$Chart$Attributes$tickDirection(360),
					$author$project$Chart$Attributes$x1(2),
					$author$project$Chart$Attributes$y1(0),
					$author$project$Chart$Attributes$y2(1),
					$author$project$Chart$Attributes$moveRight(5)
				])),
			A3(
			$author$project$Chart$label,
			_List_fromArray(
				[
					$author$project$Chart$Attributes$rotate(90)
				]),
			_List_fromArray(
				[
					$elm$svg$Svg$text('bar')
				]),
			{b: 2, a: 0.5}),
			$author$project$Chart$line(
			_List_fromArray(
				[
					$author$project$Chart$Attributes$color('#888'),
					$author$project$Chart$Attributes$x1(4),
					$author$project$Chart$Attributes$y1(0),
					$author$project$Chart$Attributes$x2Svg(-10),
					$author$project$Chart$Attributes$y2Svg(-10),
					$author$project$Chart$Attributes$break,
					$author$project$Chart$Attributes$flip,
					$author$project$Chart$Attributes$moveDown(15),
					$author$project$Chart$Attributes$moveLeft(10)
				])),
			A3(
			$author$project$Chart$label,
			_List_fromArray(
				[
					$author$project$Chart$Attributes$moveDown(37),
					$author$project$Chart$Attributes$moveLeft(25)
				]),
			_List_fromArray(
				[
					$elm$svg$Svg$text('bin label')
				]),
			{b: 4, a: 0}),
			A2(
			$author$project$Chart$binLabels,
			function ($) {
				return $.dL;
			},
			_List_fromArray(
				[
					$author$project$Chart$Attributes$moveDown(20)
				])),
			$author$project$Chart$eachBar(
			F2(
				function (p, bar) {
					return ($author$project$Chart$Item$getData(bar).dL === 'D') ? _List_fromArray(
						[
							A3(
							$author$project$Chart$label,
							_List_fromArray(
								[
									$author$project$Chart$Attributes$moveDown(20),
									$author$project$Chart$Attributes$color('white')
								]),
							_List_fromArray(
								[
									$elm$svg$Svg$text(
									$elm$core$String$fromFloat(
										$author$project$Chart$Item$getY(bar)))
								]),
							A2($author$project$Chart$Item$getTop, p, bar)),
							$author$project$Chart$line(
							_List_fromArray(
								[
									$author$project$Chart$Attributes$x1(
									A2($author$project$Chart$Item$getTop, p, bar).b),
									$author$project$Chart$Attributes$y1(
									A2($author$project$Chart$Item$getTop, p, bar).a),
									$author$project$Chart$Attributes$x2Svg(-25),
									$author$project$Chart$Attributes$moveDown(16),
									$author$project$Chart$Attributes$moveLeft(10),
									$author$project$Chart$Attributes$color('#888')
								])),
							A3(
							$author$project$Chart$label,
							_List_fromArray(
								[
									$author$project$Chart$Attributes$moveDown(10),
									$author$project$Chart$Attributes$moveLeft(40),
									$author$project$Chart$Attributes$alignRight,
									$author$project$Chart$Attributes$rotate(90)
								]),
							_List_fromArray(
								[
									$elm$svg$Svg$text('bar label')
								]),
							A2($author$project$Chart$Item$getTop, p, bar))
						]) : _List_Nil;
				})),
			$author$project$Chart$eachStack(
			F2(
				function (p, stack) {
					if ($author$project$Chart$Item$getOneData(stack).dL === 'D') {
						var total = $elm$core$List$sum(
							A2(
								$elm$core$List$map,
								$author$project$Chart$Item$getY,
								$author$project$Chart$Item$getMembers(stack)));
						return _List_fromArray(
							[
								A3(
								$author$project$Chart$label,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$moveUp(10)
									]),
								_List_fromArray(
									[
										$elm$svg$Svg$text(
										$elm$core$String$fromFloat(total))
									]),
								A2($author$project$Chart$Item$getTop, p, stack)),
								$author$project$Chart$line(
								_List_fromArray(
									[
										$author$project$Chart$Attributes$x1(
										A2($author$project$Chart$Item$getTop, p, stack).b),
										$author$project$Chart$Attributes$y1(
										A2($author$project$Chart$Item$getTop, p, stack).a),
										$author$project$Chart$Attributes$x2Svg(-15),
										$author$project$Chart$Attributes$y2Svg(10),
										$author$project$Chart$Attributes$moveUp(13),
										$author$project$Chart$Attributes$moveLeft(8),
										$author$project$Chart$Attributes$color('#888'),
										$author$project$Chart$Attributes$break,
										$author$project$Chart$Attributes$flip
									])),
								A3(
								$author$project$Chart$label,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$moveUp(30)
									]),
								_List_fromArray(
									[
										$elm$svg$Svg$text('stack label')
									]),
								A2($author$project$Chart$Item$getTop, p, stack))
							]);
					} else {
						return _List_Nil;
					}
				}))
		]));
var $mdgriffith$elm_ui$Element$Background$color = function (clr) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$bgColor,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Colored,
			'bg-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(clr),
			'background-color',
			clr));
};
var $mdgriffith$elm_ui$Internal$Flag$borderColor = $mdgriffith$elm_ui$Internal$Flag$flag(28);
var $mdgriffith$elm_ui$Element$Border$color = function (clr) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$borderColor,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Colored,
			'bc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(clr),
			'border-color',
			clr));
};
var $mdgriffith$elm_ui$Internal$Flag$overflow = $mdgriffith$elm_ui$Internal$Flag$flag(20);
var $mdgriffith$elm_ui$Element$scrollbarX = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.iv);
var $mdgriffith$elm_ui$Internal$Model$Focus = 0;
var $mdgriffith$elm_ui$Internal$Model$PseudoSelector = F2(
	function (a, b) {
		return {$: 11, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Flag$focus = $mdgriffith$elm_ui$Internal$Flag$flag(31);
var $mdgriffith$elm_ui$Internal$Model$Nearby = F2(
	function (a, b) {
		return {$: 9, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$TransformComponent = F2(
	function (a, b) {
		return {$: 10, a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$mapAttrFromStyle = F2(
	function (fn, attr) {
		switch (attr.$) {
			case 0:
				return $mdgriffith$elm_ui$Internal$Model$NoAttribute;
			case 2:
				var description = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Describe(description);
			case 6:
				var x = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$AlignX(x);
			case 5:
				var y = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$AlignY(y);
			case 7:
				var x = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Width(x);
			case 8:
				var x = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Height(x);
			case 3:
				var x = attr.a;
				var y = attr.b;
				return A2($mdgriffith$elm_ui$Internal$Model$Class, x, y);
			case 4:
				var flag = attr.a;
				var style = attr.b;
				return A2($mdgriffith$elm_ui$Internal$Model$StyleClass, flag, style);
			case 9:
				var location = attr.a;
				var elem = attr.b;
				return A2(
					$mdgriffith$elm_ui$Internal$Model$Nearby,
					location,
					A2($mdgriffith$elm_ui$Internal$Model$map, fn, elem));
			case 1:
				var htmlAttr = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Attr(
					A2($elm$virtual_dom$VirtualDom$mapAttribute, fn, htmlAttr));
			default:
				var fl = attr.a;
				var trans = attr.b;
				return A2($mdgriffith$elm_ui$Internal$Model$TransformComponent, fl, trans);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$removeNever = function (style) {
	return A2($mdgriffith$elm_ui$Internal$Model$mapAttrFromStyle, $elm$core$Basics$never, style);
};
var $mdgriffith$elm_ui$Internal$Model$unwrapDecsHelper = F2(
	function (attr, _v0) {
		var styles = _v0.a;
		var trans = _v0.b;
		var _v1 = $mdgriffith$elm_ui$Internal$Model$removeNever(attr);
		switch (_v1.$) {
			case 4:
				var style = _v1.b;
				return _Utils_Tuple2(
					A2($elm$core$List$cons, style, styles),
					trans);
			case 10:
				var flag = _v1.a;
				var component = _v1.b;
				return _Utils_Tuple2(
					styles,
					A2($mdgriffith$elm_ui$Internal$Model$composeTransformation, trans, component));
			default:
				return _Utils_Tuple2(styles, trans);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$unwrapDecorations = function (attrs) {
	var _v0 = A3(
		$elm$core$List$foldl,
		$mdgriffith$elm_ui$Internal$Model$unwrapDecsHelper,
		_Utils_Tuple2(_List_Nil, $mdgriffith$elm_ui$Internal$Model$Untransformed),
		attrs);
	var styles = _v0.a;
	var transform = _v0.b;
	return A2(
		$elm$core$List$cons,
		$mdgriffith$elm_ui$Internal$Model$Transform(transform),
		styles);
};
var $mdgriffith$elm_ui$Element$focused = function (decs) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$focus,
		A2(
			$mdgriffith$elm_ui$Internal$Model$PseudoSelector,
			0,
			$mdgriffith$elm_ui$Internal$Model$unwrapDecorations(decs)));
};
var $mdgriffith$elm_ui$Internal$Model$Hover = 1;
var $mdgriffith$elm_ui$Internal$Flag$hover = $mdgriffith$elm_ui$Internal$Flag$flag(33);
var $mdgriffith$elm_ui$Element$mouseOver = function (decs) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$hover,
		A2(
			$mdgriffith$elm_ui$Internal$Model$PseudoSelector,
			1,
			$mdgriffith$elm_ui$Internal$Model$unwrapDecorations(decs)));
};
var $mdgriffith$elm_ui$Internal$Model$MoveY = function (a) {
	return {$: 1, a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$moveY = $mdgriffith$elm_ui$Internal$Flag$flag(26);
var $mdgriffith$elm_ui$Element$moveDown = function (y) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$TransformComponent,
		$mdgriffith$elm_ui$Internal$Flag$moveY,
		$mdgriffith$elm_ui$Internal$Model$MoveY(y));
};
var $mdgriffith$elm_ui$Element$rgba255 = F4(
	function (red, green, blue, a) {
		return A4($mdgriffith$elm_ui$Internal$Model$Rgba, red / 255, green / 255, blue / 255, a);
	});
var $mdgriffith$elm_ui$Internal$Model$BorderWidth = F5(
	function (a, b, c, d, e) {
		return {$: 6, a: a, b: b, c: c, d: d, e: e};
	});
var $mdgriffith$elm_ui$Element$Border$width = function (v) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$borderWidth,
		A5(
			$mdgriffith$elm_ui$Internal$Model$BorderWidth,
			'b-' + $elm$core$String$fromInt(v),
			v,
			v,
			v,
			v));
};
var $mdgriffith$elm_ui$Element$Border$widthXY = F2(
	function (x, y) {
		return A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$borderWidth,
			A5(
				$mdgriffith$elm_ui$Internal$Model$BorderWidth,
				'b-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y))),
				y,
				x,
				y,
				x));
	});
var $mdgriffith$elm_ui$Element$Border$widthEach = function (_v0) {
	var bottom = _v0.a4;
	var top = _v0.di;
	var left = _v0.c2;
	var right = _v0.c5;
	return (_Utils_eq(top, bottom) && _Utils_eq(left, right)) ? (_Utils_eq(top, right) ? $mdgriffith$elm_ui$Element$Border$width(top) : A2($mdgriffith$elm_ui$Element$Border$widthXY, left, top)) : A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$borderWidth,
		A5(
			$mdgriffith$elm_ui$Internal$Model$BorderWidth,
			'b-' + ($elm$core$String$fromInt(top) + ('-' + ($elm$core$String$fromInt(right) + ('-' + ($elm$core$String$fromInt(bottom) + ('-' + $elm$core$String$fromInt(left))))))),
			top,
			right,
			bottom,
			left));
};
var $author$project$Ui$Tabs$viewOne = F3(
	function (window, config, item) {
		var isSelected = _Utils_eq(
			config.iy,
			config.jf(item));
		var offset = function () {
			var _v0 = $author$project$Ui$Layout$screen(window);
			switch (_v0) {
				case 2:
					return isSelected ? $mdgriffith$elm_ui$Element$moveDown(1) : $mdgriffith$elm_ui$Element$moveDown(0);
				case 1:
					return $mdgriffith$elm_ui$Element$moveDown(0);
				default:
					return $mdgriffith$elm_ui$Element$moveDown(0);
			}
		}();
		return A2(
			$mdgriffith$elm_ui$Element$link,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Font$size(14),
					$mdgriffith$elm_ui$Element$Font$color(
					isSelected ? A3($mdgriffith$elm_ui$Element$rgb255, 123, 77, 255) : A3($mdgriffith$elm_ui$Element$rgb255, 120, 120, 120)),
					offset,
					A2($mdgriffith$elm_ui$Element$paddingXY, 25, 10),
					$mdgriffith$elm_ui$Element$Border$color(
					A3($mdgriffith$elm_ui$Element$rgb255, 123, 77, 255)),
					$mdgriffith$elm_ui$Element$Border$widthEach(
					{
						a4: isSelected ? 1 : 0,
						c2: 0,
						c5: 0,
						di: 0
					}),
					$mdgriffith$elm_ui$Element$mouseOver(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Background$color(
							A4($mdgriffith$elm_ui$Element$rgba255, 123, 77, 255, 0.05))
						])),
					$mdgriffith$elm_ui$Element$focused(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Background$color(
							isSelected ? A4($mdgriffith$elm_ui$Element$rgba255, 123, 77, 255, 0.1) : A3($mdgriffith$elm_ui$Element$rgb255, 250, 250, 250))
						]))
				]),
			{
				dL: $mdgriffith$elm_ui$Element$text(
					config.je(item)),
				jq: config.jf(item)
			});
	});
var $author$project$Ui$Tabs$view = F2(
	function (window, config) {
		var contianerAttrs = function () {
			var _v0 = $author$project$Ui$Layout$screen(window);
			switch (_v0) {
				case 2:
					return _List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Border$color(
							A3($mdgriffith$elm_ui$Element$rgb255, 220, 220, 220)),
							$mdgriffith$elm_ui$Element$Border$widthEach(
							{a4: 1, c2: 0, c5: 0, di: 0})
						]);
				case 1:
					return _List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Background$color(
							A3($mdgriffith$elm_ui$Element$rgb255, 250, 250, 250)),
							$mdgriffith$elm_ui$Element$scrollbarX
						]);
				default:
					return _List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Background$color(
							A3($mdgriffith$elm_ui$Element$rgb255, 250, 250, 250)),
							$mdgriffith$elm_ui$Element$scrollbarX
						]);
			}
		}();
		return A2(
			$mdgriffith$elm_ui$Element$el,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
					A2($mdgriffith$elm_ui$Element$paddingXY, 0, 30)
				]),
			A2(
				$mdgriffith$elm_ui$Element$row,
				_Utils_ap(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
						]),
					contianerAttrs),
				A2(
					$elm$core$List$map,
					A2($author$project$Ui$Tabs$viewOne, window, config),
					A2(
						$elm$core$List$filter,
						function (a) {
							return (config.je(a) !== 'Front page') && (config.je(a) !== 'Basic');
						},
						config.gN))));
	});
var $mdgriffith$elm_ui$Element$htmlAttribute = $mdgriffith$elm_ui$Internal$Model$Attr;
var $author$project$Ui$Thumbnail$toUrl = function (id) {
	var meta = $author$project$Examples$meta(id);
	return '/documentation/' + ($author$project$Ui$Thumbnail$urlify(meta.g8) + ('/' + $author$project$Ui$Thumbnail$urlify(meta.dO)));
};
var $author$project$Examples$ExampleMsg0 = function (a) {
	return {$: 0, a: a};
};
var $author$project$Examples$ExampleMsg1 = function (a) {
	return {$: 1, a: a};
};
var $author$project$Examples$ExampleMsg10 = function (a) {
	return {$: 10, a: a};
};
var $author$project$Examples$ExampleMsg100 = function (a) {
	return {$: 100, a: a};
};
var $author$project$Examples$ExampleMsg101 = function (a) {
	return {$: 101, a: a};
};
var $author$project$Examples$ExampleMsg102 = function (a) {
	return {$: 102, a: a};
};
var $author$project$Examples$ExampleMsg103 = function (a) {
	return {$: 103, a: a};
};
var $author$project$Examples$ExampleMsg104 = function (a) {
	return {$: 104, a: a};
};
var $author$project$Examples$ExampleMsg105 = function (a) {
	return {$: 105, a: a};
};
var $author$project$Examples$ExampleMsg106 = function (a) {
	return {$: 106, a: a};
};
var $author$project$Examples$ExampleMsg11 = function (a) {
	return {$: 11, a: a};
};
var $author$project$Examples$ExampleMsg12 = function (a) {
	return {$: 12, a: a};
};
var $author$project$Examples$ExampleMsg13 = function (a) {
	return {$: 13, a: a};
};
var $author$project$Examples$ExampleMsg14 = function (a) {
	return {$: 14, a: a};
};
var $author$project$Examples$ExampleMsg15 = function (a) {
	return {$: 15, a: a};
};
var $author$project$Examples$ExampleMsg16 = function (a) {
	return {$: 16, a: a};
};
var $author$project$Examples$ExampleMsg17 = function (a) {
	return {$: 17, a: a};
};
var $author$project$Examples$ExampleMsg18 = function (a) {
	return {$: 18, a: a};
};
var $author$project$Examples$ExampleMsg19 = function (a) {
	return {$: 19, a: a};
};
var $author$project$Examples$ExampleMsg2 = function (a) {
	return {$: 2, a: a};
};
var $author$project$Examples$ExampleMsg20 = function (a) {
	return {$: 20, a: a};
};
var $author$project$Examples$ExampleMsg21 = function (a) {
	return {$: 21, a: a};
};
var $author$project$Examples$ExampleMsg22 = function (a) {
	return {$: 22, a: a};
};
var $author$project$Examples$ExampleMsg23 = function (a) {
	return {$: 23, a: a};
};
var $author$project$Examples$ExampleMsg24 = function (a) {
	return {$: 24, a: a};
};
var $author$project$Examples$ExampleMsg25 = function (a) {
	return {$: 25, a: a};
};
var $author$project$Examples$ExampleMsg26 = function (a) {
	return {$: 26, a: a};
};
var $author$project$Examples$ExampleMsg27 = function (a) {
	return {$: 27, a: a};
};
var $author$project$Examples$ExampleMsg28 = function (a) {
	return {$: 28, a: a};
};
var $author$project$Examples$ExampleMsg29 = function (a) {
	return {$: 29, a: a};
};
var $author$project$Examples$ExampleMsg3 = function (a) {
	return {$: 3, a: a};
};
var $author$project$Examples$ExampleMsg30 = function (a) {
	return {$: 30, a: a};
};
var $author$project$Examples$ExampleMsg31 = function (a) {
	return {$: 31, a: a};
};
var $author$project$Examples$ExampleMsg32 = function (a) {
	return {$: 32, a: a};
};
var $author$project$Examples$ExampleMsg33 = function (a) {
	return {$: 33, a: a};
};
var $author$project$Examples$ExampleMsg34 = function (a) {
	return {$: 34, a: a};
};
var $author$project$Examples$ExampleMsg35 = function (a) {
	return {$: 35, a: a};
};
var $author$project$Examples$ExampleMsg36 = function (a) {
	return {$: 36, a: a};
};
var $author$project$Examples$ExampleMsg37 = function (a) {
	return {$: 37, a: a};
};
var $author$project$Examples$ExampleMsg38 = function (a) {
	return {$: 38, a: a};
};
var $author$project$Examples$ExampleMsg39 = function (a) {
	return {$: 39, a: a};
};
var $author$project$Examples$ExampleMsg4 = function (a) {
	return {$: 4, a: a};
};
var $author$project$Examples$ExampleMsg40 = function (a) {
	return {$: 40, a: a};
};
var $author$project$Examples$ExampleMsg41 = function (a) {
	return {$: 41, a: a};
};
var $author$project$Examples$ExampleMsg42 = function (a) {
	return {$: 42, a: a};
};
var $author$project$Examples$ExampleMsg43 = function (a) {
	return {$: 43, a: a};
};
var $author$project$Examples$ExampleMsg44 = function (a) {
	return {$: 44, a: a};
};
var $author$project$Examples$ExampleMsg45 = function (a) {
	return {$: 45, a: a};
};
var $author$project$Examples$ExampleMsg46 = function (a) {
	return {$: 46, a: a};
};
var $author$project$Examples$ExampleMsg47 = function (a) {
	return {$: 47, a: a};
};
var $author$project$Examples$ExampleMsg48 = function (a) {
	return {$: 48, a: a};
};
var $author$project$Examples$ExampleMsg49 = function (a) {
	return {$: 49, a: a};
};
var $author$project$Examples$ExampleMsg5 = function (a) {
	return {$: 5, a: a};
};
var $author$project$Examples$ExampleMsg50 = function (a) {
	return {$: 50, a: a};
};
var $author$project$Examples$ExampleMsg51 = function (a) {
	return {$: 51, a: a};
};
var $author$project$Examples$ExampleMsg52 = function (a) {
	return {$: 52, a: a};
};
var $author$project$Examples$ExampleMsg53 = function (a) {
	return {$: 53, a: a};
};
var $author$project$Examples$ExampleMsg54 = function (a) {
	return {$: 54, a: a};
};
var $author$project$Examples$ExampleMsg55 = function (a) {
	return {$: 55, a: a};
};
var $author$project$Examples$ExampleMsg56 = function (a) {
	return {$: 56, a: a};
};
var $author$project$Examples$ExampleMsg57 = function (a) {
	return {$: 57, a: a};
};
var $author$project$Examples$ExampleMsg58 = function (a) {
	return {$: 58, a: a};
};
var $author$project$Examples$ExampleMsg59 = function (a) {
	return {$: 59, a: a};
};
var $author$project$Examples$ExampleMsg6 = function (a) {
	return {$: 6, a: a};
};
var $author$project$Examples$ExampleMsg60 = function (a) {
	return {$: 60, a: a};
};
var $author$project$Examples$ExampleMsg61 = function (a) {
	return {$: 61, a: a};
};
var $author$project$Examples$ExampleMsg62 = function (a) {
	return {$: 62, a: a};
};
var $author$project$Examples$ExampleMsg63 = function (a) {
	return {$: 63, a: a};
};
var $author$project$Examples$ExampleMsg64 = function (a) {
	return {$: 64, a: a};
};
var $author$project$Examples$ExampleMsg65 = function (a) {
	return {$: 65, a: a};
};
var $author$project$Examples$ExampleMsg66 = function (a) {
	return {$: 66, a: a};
};
var $author$project$Examples$ExampleMsg67 = function (a) {
	return {$: 67, a: a};
};
var $author$project$Examples$ExampleMsg68 = function (a) {
	return {$: 68, a: a};
};
var $author$project$Examples$ExampleMsg69 = function (a) {
	return {$: 69, a: a};
};
var $author$project$Examples$ExampleMsg7 = function (a) {
	return {$: 7, a: a};
};
var $author$project$Examples$ExampleMsg70 = function (a) {
	return {$: 70, a: a};
};
var $author$project$Examples$ExampleMsg71 = function (a) {
	return {$: 71, a: a};
};
var $author$project$Examples$ExampleMsg72 = function (a) {
	return {$: 72, a: a};
};
var $author$project$Examples$ExampleMsg73 = function (a) {
	return {$: 73, a: a};
};
var $author$project$Examples$ExampleMsg74 = function (a) {
	return {$: 74, a: a};
};
var $author$project$Examples$ExampleMsg75 = function (a) {
	return {$: 75, a: a};
};
var $author$project$Examples$ExampleMsg76 = function (a) {
	return {$: 76, a: a};
};
var $author$project$Examples$ExampleMsg77 = function (a) {
	return {$: 77, a: a};
};
var $author$project$Examples$ExampleMsg78 = function (a) {
	return {$: 78, a: a};
};
var $author$project$Examples$ExampleMsg79 = function (a) {
	return {$: 79, a: a};
};
var $author$project$Examples$ExampleMsg8 = function (a) {
	return {$: 8, a: a};
};
var $author$project$Examples$ExampleMsg80 = function (a) {
	return {$: 80, a: a};
};
var $author$project$Examples$ExampleMsg81 = function (a) {
	return {$: 81, a: a};
};
var $author$project$Examples$ExampleMsg82 = function (a) {
	return {$: 82, a: a};
};
var $author$project$Examples$ExampleMsg83 = function (a) {
	return {$: 83, a: a};
};
var $author$project$Examples$ExampleMsg84 = function (a) {
	return {$: 84, a: a};
};
var $author$project$Examples$ExampleMsg85 = function (a) {
	return {$: 85, a: a};
};
var $author$project$Examples$ExampleMsg86 = function (a) {
	return {$: 86, a: a};
};
var $author$project$Examples$ExampleMsg87 = function (a) {
	return {$: 87, a: a};
};
var $author$project$Examples$ExampleMsg88 = function (a) {
	return {$: 88, a: a};
};
var $author$project$Examples$ExampleMsg89 = function (a) {
	return {$: 89, a: a};
};
var $author$project$Examples$ExampleMsg9 = function (a) {
	return {$: 9, a: a};
};
var $author$project$Examples$ExampleMsg90 = function (a) {
	return {$: 90, a: a};
};
var $author$project$Examples$ExampleMsg91 = function (a) {
	return {$: 91, a: a};
};
var $author$project$Examples$ExampleMsg92 = function (a) {
	return {$: 92, a: a};
};
var $author$project$Examples$ExampleMsg93 = function (a) {
	return {$: 93, a: a};
};
var $author$project$Examples$ExampleMsg94 = function (a) {
	return {$: 94, a: a};
};
var $author$project$Examples$ExampleMsg95 = function (a) {
	return {$: 95, a: a};
};
var $author$project$Examples$ExampleMsg96 = function (a) {
	return {$: 96, a: a};
};
var $author$project$Examples$ExampleMsg97 = function (a) {
	return {$: 97, a: a};
};
var $author$project$Examples$ExampleMsg98 = function (a) {
	return {$: 98, a: a};
};
var $author$project$Examples$ExampleMsg99 = function (a) {
	return {$: 99, a: a};
};
var $author$project$Chart$barLabels = function (edits) {
	return $author$project$Chart$eachBar(
		F2(
			function (p, item) {
				var config = A2(
					$author$project$Internal$Helpers$apply,
					edits,
					_Utils_update(
						$author$project$Chart$defaultLabel,
						{F: $author$project$Chart$Item$getTop}));
				var text = function () {
					var _v1 = config.I;
					if (!_v1.$) {
						var formatting = _v1.a;
						return formatting(item);
					} else {
						return $elm$core$String$fromFloat(
							$author$project$Chart$Item$getY(item));
					}
				}();
				return _List_fromArray(
					[
						$author$project$Chart$svg(
						function (_v0) {
							return A4(
								$author$project$Internal$Svg$label,
								p,
								$author$project$Chart$toLabelFromItemLabel(config),
								_List_fromArray(
									[
										$elm$svg$Svg$text(text)
									]),
								A2(config.F, p, item));
						})
					]);
			}));
};
var $author$project$Examples$BarCharts$BarLabels$Datum = F9(
	function (x, x1, y, z, v, w, p, q, label) {
		return {dL: label, fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$BarLabels$data = _List_fromArray(
	[
		A9($author$project$Examples$BarCharts$BarLabels$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0, 'Norway'),
		A9($author$project$Examples$BarCharts$BarLabels$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8, 'Denmark'),
		A9($author$project$Examples$BarCharts$BarLabels$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3, 'Sweden'),
		A9($author$project$Examples$BarCharts$BarLabels$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1, 'Finland')
	]);
var $author$project$Chart$xLabels = function (edits) {
	var toTicks = F2(
		function (p, config) {
			return A4(
				$author$project$Chart$generateValues,
				config.aa,
				config.ad,
				config.I,
				A2($author$project$Internal$Helpers$apply, config.B, p.b));
		});
	var toTickValues = F3(
		function (p, config, ts) {
			return (!config.l) ? ts : _Utils_update(
				ts,
				{
					O: _Utils_ap(
						ts.O,
						A2(
							$elm$core$List$map,
							function ($) {
								return $.ay;
							},
							A2(toTicks, p, config)))
				});
		});
	var toConfig = function (p) {
		return A2(
			$author$project$Internal$Helpers$apply,
			edits,
			{aa: 5, o: $elm$core$Maybe$Nothing, i: _List_Nil, d: '#808BAB', p: $elm$core$Maybe$Nothing, j: false, q: $elm$core$Maybe$Nothing, I: $elm$core$Maybe$Nothing, ad: $author$project$Internal$Svg$Floats, l: false, r: false, B: _List_Nil, t: $author$project$Chart$Attributes$zero, u: 0, w: false, m: 0, n: 18});
	};
	return A3(
		$author$project$Chart$LabelsElement,
		toConfig,
		toTickValues,
		F2(
			function (p, config) {
				var _default = $author$project$Internal$Svg$defaultLabel;
				var toLabel = function (item) {
					return A4(
						$author$project$Internal$Svg$label,
						p,
						_Utils_update(
							_default,
							{
								o: config.o,
								i: config.i,
								d: config.d,
								p: config.p,
								q: config.q,
								r: config.r,
								u: config.u,
								w: config.w,
								m: config.m,
								n: config.j ? ((-config.n) + 10) : config.n
							}),
						_List_fromArray(
							[
								$elm$svg$Svg$text(item.dL)
							]),
						{
							b: item.ay,
							a: config.t(p.a)
						});
				};
				return A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$class('elm-charts__x-labels')
						]),
					A2(
						$elm$core$List$map,
						toLabel,
						A2(toTicks, p, config)));
			}));
};
var $author$project$Examples$BarCharts$BarLabels$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.fS;
						},
						_List_Nil),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.fJ;
						},
						_List_Nil)
					]),
				$author$project$Examples$BarCharts$BarLabels$data),
				$author$project$Chart$barLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveDown(15),
						$author$project$Chart$Attributes$color('white')
					]))
			]));
};
var $author$project$Examples$BarCharts$Basic$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Basic$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Basic$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Basic$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Basic$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Basic$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$BarCharts$Basic$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_Nil),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_Nil)
					]),
				$author$project$Examples$BarCharts$Basic$data)
			]));
};
var $author$project$Examples$BarCharts$BinLabels$Datum = F9(
	function (x, x1, y, z, v, w, p, q, label) {
		return {dL: label, fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$BinLabels$data = _List_fromArray(
	[
		A9($author$project$Examples$BarCharts$BinLabels$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0, 'Norway'),
		A9($author$project$Examples$BarCharts$BinLabels$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8, 'Denmark'),
		A9($author$project$Examples$BarCharts$BinLabels$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3, 'Sweden'),
		A9($author$project$Examples$BarCharts$BinLabels$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1, 'Finland')
	]);
var $author$project$Examples$BarCharts$BinLabels$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$grid(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A2(
				$author$project$Chart$binLabels,
				function ($) {
					return $.dL;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveDown(20)
					])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.fS;
						},
						_List_Nil),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.fJ;
						},
						_List_Nil)
					]),
				$author$project$Examples$BarCharts$BinLabels$data)
			]));
};
var $author$project$Examples$BarCharts$BinLabelsAdvanced$Datum = F4(
	function (x, y, z, label) {
		return {dL: label, b: x, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$BinLabelsAdvanced$data = _List_fromArray(
	[
		A4($author$project$Examples$BarCharts$BinLabelsAdvanced$Datum, 1.0, 2, 4, 'Norway'),
		A4($author$project$Examples$BarCharts$BinLabelsAdvanced$Datum, 2.0, 1, 3, 'Denmark'),
		A4($author$project$Examples$BarCharts$BinLabelsAdvanced$Datum, 3.0, 3, 2, 'Sweden'),
		A4($author$project$Examples$BarCharts$BinLabelsAdvanced$Datum, 4.0, 5, 4, 'Finland')
	]);
var $author$project$Chart$eachBin = function (func) {
	return $author$project$Chart$SubElements(
		F2(
			function (p, is) {
				return A2(
					$elm$core$List$concatMap,
					func(p),
					A2(
						$author$project$Chart$Item$apply,
						A2(
							$author$project$Chart$Item$andThen,
							$author$project$Chart$Item$bins,
							A2($author$project$Chart$Item$andThen, $author$project$Chart$Item$real, $author$project$Chart$Item$any)),
						is));
			}));
};
var $author$project$Internal$Many$getMember = function (_v0) {
	var _v1 = _v0.a;
	var x = _v1.a;
	var xs = _v1.b;
	return x;
};
var $author$project$Chart$Item$getMember = $author$project$Internal$Many$getMember;
var $author$project$Chart$Item$getX1 = $author$project$Internal$Item$getX1;
var $author$project$Chart$Item$getX2 = $author$project$Internal$Item$getX2;
var $author$project$Internal$Helpers$labelGray = '#808BAB';
var $author$project$Chart$Attributes$labelGray = $author$project$Internal$Helpers$labelGray;
var $author$project$Examples$BarCharts$BinLabelsAdvanced$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$eachBin(
				F2(
					function (p, bin) {
						var datum = $author$project$Chart$Item$getOneData(bin);
						var isSpecial = (datum.a + datum.gA) > 6;
						var color = isSpecial ? 'blue' : $author$project$Chart$Attributes$labelGray;
						var bar = $author$project$Chart$Item$getMember(bin);
						var labelBasic = $elm$core$String$fromFloat(
							$author$project$Chart$Item$getX1(bar)) + (' - ' + $elm$core$String$fromFloat(
							$author$project$Chart$Item$getX2(bar)));
						var label = isSpecial ? ('→ ' + (labelBasic + ' ←')) : labelBasic;
						return _List_fromArray(
							[
								A3(
								$author$project$Chart$label,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$color(color),
										$author$project$Chart$Attributes$moveDown(18)
									]),
								_List_fromArray(
									[
										$elm$svg$Svg$text(label)
									]),
								A2($author$project$Chart$Item$getBottom, p, bin))
							]);
					})),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$x1(
						function ($) {
							return $.b;
						})
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_Nil),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_Nil)
					]),
				$author$project$Examples$BarCharts$BinLabelsAdvanced$data)
			]));
};
var $author$project$Examples$BarCharts$Borders$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Borders$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Borders$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Borders$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Borders$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Borders$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$BarCharts$Borders$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.gA;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$borderWidth(2),
										$author$project$Chart$Attributes$opacity(0.4)
									])),
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.a;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$borderWidth(2),
										$author$project$Chart$Attributes$opacity(0.4)
									]))
							]))
					]),
				$author$project$Examples$BarCharts$Borders$data)
			]));
};
var $author$project$Chart$Attributes$blue = $author$project$Internal$Helpers$blue;
var $author$project$Examples$BarCharts$Color$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Color$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Color$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Color$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Color$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Color$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Chart$Attributes$green = $author$project$Internal$Helpers$green;
var $author$project$Examples$BarCharts$Color$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$blue)
							])),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$green)
							]))
					]),
				$author$project$Examples$BarCharts$Color$data)
			]));
};
var $author$project$Examples$BarCharts$Corners$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Corners$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Corners$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Corners$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Corners$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Corners$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$BarCharts$Corners$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$roundTop(0.5)
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_Nil),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$roundBottom(0.5)
							]))
					]),
				$author$project$Examples$BarCharts$Corners$data)
			]));
};
var $author$project$Examples$BarCharts$DataDependent$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$DataDependent$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$DataDependent$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$DataDependent$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$DataDependent$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$DataDependent$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Internal$Svg$Striped = function (a) {
	return {$: 0, a: a};
};
var $author$project$Chart$Attributes$striped = function (attrs_) {
	return function (config) {
		return _Utils_update(
			config,
			{
				d8: $elm$core$Maybe$Just(
					$author$project$Internal$Svg$Striped(attrs_)),
				ag: (!config.ag) ? 1 : config.ag
			});
	};
};
var $author$project$Internal$Property$variation = F2(
	function (newVariation, property) {
		var update = function (config) {
			return _Utils_update(
				config,
				{
					gd: F2(
						function (ids, datum) {
							return _Utils_ap(
								A2(config.gd, ids, datum),
								A2(newVariation, ids, datum));
						})
				});
		};
		if (!property.$) {
			var config = property.a;
			return $author$project$Internal$Property$NotStacked(
				update(config));
		} else {
			var configs = property.a;
			return $author$project$Internal$Property$Stacked(
				A2($elm$core$List$map, update, configs));
		}
	});
var $author$project$Chart$variation = function (func) {
	return $author$project$Internal$Property$variation(
		F2(
			function (ids, datum) {
				return A2(func, ids.e4, datum);
			}));
};
var $author$project$Examples$BarCharts$DataDependent$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$variation,
						F2(
							function (_v0, d) {
								return (d.b === 3) ? _List_fromArray(
									[
										$author$project$Chart$Attributes$striped(_List_Nil)
									]) : _List_Nil;
							}),
						A2(
							$author$project$Chart$bar,
							function ($) {
								return $.a;
							},
							_List_Nil)),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_Nil)
					]),
				$author$project$Examples$BarCharts$DataDependent$data)
			]));
};
var $author$project$Examples$BarCharts$Gradient$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Gradient$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Gradient$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Gradient$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Gradient$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Gradient$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Internal$Svg$Gradient = function (a) {
	return {$: 2, a: a};
};
var $author$project$Chart$Attributes$gradient = function (colors) {
	return function (config) {
		return _Utils_update(
			config,
			{
				d8: $elm$core$Maybe$Just(
					$author$project$Internal$Svg$Gradient(colors)),
				ag: (!config.ag) ? 1 : config.ag
			});
	};
};
var $author$project$Chart$Attributes$pink = $author$project$Internal$Helpers$pink;
var $author$project$Chart$Attributes$purple = $author$project$Internal$Helpers$purple;
var $author$project$Examples$BarCharts$Gradient$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$gradient(
								_List_fromArray(
									[$author$project$Chart$Attributes$purple, $author$project$Chart$Attributes$pink]))
							]))
					]),
				$author$project$Examples$BarCharts$Gradient$data)
			]));
};
var $author$project$Examples$BarCharts$Highlight$OnHover = $elm$core$Basics$identity;
var $author$project$Internal$Item$getIdentification = function (_v0) {
	var meta = _v0.a;
	return meta.hJ;
};
var $author$project$Chart$amongst = F2(
	function (inQuestion, func) {
		return $author$project$Internal$Property$variation(
			F2(
				function (ids, datum) {
					var check = function (product) {
						return (_Utils_eq(
							$author$project$Internal$Item$getIdentification(product),
							ids) && _Utils_eq(
							$author$project$Internal$Item$getDatum(product),
							datum)) ? func(datum) : _List_Nil;
					};
					return A2($elm$core$List$concatMap, check, inQuestion);
				}));
	});
var $author$project$Examples$BarCharts$Highlight$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Highlight$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Highlight$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Highlight$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Highlight$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3)
	]);
var $author$project$Chart$each = F2(
	function (items, func) {
		return $author$project$Chart$SubElements(
			F2(
				function (p, _v0) {
					return A2(
						$elm$core$List$concatMap,
						func(p),
						items);
				}));
	});
var $author$project$Internal$Events$Decoder = $elm$core$Basics$identity;
var $author$project$Internal$Svg$closestPoint = F2(
	function (pos, searched) {
		return {
			b: A3($elm$core$Basics$clamp, pos.a1, pos.dm, searched.b),
			a: A3($elm$core$Basics$clamp, pos.jx, pos.eP, searched.a)
		};
	});
var $author$project$Internal$Svg$distanceX = F3(
	function (plane, searched, point) {
		return $elm$core$Basics$abs(
			A2($author$project$Internal$Coordinates$toSVGX, plane, point.b) - A2($author$project$Internal$Coordinates$toSVGX, plane, searched.b));
	});
var $author$project$Internal$Svg$distanceY = F3(
	function (plane, searched, point) {
		return $elm$core$Basics$abs(
			A2($author$project$Internal$Coordinates$toSVGY, plane, point.a) - A2($author$project$Internal$Coordinates$toSVGY, plane, searched.a));
	});
var $author$project$Internal$Svg$distanceSquared = F3(
	function (plane, searched, point) {
		return A2(
			$elm$core$Basics$pow,
			A3($author$project$Internal$Svg$distanceX, plane, searched, point),
			2) + A2(
			$elm$core$Basics$pow,
			A3($author$project$Internal$Svg$distanceY, plane, searched, point),
			2);
	});
var $author$project$Internal$Svg$keepOne = function (toPosition) {
	var toArea = function (a) {
		return function (pos) {
			return (pos.a1 - pos.dm) * (pos.jx - pos.eP);
		}(
			toPosition(a));
	};
	var func = F2(
		function (one, acc) {
			var _v0 = $elm$core$List$head(acc);
			if (_v0.$ === 1) {
				return _List_fromArray(
					[one]);
			} else {
				var other = _v0.a;
				return _Utils_eq(
					toPosition(other),
					toPosition(one)) ? A2($elm$core$List$cons, other, acc) : ((_Utils_cmp(
					toArea(other),
					toArea(one)) > 0) ? _List_fromArray(
					[one]) : acc);
			}
		});
	return A2($elm$core$List$foldr, func, _List_Nil);
};
var $author$project$Internal$Svg$getNearestHelp = F4(
	function (toPosition, items, plane, searched) {
		var toPoint = function (i) {
			return A2(
				$author$project$Internal$Svg$closestPoint,
				toPosition(i),
				searched);
		};
		var distanceSquared_ = A2($author$project$Internal$Svg$distanceSquared, plane, searched);
		var getClosest = F2(
			function (item, allClosest) {
				var _v0 = $elm$core$List$head(allClosest);
				if (!_v0.$) {
					var closest = _v0.a;
					return _Utils_eq(
						toPoint(closest),
						toPoint(item)) ? A2($elm$core$List$cons, item, allClosest) : ((_Utils_cmp(
						distanceSquared_(
							toPoint(closest)),
						distanceSquared_(
							toPoint(item))) > 0) ? _List_fromArray(
						[item]) : allClosest);
				} else {
					return _List_fromArray(
						[item]);
				}
			});
		return A2(
			$author$project$Internal$Svg$keepOne,
			toPosition,
			A3($elm$core$List$foldl, getClosest, _List_Nil, items));
	});
var $author$project$Internal$Svg$getNearest = F4(
	function (toPosition, items, plane, searched) {
		return A4($author$project$Internal$Svg$getNearestHelp, toPosition, items, plane, searched);
	});
var $author$project$Internal$Events$getNearest = function (grouping) {
	var toPos = grouping.a;
	return F2(
		function (items, plane) {
			var groups = A2($author$project$Internal$Many$apply, grouping, items);
			return A3(
				$author$project$Internal$Svg$getNearest,
				toPos(plane),
				groups,
				plane);
		});
};
var $author$project$Chart$Events$getNearest = $author$project$Internal$Events$getNearest;
var $author$project$Chart$Attributes$highlight = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{hE: v});
	};
};
var $author$project$Internal$Events$getCoords = F3(
	function (_v0, plane, searched) {
		return searched;
	});
var $author$project$Chart$Events$getCoords = $author$project$Internal$Events$getCoords;
var $author$project$Internal$Events$map = F2(
	function (f, _v0) {
		var a = _v0;
		return F3(
			function (ps, s, p) {
				return f(
					A3(a, ps, s, p));
			});
	});
var $author$project$Chart$Events$map = $author$project$Internal$Events$map;
var $author$project$Internal$Events$Event = $elm$core$Basics$identity;
var $author$project$Internal$Events$on = F2(
	function (name, decoder) {
		return function (config) {
			return _Utils_update(
				config,
				{
					dF: A2(
						$elm$core$List$cons,
						{hm: decoder, dO: name},
						config.dF)
				});
		};
	});
var $author$project$Chart$Events$on = $author$project$Internal$Events$on;
var $author$project$Chart$Events$onMouseLeave = function (onMsg) {
	return A2(
		$author$project$Chart$Events$on,
		'mouseleave',
		A2(
			$author$project$Chart$Events$map,
			$elm$core$Basics$always(onMsg),
			$author$project$Chart$Events$getCoords));
};
var $author$project$Chart$Events$onMouseMove = F2(
	function (onMsg, decoder) {
		return A2(
			$author$project$Chart$Events$on,
			'mousemove',
			A2($author$project$Chart$Events$map, onMsg, decoder));
	});
var $author$project$Chart$HtmlElement = function (a) {
	return {$: 13, a: a};
};
var $author$project$Chart$html = function (func) {
	return $author$project$Chart$HtmlElement(
		F2(
			function (p, _v0) {
				return func(p);
			}));
};
var $author$project$Internal$Svg$defaultTooltip = {aO: true, gT: 'white', H: '#D8D8D8', hp: $elm$core$Maybe$Nothing, hy: $elm$core$Maybe$Nothing, U: 0, h8: 8, h: 0};
var $author$project$Internal$Svg$Bottom = 3;
var $author$project$Internal$Svg$Left = 1;
var $author$project$Internal$Svg$Right = 2;
var $author$project$Internal$Svg$Top = 0;
var $elm$core$List$all = F2(
	function (isOkay, list) {
		return !A2(
			$elm$core$List$any,
			A2($elm$core$Basics$composeL, $elm$core$Basics$not, isOkay),
			list);
	});
var $author$project$Internal$Coordinates$left = function (pos) {
	return {b: pos.a1, a: pos.jx + ((pos.eP - pos.jx) / 2)};
};
var $elm$html$Html$node = $elm$virtual_dom$VirtualDom$node;
var $author$project$Internal$Svg$positionHtml = F7(
	function (plane, x, y, xOff, yOff, attrs, content) {
		var yPercentage = ((A2($author$project$Internal$Coordinates$toSVGY, plane, y) - yOff) * 100) / plane.a.ae;
		var xPercentage = ((A2($author$project$Internal$Coordinates$toSVGX, plane, x) + xOff) * 100) / plane.b.ae;
		var posititonStyles = _List_fromArray(
			[
				A2(
				$elm$html$Html$Attributes$style,
				'left',
				$elm$core$String$fromFloat(xPercentage) + '%'),
				A2(
				$elm$html$Html$Attributes$style,
				'top',
				$elm$core$String$fromFloat(yPercentage) + '%'),
				A2($elm$html$Html$Attributes$style, 'margin-right', '-400px'),
				A2($elm$html$Html$Attributes$style, 'position', 'absolute')
			]);
		return A2(
			$elm$html$Html$div,
			_Utils_ap(posititonStyles, attrs),
			content);
	});
var $author$project$Internal$Coordinates$right = function (pos) {
	return {b: pos.dm, a: pos.jx + ((pos.eP - pos.jx) / 2)};
};
var $author$project$Internal$Svg$tooltipPointerStyle = F4(
	function (direction, className, background, borderColor) {
		var config = function () {
			switch (direction) {
				case 0:
					return {eR: 'right', eX: 'top', e$: 'left'};
				case 3:
					return {eR: 'right', eX: 'bottom', e$: 'left'};
				case 1:
					return {eR: 'bottom', eX: 'left', e$: 'top'};
				case 2:
					return {eR: 'bottom', eX: 'right', e$: 'top'};
				case 4:
					return {eR: 'bottom', eX: 'left', e$: 'top'};
				default:
					return {eR: 'right', eX: 'top', e$: 'left'};
			}
		}();
		return '\n  .' + (className + (':before, .' + (className + (':after {\n    content: "";\n    position: absolute;\n    border-' + (config.e$ + (': 5px solid transparent;\n    border-' + (config.eR + (': 5px solid transparent;\n    ' + (config.eX + (': 100%;\n    ' + (config.e$ + (': 50%;\n    margin-' + (config.e$ + (': -5px;\n  }\n\n  .' + (className + (':after {\n    border-' + (config.eX + (': 5px solid ' + (background + (';\n    margin-' + (config.eX + (': -1px;\n    z-index: 1;\n    height: 0px;\n  }\n\n  .' + (className + (':before {\n    border-' + (config.eX + (': 5px solid ' + (borderColor + ';\n    height: 0px;\n  }\n  ')))))))))))))))))))))))))));
	});
var $author$project$Internal$Svg$tooltip = F5(
	function (plane, pos, config, htmlAttrs, content) {
		var distanceTop = A2($author$project$Internal$Coordinates$toSVGY, plane, pos.eP);
		var distanceRight = plane.b.ae - A2($author$project$Internal$Coordinates$toSVGX, plane, pos.a1);
		var distanceLeft = A2($author$project$Internal$Coordinates$toSVGX, plane, pos.dm);
		var distanceBottom = plane.a.ae - A2($author$project$Internal$Coordinates$toSVGY, plane, pos.jx);
		var direction = function () {
			var _v5 = config.hp;
			if (!_v5.$) {
				switch (_v5.a) {
					case 4:
						var _v6 = _v5.a;
						return (config.h > 0) ? ((_Utils_cmp(distanceLeft, config.h + config.h8) > 0) ? 1 : 2) : ((_Utils_cmp(distanceLeft, distanceRight) > 0) ? 1 : 2);
					case 5:
						var _v7 = _v5.a;
						return (config.U > 0) ? ((_Utils_cmp(distanceTop, config.U + config.h8) > 0) ? 0 : 3) : ((_Utils_cmp(distanceTop, distanceBottom) > 0) ? 0 : 3);
					default:
						var dir = _v5.a;
						return dir;
				}
			} else {
				var isLargest = function (a) {
					return $elm$core$List$all(
						function (b) {
							return _Utils_cmp(a, b) > -1;
						});
				};
				return A2(
					isLargest,
					distanceTop,
					_List_fromArray(
						[distanceBottom, distanceLeft, distanceRight])) ? 0 : (A2(
					isLargest,
					distanceBottom,
					_List_fromArray(
						[distanceTop, distanceLeft, distanceRight])) ? 3 : (A2(
					isLargest,
					distanceLeft,
					_List_fromArray(
						[distanceTop, distanceBottom, distanceRight])) ? 1 : 2));
			}
		}();
		var focalPoint = function () {
			var _v2 = config.hy;
			if (!_v2.$) {
				var focal = _v2.a;
				switch (direction) {
					case 0:
						return $author$project$Internal$Coordinates$top(
							focal(pos));
					case 3:
						return $author$project$Internal$Coordinates$bottom(
							focal(pos));
					case 1:
						return $author$project$Internal$Coordinates$left(
							focal(pos));
					case 2:
						return $author$project$Internal$Coordinates$right(
							focal(pos));
					case 4:
						return $author$project$Internal$Coordinates$left(
							focal(pos));
					default:
						return $author$project$Internal$Coordinates$right(
							focal(pos));
				}
			} else {
				switch (direction) {
					case 0:
						return $author$project$Internal$Coordinates$top(pos);
					case 3:
						return $author$project$Internal$Coordinates$bottom(pos);
					case 1:
						return $author$project$Internal$Coordinates$left(pos);
					case 2:
						return $author$project$Internal$Coordinates$right(pos);
					case 4:
						return $author$project$Internal$Coordinates$left(pos);
					default:
						return $author$project$Internal$Coordinates$right(pos);
				}
			}
		}();
		var arrowWidth = config.aO ? 4 : 0;
		var _v0 = function () {
			switch (direction) {
				case 0:
					return {aB: 'elm-charts__tooltip-top', aK: 'translate(-50%, -100%)', m: 0, n: config.h8 + arrowWidth};
				case 3:
					return {aB: 'elm-charts__tooltip-bottom', aK: 'translate(-50%, 0%)', m: 0, n: (-config.h8) - arrowWidth};
				case 1:
					return {aB: 'elm-charts__tooltip-left', aK: 'translate(-100%, -50%)', m: (-config.h8) - arrowWidth, n: 0};
				case 2:
					return {aB: 'elm-charts__tooltip-right', aK: 'translate(0, -50%)', m: config.h8 + arrowWidth, n: 0};
				case 4:
					return {aB: 'elm-charts__tooltip-leftOrRight', aK: 'translate(0, -50%)', m: (-config.h8) - arrowWidth, n: 0};
				default:
					return {aB: 'elm-charts__tooltip-topOrBottom', aK: 'translate(-50%, -100%)', m: 0, n: config.h8 + arrowWidth};
			}
		}();
		var xOff = _v0.m;
		var yOff = _v0.n;
		var transformation = _v0.aK;
		var className = _v0.aB;
		var children = config.aO ? A2(
			$elm$core$List$cons,
			A3(
				$elm$html$Html$node,
				'style',
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text(
						A4($author$project$Internal$Svg$tooltipPointerStyle, direction, className, config.gT, config.H))
					])),
			content) : content;
		var attributes = _Utils_ap(
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class(className),
					A2($elm$html$Html$Attributes$style, 'transform', transformation),
					A2($elm$html$Html$Attributes$style, 'padding', '5px 8px'),
					A2($elm$html$Html$Attributes$style, 'background', config.gT),
					A2($elm$html$Html$Attributes$style, 'border', '1px solid ' + config.H),
					A2($elm$html$Html$Attributes$style, 'border-radius', '3px'),
					A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
				]),
			htmlAttrs);
		return A2(
			$elm$html$Html$map,
			$elm$core$Basics$never,
			A7($author$project$Internal$Svg$positionHtml, plane, focalPoint.b, focalPoint.a, xOff, yOff, attributes, children));
	});
var $author$project$Chart$Svg$tooltip = F3(
	function (plane, pos, edits) {
		return A3(
			$author$project$Internal$Svg$tooltip,
			plane,
			pos,
			A2($author$project$Internal$Helpers$apply, edits, $author$project$Internal$Svg$defaultTooltip));
	});
var $author$project$Chart$tooltip = F4(
	function (i, edits, attrs_, content) {
		return $author$project$Chart$html(
			function (p) {
				var pos = $author$project$Internal$Item$getLimits(i);
				var content_ = _Utils_eq(content, _List_Nil) ? $author$project$Internal$Item$tooltip(i) : content;
				return A3($author$project$Internal$Svg$isWithinPlane, p, pos.a1, pos.eP) ? A5(
					$author$project$Chart$Svg$tooltip,
					p,
					A2($author$project$Internal$Item$getPosition, p, i),
					edits,
					attrs_,
					content_) : $elm$html$Html$text('');
			});
	});
var $author$project$Examples$BarCharts$Highlight$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$bars)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 0, c5: 0, di: 10})
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$roundTop(0.2),
						$author$project$Chart$Attributes$margin(0.1),
						$author$project$Chart$Attributes$spacing(0.15)
					]),
				_List_fromArray(
					[
						A3(
						$author$project$Chart$amongst,
						model.c$,
						function (_v0) {
							return _List_fromArray(
								[
									$author$project$Chart$Attributes$highlight(0.25)
								]);
						},
						A2(
							$author$project$Chart$bar,
							function ($) {
								return $.gA;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$striped(_List_Nil),
									$author$project$Chart$Attributes$borderWidth(1)
								]))),
						A3(
						$author$project$Chart$amongst,
						model.c$,
						function (_v1) {
							return _List_fromArray(
								[
									$author$project$Chart$Attributes$highlight(0.25)
								]);
						},
						A2(
							$author$project$Chart$bar,
							function ($) {
								return $.jr;
							},
							_List_Nil))
					]),
				$author$project$Examples$BarCharts$Highlight$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$BarCharts$Histogram$Datum = F3(
	function (start, end, y) {
		return {fb: end, f3: start, a: y};
	});
var $author$project$Examples$BarCharts$Histogram$data = _List_fromArray(
	[
		A3($author$project$Examples$BarCharts$Histogram$Datum, 1609459200000, 1612137600000, 2),
		A3($author$project$Examples$BarCharts$Histogram$Datum, 1612137600000, 1614556800000, 3),
		A3($author$project$Examples$BarCharts$Histogram$Datum, 1614556800000, 1617235200000, 4),
		A3($author$project$Examples$BarCharts$Histogram$Datum, 1617235200000, 1619827200000, 6)
	]);
var $author$project$Internal$Svg$Times = function (a) {
	return {$: 2, a: a};
};
var $author$project$Chart$Attributes$times = function (zone) {
	return function (config) {
		return _Utils_update(
			config,
			{
				ad: $author$project$Internal$Svg$Times(zone)
			});
	};
};
var $elm$time$Time$Zone = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$time$Time$utc = A2($elm$time$Time$Zone, 0, _List_Nil);
var $author$project$Examples$BarCharts$Histogram$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$times($elm$time$Time$utc)
					])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$x1(
						function ($) {
							return $.f3;
						}),
						$author$project$Chart$Attributes$x2(
						function ($) {
							return $.fb;
						}),
						$author$project$Chart$Attributes$margin(0.02)
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_Nil)
					]),
				$author$project$Examples$BarCharts$Histogram$data)
			]));
};
var $author$project$Internal$Svg$Column = 1;
var $author$project$Chart$Attributes$column = function (config) {
	return _Utils_update(
		config,
		{eW: 1});
};
var $author$project$Examples$BarCharts$Legends$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Legends$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Legends$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Legends$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Legends$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Legends$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Internal$Coordinates$Axis = F7(
	function (length, marginMin, marginMax, dataMin, dataMax, min, max) {
		return {hj: dataMax, hk: dataMin, ae: length, h0: marginMax, h1: marginMin, J: max, Y: min};
	});
var $author$project$Internal$Svg$defaultContainer = {
	i: _List_fromArray(
		[
			$elm$svg$Svg$Attributes$style('overflow: visible;')
		]),
	dF: _List_Nil,
	dI: _List_Nil,
	dQ: true
};
var $author$project$Internal$Svg$barLegend = F2(
	function (config, barConfig) {
		var fontStyle = function () {
			var _v0 = config.q;
			if (!_v0.$) {
				var size_ = _v0.a;
				return A2(
					$elm$html$Html$Attributes$style,
					'font-size',
					$elm$core$String$fromInt(size_) + 'px');
			} else {
				return A2($elm$html$Html$Attributes$style, '', '');
			}
		}();
		var fakePlane = {
			b: A7($author$project$Internal$Coordinates$Axis, config.h, 0, 0, 0, 10, 0, 10),
			a: A7($author$project$Internal$Coordinates$Axis, config.U, 0, 0, 0, 10, 0, 10)
		};
		return A2(
			$elm$html$Html$div,
			_Utils_ap(
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('elm-charts__legend'),
						A2($elm$html$Html$Attributes$style, 'display', 'flex'),
						A2($elm$html$Html$Attributes$style, 'align-items', 'center')
					]),
				config.dI),
			_List_fromArray(
				[
					A5(
					$author$project$Internal$Svg$container,
					fakePlane,
					_Utils_update(
						$author$project$Internal$Svg$defaultContainer,
						{dQ: false}),
					_List_Nil,
					_List_fromArray(
						[
							A3(
							$author$project$Internal$Svg$bar,
							fakePlane,
							barConfig,
							{a1: 0, dm: 10, jx: 0, eP: 10})
						]),
					_List_Nil),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							fontStyle,
							A2(
							$elm$html$Html$Attributes$style,
							'margin-left',
							$elm$core$String$fromFloat(config.iG) + 'px')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(config.i5)
						]))
				]));
	});
var $author$project$Internal$Svg$defaultBarLegend = {d: '#808BAB', q: $elm$core$Maybe$Nothing, U: 10, dI: _List_Nil, iG: 10, i5: '', h: 10, m: 0, n: 0};
var $author$project$Chart$Svg$barLegend = F2(
	function (edits, barAttrs) {
		return A2(
			$author$project$Internal$Svg$barLegend,
			A2($author$project$Internal$Helpers$apply, edits, $author$project$Internal$Svg$defaultBarLegend),
			A2($author$project$Internal$Helpers$apply, barAttrs, $author$project$Internal$Svg$defaultBar));
	});
var $author$project$Internal$Svg$Row = 0;
var $author$project$Internal$Svg$defaultLegends = {eW: 0, o: $elm$core$Maybe$Nothing, gT: '', H: '', P: 0, dI: _List_Nil, iG: 10, m: 0, n: 0};
var $author$project$Internal$Svg$legendsAt = F5(
	function (plane, x, y, config, children) {
		var otherAttrs = _List_fromArray(
			[
				$elm$html$Html$Attributes$class('elm-charts__legends'),
				A2($elm$html$Html$Attributes$style, 'background', config.gT),
				A2($elm$html$Html$Attributes$style, 'border-color', config.H),
				A2(
				$elm$html$Html$Attributes$style,
				'border-width',
				$elm$core$String$fromFloat(config.P) + 'px'),
				A2($elm$html$Html$Attributes$style, 'border-style', 'solid')
			]);
		var anchorAttrs = function () {
			var _v2 = config.o;
			if (_v2.$ === 1) {
				return _List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'transform', 'translate(-0%, 0%)')
					]);
			} else {
				switch (_v2.a) {
					case 0:
						var _v3 = _v2.a;
						return _List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'transform', 'translate(-100%, 0%)')
							]);
					case 1:
						var _v4 = _v2.a;
						return _List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'transform', 'translate(-0%, 0%)')
							]);
					default:
						var _v5 = _v2.a;
						return _List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'transform', 'translate(-50%, 0%)')
							]);
				}
			}
		}();
		var _v0 = function () {
			var _v1 = config.eW;
			if (!_v1) {
				return _Utils_Tuple2(
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'display', 'flex'),
							A2($elm$html$Html$Attributes$style, 'align-items', 'center')
						]),
					'right');
			} else {
				return _Utils_Tuple2(
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'display', 'flex'),
							A2($elm$html$Html$Attributes$style, 'flex-direction', 'column'),
							A2($elm$html$Html$Attributes$style, 'align-items', 'baseline')
						]),
					'bottom');
			}
		}();
		var alignmentAttrs = _v0.a;
		var direction = _v0.b;
		var paddingStyle = ' .elm-charts__legends .elm-charts__legend {\n              margin-' + (direction + (':' + ($elm$core$String$fromFloat(config.iG) + ('px;\n            }\n\n            .elm-charts__legends .elm-charts__legend:last-child {\n              margin-' + (direction + ': 0px;\n            }\n        ')))));
		return A7(
			$author$project$Internal$Svg$positionHtml,
			plane,
			x,
			y,
			config.m,
			-config.n,
			_Utils_ap(
				anchorAttrs,
				_Utils_ap(
					alignmentAttrs,
					_Utils_ap(otherAttrs, config.dI))),
			A2(
				$elm$core$List$cons,
				A3(
					$elm$html$Html$node,
					'style',
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text(paddingStyle)
						])),
				children));
	});
var $author$project$Chart$Svg$legendsAt = F4(
	function (plane, x, y, edits) {
		return A4(
			$author$project$Internal$Svg$legendsAt,
			plane,
			x,
			y,
			A2($author$project$Internal$Helpers$apply, edits, $author$project$Internal$Svg$defaultLegends));
	});
var $author$project$Internal$Svg$defaultInterpolation = {i: _List_Nil, d: $author$project$Internal$Helpers$pink, dB: _List_Nil, d8: $elm$core$Maybe$Nothing, aU: $elm$core$Maybe$Nothing, ag: 0, h: 1};
var $author$project$Internal$Svg$defaultLineLegend = {d: '#808BAB', q: $elm$core$Maybe$Nothing, U: 16, dI: _List_Nil, iG: 10, i5: '', h: 30, m: 0, n: 0};
var $author$project$Internal$Svg$Point = F2(
	function (x, y) {
		return {b: x, a: y};
	});
var $elm$svg$Svg$Attributes$fillRule = _VirtualDom_attribute('fill-rule');
var $author$project$Internal$Interpolation$linear = $elm$core$List$map(
	$elm$core$List$map(
		function (_v0) {
			var x = _v0.b;
			var y = _v0.a;
			return A2($author$project$Internal$Commands$Line, x, y);
		}));
var $author$project$Internal$Interpolation$First = {$: 0};
var $author$project$Internal$Interpolation$Previous = function (a) {
	return {$: 1, a: a};
};
var $author$project$Internal$Interpolation$monotoneCurve = F4(
	function (point0, point1, tangent0, tangent1) {
		var dx = (point1.b - point0.b) / 3;
		return A6($author$project$Internal$Commands$CubicBeziers, point0.b + dx, point0.a + (dx * tangent0), point1.b - dx, point1.a - (dx * tangent1), point1.b, point1.a);
	});
var $author$project$Internal$Interpolation$slope2 = F3(
	function (point0, point1, t) {
		var h = point1.b - point0.b;
		return (!(!h)) ? ((((3 * (point1.a - point0.a)) / h) - t) / 2) : t;
	});
var $author$project$Internal$Interpolation$sign = function (x) {
	return (x < 0) ? (-1) : 1;
};
var $author$project$Internal$Interpolation$toH = F2(
	function (h0, h1) {
		return (!h0) ? ((h1 < 0) ? (0 * (-1)) : h1) : h0;
	});
var $author$project$Internal$Interpolation$slope3 = F3(
	function (point0, point1, point2) {
		var h1 = point2.b - point1.b;
		var h0 = point1.b - point0.b;
		var s0h = A2($author$project$Internal$Interpolation$toH, h0, h1);
		var s0 = (point1.a - point0.a) / s0h;
		var s1h = A2($author$project$Internal$Interpolation$toH, h1, h0);
		var s1 = (point2.a - point1.a) / s1h;
		var p = ((s0 * h1) + (s1 * h0)) / (h0 + h1);
		var slope = ($author$project$Internal$Interpolation$sign(s0) + $author$project$Internal$Interpolation$sign(s1)) * A2(
			$elm$core$Basics$min,
			A2(
				$elm$core$Basics$min,
				$elm$core$Basics$abs(s0),
				$elm$core$Basics$abs(s1)),
			0.5 * $elm$core$Basics$abs(p));
		return $elm$core$Basics$isNaN(slope) ? 0 : slope;
	});
var $author$project$Internal$Interpolation$monotonePart = F2(
	function (points, _v0) {
		var tangent = _v0.a;
		var commands = _v0.b;
		var _v1 = _Utils_Tuple2(tangent, points);
		_v1$4:
		while (true) {
			if (!_v1.a.$) {
				if (_v1.b.b && _v1.b.b.b) {
					if (_v1.b.b.b.b) {
						var _v2 = _v1.a;
						var _v3 = _v1.b;
						var p0 = _v3.a;
						var _v4 = _v3.b;
						var p1 = _v4.a;
						var _v5 = _v4.b;
						var p2 = _v5.a;
						var rest = _v5.b;
						var t1 = A3($author$project$Internal$Interpolation$slope3, p0, p1, p2);
						var t0 = A3($author$project$Internal$Interpolation$slope2, p0, p1, t1);
						return A2(
							$author$project$Internal$Interpolation$monotonePart,
							A2(
								$elm$core$List$cons,
								p1,
								A2($elm$core$List$cons, p2, rest)),
							_Utils_Tuple2(
								$author$project$Internal$Interpolation$Previous(t1),
								_Utils_ap(
									commands,
									_List_fromArray(
										[
											A4($author$project$Internal$Interpolation$monotoneCurve, p0, p1, t0, t1)
										]))));
					} else {
						var _v9 = _v1.a;
						var _v10 = _v1.b;
						var p0 = _v10.a;
						var _v11 = _v10.b;
						var p1 = _v11.a;
						var t1 = A3($author$project$Internal$Interpolation$slope3, p0, p1, p1);
						return _Utils_Tuple2(
							$author$project$Internal$Interpolation$Previous(t1),
							_Utils_ap(
								commands,
								_List_fromArray(
									[
										A4($author$project$Internal$Interpolation$monotoneCurve, p0, p1, t1, t1),
										A2($author$project$Internal$Commands$Line, p1.b, p1.a)
									])));
					}
				} else {
					break _v1$4;
				}
			} else {
				if (_v1.b.b && _v1.b.b.b) {
					if (_v1.b.b.b.b) {
						var t0 = _v1.a.a;
						var _v6 = _v1.b;
						var p0 = _v6.a;
						var _v7 = _v6.b;
						var p1 = _v7.a;
						var _v8 = _v7.b;
						var p2 = _v8.a;
						var rest = _v8.b;
						var t1 = A3($author$project$Internal$Interpolation$slope3, p0, p1, p2);
						return A2(
							$author$project$Internal$Interpolation$monotonePart,
							A2(
								$elm$core$List$cons,
								p1,
								A2($elm$core$List$cons, p2, rest)),
							_Utils_Tuple2(
								$author$project$Internal$Interpolation$Previous(t1),
								_Utils_ap(
									commands,
									_List_fromArray(
										[
											A4($author$project$Internal$Interpolation$monotoneCurve, p0, p1, t0, t1)
										]))));
					} else {
						var t0 = _v1.a.a;
						var _v12 = _v1.b;
						var p0 = _v12.a;
						var _v13 = _v12.b;
						var p1 = _v13.a;
						var t1 = A3($author$project$Internal$Interpolation$slope3, p0, p1, p1);
						return _Utils_Tuple2(
							$author$project$Internal$Interpolation$Previous(t1),
							_Utils_ap(
								commands,
								_List_fromArray(
									[
										A4($author$project$Internal$Interpolation$monotoneCurve, p0, p1, t0, t1),
										A2($author$project$Internal$Commands$Line, p1.b, p1.a)
									])));
					}
				} else {
					break _v1$4;
				}
			}
		}
		return _Utils_Tuple2(tangent, commands);
	});
var $author$project$Internal$Interpolation$monotoneSection = F2(
	function (points, _v0) {
		var tangent = _v0.a;
		var acc = _v0.b;
		var _v1 = function () {
			if (points.b) {
				var p0 = points.a;
				var rest = points.b;
				return A2(
					$author$project$Internal$Interpolation$monotonePart,
					A2($elm$core$List$cons, p0, rest),
					_Utils_Tuple2(
						tangent,
						_List_fromArray(
							[
								A2($author$project$Internal$Commands$Line, p0.b, p0.a)
							])));
			} else {
				return _Utils_Tuple2(tangent, _List_Nil);
			}
		}();
		var t0 = _v1.a;
		var commands = _v1.b;
		return _Utils_Tuple2(
			t0,
			A2($elm$core$List$cons, commands, acc));
	});
var $author$project$Internal$Interpolation$monotone = function (sections) {
	return A3(
		$elm$core$List$foldr,
		$author$project$Internal$Interpolation$monotoneSection,
		_Utils_Tuple2($author$project$Internal$Interpolation$First, _List_Nil),
		sections).b;
};
var $author$project$Internal$Interpolation$Point = F2(
	function (x, y) {
		return {b: x, a: y};
	});
var $author$project$Internal$Interpolation$after = F2(
	function (a, b) {
		return _List_fromArray(
			[
				a,
				A2($author$project$Internal$Interpolation$Point, b.b, a.a),
				b
			]);
	});
var $author$project$Internal$Interpolation$stepped = function (sections) {
	var expand = F2(
		function (result, section) {
			expand:
			while (true) {
				if (section.b) {
					if (section.b.b) {
						var a = section.a;
						var _v1 = section.b;
						var b = _v1.a;
						var rest = _v1.b;
						var $temp$result = _Utils_ap(
							result,
							A2($author$project$Internal$Interpolation$after, a, b)),
							$temp$section = A2($elm$core$List$cons, b, rest);
						result = $temp$result;
						section = $temp$section;
						continue expand;
					} else {
						var last = section.a;
						return result;
					}
				} else {
					return result;
				}
			}
		});
	return A2(
		$elm$core$List$map,
		A2(
			$elm$core$Basics$composeR,
			expand(_List_Nil),
			$elm$core$List$map(
				function (_v2) {
					var x = _v2.b;
					var y = _v2.a;
					return A2($author$project$Internal$Commands$Line, x, y);
				})),
		sections);
};
var $elm$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (n <= 0) {
				return list;
			} else {
				if (!list.b) {
					return list;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs;
					n = $temp$n;
					list = $temp$list;
					continue drop;
				}
			}
		}
	});
var $author$project$Internal$Svg$last = function (list) {
	return $elm$core$List$head(
		A2(
			$elm$core$List$drop,
			$elm$core$List$length(list) - 1,
			list));
};
var $author$project$Internal$Svg$withBorder = F2(
	function (stuff, func) {
		if (stuff.b) {
			var first = stuff.a;
			var rest = stuff.b;
			return $elm$core$Maybe$Just(
				A2(
					func,
					first,
					A2(
						$elm$core$Maybe$withDefault,
						first,
						$author$project$Internal$Svg$last(rest))));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Internal$Svg$toCommands = F4(
	function (method, toX, toY, data) {
		var toSets = F2(
			function (ps, cmds) {
				return A2(
					$author$project$Internal$Svg$withBorder,
					ps,
					F2(
						function (first, last_) {
							return _Utils_Tuple3(first, cmds, last_);
						}));
			});
		var fold = F2(
			function (datum_, acc) {
				var _v1 = toY(datum_);
				if (!_v1.$) {
					var y_ = _v1.a;
					if (acc.b) {
						var latest = acc.a;
						var rest = acc.b;
						return A2(
							$elm$core$List$cons,
							_Utils_ap(
								latest,
								_List_fromArray(
									[
										{
										b: toX(datum_),
										a: y_
									}
									])),
							rest);
					} else {
						return A2(
							$elm$core$List$cons,
							_List_fromArray(
								[
									{
									b: toX(datum_),
									a: y_
								}
								]),
							acc);
					}
				} else {
					return A2($elm$core$List$cons, _List_Nil, acc);
				}
			});
		var points = $elm$core$List$reverse(
			A3($elm$core$List$foldl, fold, _List_Nil, data));
		var commands = function () {
			switch (method) {
				case 0:
					return $author$project$Internal$Interpolation$linear(points);
				case 1:
					return $author$project$Internal$Interpolation$monotone(points);
				default:
					return $author$project$Internal$Interpolation$stepped(points);
			}
		}();
		return A2(
			$elm$core$List$filterMap,
			$elm$core$Basics$identity,
			A3($elm$core$List$map2, toSets, points, commands));
	});
var $author$project$Internal$Svg$area = F6(
	function (plane, toX, toY2M, toY, config, data) {
		var _v0 = function () {
			var _v1 = config.d8;
			if (_v1.$ === 1) {
				return _Utils_Tuple2(
					$elm$svg$Svg$text(''),
					config.d);
			} else {
				var design = _v1.a;
				return A2($author$project$Internal$Svg$toPattern, config.d, design);
			}
		}();
		var patternDefs = _v0.a;
		var fill = _v0.b;
		var view = function (cmds) {
			return A4(
				$author$project$Internal$Svg$withAttrs,
				config.i,
				$elm$svg$Svg$path,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('elm-charts__area-section'),
						$elm$svg$Svg$Attributes$fill(fill),
						$elm$svg$Svg$Attributes$fillOpacity(
						$elm$core$String$fromFloat(config.ag)),
						$elm$svg$Svg$Attributes$strokeWidth('0'),
						$elm$svg$Svg$Attributes$fillRule('evenodd'),
						$elm$svg$Svg$Attributes$d(
						A2($author$project$Internal$Commands$description, plane, cmds)),
						$author$project$Internal$Svg$withinChartArea(plane)
					]),
				_List_Nil);
		};
		var withUnder = F2(
			function (_v5, _v6) {
				var firstBottom = _v5.a;
				var cmdsBottom = _v5.b;
				var endBottom = _v5.c;
				var firstTop = _v6.a;
				var cmdsTop = _v6.b;
				var endTop = _v6.c;
				return view(
					_Utils_ap(
						_List_fromArray(
							[
								A2($author$project$Internal$Commands$Move, firstBottom.b, firstBottom.a),
								A2($author$project$Internal$Commands$Line, firstTop.b, firstTop.a)
							]),
						_Utils_ap(
							cmdsTop,
							_Utils_ap(
								_List_fromArray(
									[
										A2($author$project$Internal$Commands$Move, firstBottom.b, firstBottom.a)
									]),
								_Utils_ap(
									cmdsBottom,
									_List_fromArray(
										[
											A2($author$project$Internal$Commands$Line, endTop.b, endTop.a)
										]))))));
			});
		var withoutUnder = function (_v4) {
			var first = _v4.a;
			var cmds = _v4.b;
			var end = _v4.c;
			return view(
				_Utils_ap(
					_List_fromArray(
						[
							A2($author$project$Internal$Commands$Move, first.b, 0),
							A2($author$project$Internal$Commands$Line, first.b, first.a)
						]),
					_Utils_ap(
						cmds,
						_List_fromArray(
							[
								A2($author$project$Internal$Commands$Line, end.b, 0)
							]))));
		};
		if (config.ag <= 0) {
			return $elm$svg$Svg$text('');
		} else {
			var _v2 = config.aU;
			if (_v2.$ === 1) {
				return $elm$svg$Svg$text('');
			} else {
				var method = _v2.a;
				return A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$class('elm-charts__area-sections')
						]),
					function () {
						if (toY2M.$ === 1) {
							return A2(
								$elm$core$List$cons,
								patternDefs,
								A2(
									$elm$core$List$map,
									withoutUnder,
									A4($author$project$Internal$Svg$toCommands, method, toX, toY, data)));
						} else {
							var toY2 = toY2M.a;
							return A2(
								$elm$core$List$cons,
								patternDefs,
								A3(
									$elm$core$List$map2,
									withUnder,
									A4($author$project$Internal$Svg$toCommands, method, toX, toY2, data),
									A4($author$project$Internal$Svg$toCommands, method, toX, toY, data)));
						}
					}());
			}
		}
	});
var $author$project$Internal$Svg$interpolation = F5(
	function (plane, toX, toY, config, data) {
		var view = function (_v1) {
			var first = _v1.a;
			var cmds = _v1.b;
			return A4(
				$author$project$Internal$Svg$withAttrs,
				config.i,
				$elm$svg$Svg$path,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('elm-charts__interpolation-section'),
						$elm$svg$Svg$Attributes$fill('transparent'),
						$elm$svg$Svg$Attributes$stroke(config.d),
						$elm$svg$Svg$Attributes$strokeDasharray(
						A2(
							$elm$core$String$join,
							' ',
							A2($elm$core$List$map, $elm$core$String$fromFloat, config.dB))),
						$elm$svg$Svg$Attributes$strokeWidth(
						$elm$core$String$fromFloat(config.h)),
						$elm$svg$Svg$Attributes$d(
						A2(
							$author$project$Internal$Commands$description,
							plane,
							A2(
								$elm$core$List$cons,
								A2($author$project$Internal$Commands$Move, first.b, first.a),
								cmds))),
						$author$project$Internal$Svg$withinChartArea(plane)
					]),
				_List_Nil);
		};
		var _v0 = config.aU;
		if (_v0.$ === 1) {
			return $elm$svg$Svg$text('');
		} else {
			var method = _v0.a;
			return A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('elm-charts__interpolation-sections')
					]),
				A2(
					$elm$core$List$map,
					view,
					A4($author$project$Internal$Svg$toCommands, method, toX, toY, data)));
		}
	});
var $author$project$Internal$Svg$toRadius = F2(
	function (size_, shape) {
		var area_ = (2 * $elm$core$Basics$pi) * size_;
		switch (shape) {
			case 0:
				return $elm$core$Basics$sqrt(area_ / $elm$core$Basics$pi);
			case 1:
				var side = $elm$core$Basics$sqrt(
					(area_ * 4) / $elm$core$Basics$sqrt(3));
				return $elm$core$Basics$sqrt(3) * side;
			case 2:
				return $elm$core$Basics$sqrt(area_) / 2;
			case 3:
				return $elm$core$Basics$sqrt(area_) / 2;
			case 4:
				return $elm$core$Basics$sqrt(area_ / 4);
			default:
				return $elm$core$Basics$sqrt(area_ / 4);
		}
	});
var $author$project$Internal$Svg$lineLegend = F3(
	function (config, interConfig, dotConfig) {
		var topMargin = function () {
			var _v1 = dotConfig.aW;
			if (!_v1.$) {
				var shape = _v1.a;
				return A2($author$project$Internal$Svg$toRadius, dotConfig.iD, shape);
			} else {
				return 0;
			}
		}();
		var fontStyle = function () {
			var _v0 = config.q;
			if (!_v0.$) {
				var size_ = _v0.a;
				return A2(
					$elm$html$Html$Attributes$style,
					'font-size',
					$elm$core$String$fromInt(size_) + 'px');
			} else {
				return A2($elm$html$Html$Attributes$style, '', '');
			}
		}();
		var fakePlane = {
			b: A7($author$project$Internal$Coordinates$Axis, config.h, 0, 0, 0, 10, 0, 10),
			a: A7($author$project$Internal$Coordinates$Axis, config.U, 0, 0, 0, 10, 0, 10)
		};
		var bottomMargin = (!interConfig.ag) ? topMargin : 0;
		return A2(
			$elm$html$Html$div,
			_Utils_ap(
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('elm-charts__legend'),
						A2($elm$html$Html$Attributes$style, 'display', 'flex'),
						A2($elm$html$Html$Attributes$style, 'align-items', 'center')
					]),
				config.dI),
			_List_fromArray(
				[
					A5(
					$author$project$Internal$Svg$container,
					fakePlane,
					_Utils_update(
						$author$project$Internal$Svg$defaultContainer,
						{dQ: false}),
					_List_Nil,
					_List_fromArray(
						[
							A5(
							$author$project$Internal$Svg$interpolation,
							fakePlane,
							function ($) {
								return $.b;
							},
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.a;
								},
								$elm$core$Maybe$Just),
							interConfig,
							_List_fromArray(
								[
									A2($author$project$Internal$Svg$Point, 0, 5),
									A2($author$project$Internal$Svg$Point, 10, 5)
								])),
							A6(
							$author$project$Internal$Svg$area,
							fakePlane,
							function ($) {
								return $.b;
							},
							$elm$core$Maybe$Nothing,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.a;
								},
								$elm$core$Maybe$Just),
							interConfig,
							_List_fromArray(
								[
									A2($author$project$Internal$Svg$Point, 0, 5),
									A2($author$project$Internal$Svg$Point, 10, 5)
								])),
							A5(
							$author$project$Internal$Svg$dot,
							fakePlane,
							function ($) {
								return $.b;
							},
							function ($) {
								return $.a;
							},
							dotConfig,
							A2($author$project$Internal$Svg$Point, 5, 5))
						]),
					_List_Nil),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							fontStyle,
							A2(
							$elm$html$Html$Attributes$style,
							'margin-left',
							$elm$core$String$fromFloat(config.iG) + 'px')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(config.i5)
						]))
				]));
	});
var $author$project$Internal$Svg$Linear = 0;
var $author$project$Chart$Attributes$linear = function (config) {
	return _Utils_update(
		config,
		{
			aU: $elm$core$Maybe$Just(0)
		});
};
var $author$project$Chart$Svg$lineLegend = F3(
	function (edits, interAttrsOrg, dotAttrsOrg) {
		var interpolationConfigOrg = A2($author$project$Internal$Helpers$apply, interAttrsOrg, $author$project$Internal$Svg$defaultInterpolation);
		var dotConfigOrg = A2($author$project$Internal$Helpers$apply, dotAttrsOrg, $author$project$Internal$Svg$defaultDot);
		var adjustWidth = function (config) {
			return _Utils_update(
				config,
				{h: 10});
		};
		var _v0 = function () {
			var _v1 = _Utils_Tuple2(interpolationConfigOrg.aU, dotConfigOrg.aW);
			if (!_v1.a.$) {
				if (_v1.b.$ === 1) {
					var _v2 = _v1.b;
					return _Utils_Tuple3(
						dotAttrsOrg,
						interAttrsOrg,
						A2(
							$elm$core$List$cons,
							$author$project$Chart$Attributes$width(10),
							edits));
				} else {
					return _Utils_Tuple3(
						dotAttrsOrg,
						A2(
							$elm$core$List$cons,
							$author$project$Chart$Attributes$opacity(0),
							interAttrsOrg),
						edits);
				}
			} else {
				if (_v1.b.$ === 1) {
					var _v3 = _v1.a;
					var _v4 = _v1.b;
					return _Utils_Tuple3(
						A2($elm$core$List$cons, $author$project$Chart$Attributes$circle, dotAttrsOrg),
						A2($elm$core$List$cons, $author$project$Chart$Attributes$linear, interAttrsOrg),
						A2(
							$elm$core$List$cons,
							$author$project$Chart$Attributes$width(10),
							edits));
				} else {
					var _v5 = _v1.a;
					return _Utils_Tuple3(
						A2($elm$core$List$cons, $author$project$Chart$Attributes$circle, dotAttrsOrg),
						interAttrsOrg,
						A2(
							$elm$core$List$cons,
							$author$project$Chart$Attributes$width(10),
							edits));
				}
			}
		}();
		var dotAttrs = _v0.a;
		var interAttrs = _v0.b;
		var lineLegendAttrs = _v0.c;
		return A3(
			$author$project$Internal$Svg$lineLegend,
			A2($author$project$Internal$Helpers$apply, lineLegendAttrs, $author$project$Internal$Svg$defaultLineLegend),
			A2($author$project$Internal$Helpers$apply, interAttrs, $author$project$Internal$Svg$defaultInterpolation),
			A2($author$project$Internal$Helpers$apply, dotAttrs, $author$project$Internal$Svg$defaultDot));
	});
var $author$project$Chart$Attributes$title = function (value) {
	return function (config) {
		return _Utils_update(
			config,
			{i5: value});
	};
};
var $author$project$Chart$legendsAt = F4(
	function (toX, toY, attrs, children) {
		return $author$project$Chart$HtmlElement(
			F2(
				function (p, legends_) {
					var viewLegend = function (legend) {
						if (!legend.$) {
							var name = legend.a;
							var barAttrs = legend.b;
							return A2(
								$author$project$Chart$Svg$barLegend,
								A2(
									$elm$core$List$cons,
									$author$project$Chart$Attributes$title(name),
									children),
								barAttrs);
						} else {
							var name = legend.a;
							var interAttrs = legend.b;
							var dotAttrs = legend.c;
							return A3(
								$author$project$Chart$Svg$lineLegend,
								A2(
									$elm$core$List$cons,
									$author$project$Chart$Attributes$title(name),
									children),
								interAttrs,
								dotAttrs);
						}
					};
					return A5(
						$author$project$Chart$Svg$legendsAt,
						p,
						toX(p.b),
						toY(p.a),
						attrs,
						A2($elm$core$List$map, viewLegend, legends_));
				}));
	});
var $author$project$Internal$Property$name = F2(
	function (newName, property) {
		var update = function (config) {
			return _Utils_update(
				config,
				{
					f8: $elm$core$Maybe$Just(newName)
				});
		};
		if (!property.$) {
			var config = property.a;
			return $author$project$Internal$Property$NotStacked(
				update(config));
		} else {
			var configs = property.a;
			return $author$project$Internal$Property$Stacked(
				A2($elm$core$List$map, update, configs));
		}
	});
var $author$project$Chart$named = function (name) {
	return $author$project$Internal$Property$name(name);
};
var $author$project$Examples$BarCharts$Legends$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$roundTop(0.3)
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$named,
						'Cats',
						A2(
							$author$project$Chart$bar,
							function ($) {
								return $.gA;
							},
							_List_Nil)),
						A2(
						$author$project$Chart$named,
						'Fish',
						A2(
							$author$project$Chart$bar,
							function ($) {
								return $.a;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$striped(_List_Nil)
								])))
					]),
				$author$project$Examples$BarCharts$Legends$data),
				A4(
				$author$project$Chart$legendsAt,
				function ($) {
					return $.J;
				},
				function ($) {
					return $.J;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$column,
						$author$project$Chart$Attributes$moveLeft(15),
						$author$project$Chart$Attributes$alignRight,
						$author$project$Chart$Attributes$spacing(5)
					]),
				_List_Nil)
			]));
};
var $author$project$Examples$BarCharts$Margin$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Margin$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Margin$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Margin$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Margin$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Margin$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$BarCharts$Margin$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$margin(0.4)
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_Nil),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_Nil)
					]),
				$author$project$Examples$BarCharts$Margin$data)
			]));
};
var $author$project$Examples$BarCharts$Opacity$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Opacity$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Opacity$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Opacity$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Opacity$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Opacity$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$BarCharts$Opacity$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.5)
							])),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_Nil)
					]),
				$author$project$Examples$BarCharts$Opacity$data)
			]));
};
var $author$project$Examples$BarCharts$Pattern$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Pattern$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Pattern$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Pattern$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Pattern$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Pattern$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Internal$Svg$Dotted = function (a) {
	return {$: 1, a: a};
};
var $author$project$Chart$Attributes$dotted = function (attrs_) {
	return function (config) {
		return _Utils_update(
			config,
			{
				d8: $elm$core$Maybe$Just(
					$author$project$Internal$Svg$Dotted(attrs_)),
				ag: (!config.ag) ? 1 : config.ag
			});
	};
};
var $author$project$Examples$BarCharts$Pattern$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$striped(
								_List_fromArray(
									[
										$author$project$Chart$Attributes$spacing(6)
									]))
							])),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$dotted(
								_List_fromArray(
									[
										$author$project$Chart$Attributes$rotate(45)
									]))
							]))
					]),
				$author$project$Examples$BarCharts$Pattern$data)
			]));
};
var $author$project$Examples$BarCharts$Spacing$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Spacing$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Spacing$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Spacing$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Spacing$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Spacing$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$BarCharts$Spacing$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$spacing(0)
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_Nil),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_Nil)
					]),
				$author$project$Examples$BarCharts$Spacing$data)
			]));
};
var $author$project$Examples$BarCharts$Stacked$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Stacked$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Stacked$Datum, 0.0, 0.0, 1.2, 4.0, 1.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Stacked$Datum, 2.0, 0.4, 2.2, 4.2, 3.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Stacked$Datum, 3.0, 0.6, 1.0, 3.2, 2.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Stacked$Datum, 4.0, 0.2, 1.2, 3.0, 3.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$BarCharts$Stacked$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.a;
								},
								_List_Nil),
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.jr;
								},
								_List_Nil)
							]))
					]),
				$author$project$Examples$BarCharts$Stacked$data)
			]));
};
var $author$project$Examples$BarCharts$Title$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Title$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Title$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Title$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Title$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Title$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Chart$labelAt = F4(
	function (toX, toY, attrs, inner) {
		return $author$project$Chart$SvgElement(
			function (p) {
				return A4(
					$author$project$Chart$Svg$label,
					p,
					attrs,
					inner,
					{
						b: toX(p.b),
						a: toY(p.a)
					});
			});
	});
var $author$project$Chart$Attributes$middle = function (b) {
	return b.Y + ((b.J - b.Y) / 2);
};
var $author$project$Examples$BarCharts$Title$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A4(
				$author$project$Chart$labelAt,
				function ($) {
					return $.J;
				},
				function ($) {
					return $.J;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveLeft(8),
						$author$project$Chart$Attributes$moveDown(5),
						$author$project$Chart$Attributes$alignRight
					]),
				_List_fromArray(
					[
						$elm$svg$Svg$text('Quarterly revenue')
					])),
				A4(
				$author$project$Chart$labelAt,
				$author$project$Chart$Attributes$middle,
				function ($) {
					return $.Y;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveDown(18)
					]),
				_List_fromArray(
					[
						$elm$svg$Svg$text('Quarter')
					])),
				A4(
				$author$project$Chart$labelAt,
				function ($) {
					return $.Y;
				},
				$author$project$Chart$Attributes$middle,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveLeft(25),
						$author$project$Chart$Attributes$rotate(90)
					]),
				_List_fromArray(
					[
						$elm$svg$Svg$text('Revenue')
					])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_Nil),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_Nil)
					]),
				$author$project$Examples$BarCharts$Title$data)
			]));
};
var $author$project$Examples$BarCharts$Tooltip$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$BarCharts$Tooltip$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Tooltip$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Tooltip$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Tooltip$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Tooltip$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Tooltip$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$BarCharts$Tooltip$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$bars)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.gA;
								},
								_List_Nil),
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.a;
								},
								_List_Nil)
							])),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.jr;
						},
						_List_Nil)
					]),
				$author$project$Examples$BarCharts$Tooltip$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$BarCharts$TooltipBin$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$BarCharts$TooltipBin$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$TooltipBin$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$TooltipBin$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$TooltipBin$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$TooltipBin$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$TooltipBin$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$BarCharts$TooltipBin$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$bins)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_Nil),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_Nil)
					]),
				$author$project$Examples$BarCharts$TooltipBin$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$BarCharts$TooltipStack$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$BarCharts$TooltipStack$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$TooltipStack$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$TooltipStack$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$TooltipStack$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$TooltipStack$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$TooltipStack$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$BarCharts$TooltipStack$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$stacks)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.gA;
								},
								_List_Nil),
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.a;
								},
								_List_Nil)
							])),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.jr;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$purple),
								$author$project$Chart$Attributes$striped(_List_Nil)
							]))
					]),
				$author$project$Examples$BarCharts$TooltipStack$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$BarCharts$Ungroup$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$BarCharts$Ungroup$data = _List_fromArray(
	[
		A8($author$project$Examples$BarCharts$Ungroup$Datum, 0.0, 0.0, 2.0, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$BarCharts$Ungroup$Datum, 1.0, 2.0, 3.0, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$BarCharts$Ungroup$Datum, 2.0, 3.0, 4.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$BarCharts$Ungroup$Datum, 3.0, 4.0, 5.0, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Chart$Attributes$ungroup = function (config) {
	return _Utils_update(
		config,
		{hC: false});
};
var $author$project$Examples$BarCharts$Ungroup$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[$author$project$Chart$Attributes$ungroup]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.jt;
						},
						_List_Nil),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$striped(_List_Nil)
							]))
					]),
				$author$project$Examples$BarCharts$Ungroup$data)
			]));
};
var $author$project$Examples$BarCharts$VariableWidth$Datum = F3(
	function (start, end, y) {
		return {fb: end, f3: start, a: y};
	});
var $author$project$Examples$BarCharts$VariableWidth$data = _List_fromArray(
	[
		A3($author$project$Examples$BarCharts$VariableWidth$Datum, 1, 2, 2),
		A3($author$project$Examples$BarCharts$VariableWidth$Datum, 2, 3, 3),
		A3($author$project$Examples$BarCharts$VariableWidth$Datum, 3, 6, 4),
		A3($author$project$Examples$BarCharts$VariableWidth$Datum, 6, 7, 6)
	]);
var $author$project$Examples$BarCharts$VariableWidth$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$x1(
						function ($) {
							return $.f3;
						}),
						$author$project$Chart$Attributes$x2(
						function ($) {
							return $.fb;
						}),
						$author$project$Chart$Attributes$margin(0)
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$borderWidth(0.3),
								$author$project$Chart$Attributes$opacity(0.5)
							]))
					]),
				$author$project$Examples$BarCharts$VariableWidth$data)
			]));
};
var $author$project$Chart$Attributes$amount = function (value) {
	return function (config) {
		return _Utils_update(
			config,
			{aa: value});
	};
};
var $author$project$Chart$TicksElement = F2(
	function (a, b) {
		return {$: 5, a: a, b: b};
	});
var $author$project$Chart$Attributes$length = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{ae: v});
	};
};
var $author$project$Internal$Svg$defaultTick = {i: _List_Nil, d: 'rgb(210, 210, 210)', ae: 5, h: 1};
var $author$project$Internal$Svg$tick = F4(
	function (plane, config, isX, point) {
		return A4(
			$author$project$Internal$Svg$withAttrs,
			config.i,
			$elm$svg$Svg$line,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('elm-charts__tick'),
					$elm$svg$Svg$Attributes$stroke(config.d),
					$elm$svg$Svg$Attributes$strokeWidth(
					$elm$core$String$fromFloat(config.h)),
					$elm$svg$Svg$Attributes$x1(
					$elm$core$String$fromFloat(
						A2($author$project$Internal$Coordinates$toSVGX, plane, point.b))),
					$elm$svg$Svg$Attributes$x2(
					$elm$core$String$fromFloat(
						A2($author$project$Internal$Coordinates$toSVGX, plane, point.b) + (isX ? 0 : (-config.ae)))),
					$elm$svg$Svg$Attributes$y1(
					$elm$core$String$fromFloat(
						A2($author$project$Internal$Coordinates$toSVGY, plane, point.a))),
					$elm$svg$Svg$Attributes$y2(
					$elm$core$String$fromFloat(
						A2($author$project$Internal$Coordinates$toSVGY, plane, point.a) + (isX ? config.ae : 0)))
				]),
			_List_Nil);
	});
var $author$project$Internal$Svg$xTick = F3(
	function (plane, config, point) {
		return A4($author$project$Internal$Svg$tick, plane, config, true, point);
	});
var $author$project$Chart$Svg$xTick = F2(
	function (plane, edits) {
		return A2(
			$author$project$Internal$Svg$xTick,
			plane,
			A2($author$project$Internal$Helpers$apply, edits, $author$project$Internal$Svg$defaultTick));
	});
var $author$project$Chart$xTicks = function (edits) {
	var config = A2(
		$author$project$Internal$Helpers$apply,
		edits,
		{aa: 5, d: '', j: false, ad: $author$project$Internal$Svg$Floats, l: true, U: 5, B: _List_Nil, t: $author$project$Chart$Attributes$zero, h: 1});
	var toTicks = function (p) {
		return A2(
			$elm$core$List$map,
			function ($) {
				return $.ay;
			},
			A4(
				$author$project$Chart$generateValues,
				config.aa,
				config.ad,
				$elm$core$Maybe$Nothing,
				A2($author$project$Internal$Helpers$apply, config.B, p.b)));
	};
	var addTickValues = F2(
		function (p, ts) {
			return (!config.l) ? ts : _Utils_update(
				ts,
				{
					O: _Utils_ap(
						ts.O,
						toTicks(p))
				});
		});
	return A2(
		$author$project$Chart$TicksElement,
		addTickValues,
		function (p) {
			var toTick = function (x) {
				return A3(
					$author$project$Chart$Svg$xTick,
					p,
					_List_fromArray(
						[
							$author$project$Chart$Attributes$color(config.d),
							$author$project$Chart$Attributes$length(
							config.j ? (-config.U) : config.U),
							$author$project$Chart$Attributes$width(config.h)
						]),
					{
						b: x,
						a: config.t(p.a)
					});
			};
			return A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('elm-charts__x-ticks')
					]),
				A2(
					$elm$core$List$map,
					toTick,
					toTicks(p)));
		});
};
var $author$project$Examples$Frame$Amount$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$amount(4)
					])),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$amount(4)
					]))
			]));
};
var $author$project$Chart$Svg$positionHtml = $author$project$Internal$Svg$positionHtml;
var $author$project$Chart$htmlAt = F6(
	function (toX, toY, xOff, yOff, att, view) {
		return $author$project$Chart$HtmlElement(
			F2(
				function (p, _v0) {
					return A7(
						$author$project$Chart$Svg$positionHtml,
						p,
						toX(p.b),
						toY(p.a),
						xOff,
						yOff,
						att,
						view);
				}));
	});
var $author$project$Chart$Attributes$percent = F2(
	function (per, b) {
		return b.Y + ((b.J - b.Y) * (per / 100));
	});
var $author$project$Chart$Attributes$red = $author$project$Internal$Helpers$red;
var $author$project$Examples$Frame$Arbitrary$star = F2(
	function (x, y) {
		return A2(
			$elm$svg$Svg$polygon,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$points('100,10 40,198 190,78 10,78 160,198'),
					$elm$svg$Svg$Attributes$fill($author$project$Chart$Attributes$red),
					$elm$svg$Svg$Attributes$transform(
					$elm$core$String$concat(
						_List_fromArray(
							[
								'translate(',
								$elm$core$String$fromFloat(x),
								' ',
								$elm$core$String$fromFloat(y),
								') scale(0.1 0.1)'
							])))
				]),
			_List_Nil);
	});
var $author$project$Chart$Svg$position = $author$project$Internal$Svg$position;
var $author$project$Chart$svgAt = F5(
	function (toX, toY, xOff, yOff, view) {
		return $author$project$Chart$SvgElement(
			function (p) {
				return A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[
							A6(
							$author$project$Chart$Svg$position,
							p,
							0,
							toX(p.b),
							toY(p.a),
							xOff,
							yOff)
						]),
					view);
			});
	});
var $author$project$Chart$yAxis = function (edits) {
	var config = A2(
		$author$project$Internal$Helpers$apply,
		edits,
		{aO: true, d: '', B: _List_Nil, t: $author$project$Chart$Attributes$zero, h: 1});
	var addTickValues = F2(
		function (p, ts) {
			return _Utils_update(
				ts,
				{
					dn: A2(
						$elm$core$List$cons,
						config.t(p.b),
						ts.dn)
				});
		});
	return A2(
		$author$project$Chart$AxisElement,
		addTickValues,
		function (p) {
			var yLimit = A2($author$project$Internal$Helpers$apply, config.B, p.a);
			return A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('elm-charts__y-axis')
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$Svg$line,
						p,
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color(config.d),
								$author$project$Chart$Attributes$width(config.h),
								$author$project$Chart$Attributes$x1(
								config.t(p.b)),
								$author$project$Chart$Attributes$y1(
								A2($elm$core$Basics$max, p.a.Y, yLimit.Y)),
								$author$project$Chart$Attributes$y2(
								A2($elm$core$Basics$min, p.a.J, yLimit.J))
							])),
						config.aO ? A3(
						$author$project$Chart$Svg$arrow,
						p,
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color(config.d),
								$author$project$Chart$Attributes$rotate(-90)
							]),
						{
							b: config.t(p.b),
							a: yLimit.J
						}) : $elm$svg$Svg$text('')
					]));
		});
};
var $author$project$Internal$Svg$yTick = F3(
	function (plane, config, point) {
		return A4($author$project$Internal$Svg$tick, plane, config, false, point);
	});
var $author$project$Chart$Svg$yTick = F2(
	function (plane, edits) {
		return A2(
			$author$project$Internal$Svg$yTick,
			plane,
			A2($author$project$Internal$Helpers$apply, edits, $author$project$Internal$Svg$defaultTick));
	});
var $author$project$Chart$yTicks = function (edits) {
	var config = A2(
		$author$project$Internal$Helpers$apply,
		edits,
		{aa: 5, d: '', j: false, ad: $author$project$Internal$Svg$Floats, l: true, U: 5, B: _List_Nil, t: $author$project$Chart$Attributes$zero, h: 1});
	var toTicks = function (p) {
		return A2(
			$elm$core$List$map,
			function ($) {
				return $.ay;
			},
			A4(
				$author$project$Chart$generateValues,
				config.aa,
				config.ad,
				$elm$core$Maybe$Nothing,
				A2($author$project$Internal$Helpers$apply, config.B, p.a)));
	};
	var addTickValues = F2(
		function (p, ts) {
			return _Utils_update(
				ts,
				{
					_: _Utils_ap(
						ts._,
						toTicks(p))
				});
		});
	return A2(
		$author$project$Chart$TicksElement,
		addTickValues,
		function (p) {
			var toTick = function (y) {
				return A3(
					$author$project$Chart$Svg$yTick,
					p,
					_List_fromArray(
						[
							$author$project$Chart$Attributes$color(config.d),
							$author$project$Chart$Attributes$length(
							config.j ? (-config.U) : config.U),
							$author$project$Chart$Attributes$width(config.h)
						]),
					{
						b: config.t(p.b),
						a: y
					});
			};
			return A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('elm-charts__y-ticks')
					]),
				A2(
					$elm$core$List$map,
					toTick,
					toTicks(p)));
		});
};
var $author$project$Examples$Frame$Arbitrary$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(_List_Nil),
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yAxis(_List_Nil),
				$author$project$Chart$yTicks(_List_Nil),
				$author$project$Chart$yLabels(_List_Nil),
				$author$project$Chart$svg(
				function (p) {
					return A2(
						$elm$svg$Svg$g,
						_List_Nil,
						_List_fromArray(
							[
								A2($author$project$Examples$Frame$Arbitrary$star, 200, 40),
								A2($author$project$Examples$Frame$Arbitrary$star, 250, 50)
							]));
				}),
				A5(
				$author$project$Chart$svgAt,
				$author$project$Chart$Attributes$percent(80),
				$author$project$Chart$Attributes$percent(20),
				0,
				0,
				_List_fromArray(
					[
						A2(
						$elm$svg$Svg$circle,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$r('10'),
								$elm$svg$Svg$Attributes$fill('blue')
							]),
						_List_Nil)
					])),
				A6(
				$author$project$Chart$htmlAt,
				function ($) {
					return $.Y;
				},
				$author$project$Chart$Attributes$middle,
				30,
				0,
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'border', '1px solid gray'),
						A2($elm$html$Html$Attributes$style, 'padding', '5px'),
						A2($elm$html$Html$Attributes$style, 'background', 'white')
					]),
				_List_fromArray(
					[
						$elm$html$Html$text('My arbitrary HTML')
					]))
			]));
};
var $author$project$Chart$Attributes$domain = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{d9: v});
	};
};
var $author$project$Chart$Attributes$highest = F2(
	function (v, edit) {
		return function (b) {
			return _Utils_update(
				b,
				{
					J: A3(edit, v, b.J, b.hj)
				});
		};
	});
var $author$project$Chart$interpolated = F2(
	function (y, inter) {
		return A2(
			$author$project$Internal$Property$notStacked,
			A2($elm$core$Basics$composeR, y, $elm$core$Maybe$Just),
			_Utils_ap(
				_List_fromArray(
					[$author$project$Chart$Attributes$linear]),
				inter));
	});
var $author$project$Chart$Attributes$likeData = function (b) {
	return _Utils_update(
		b,
		{J: b.hj, Y: b.hk});
};
var $author$project$Chart$Attributes$limits = function (value) {
	return function (config) {
		return _Utils_update(
			config,
			{B: value});
	};
};
var $author$project$Chart$Attributes$orHigher = F3(
	function (most, real, _v0) {
		return (_Utils_cmp(real, most) < 0) ? most : real;
	});
var $author$project$Chart$Attributes$range = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{ex: v});
	};
};
var $author$project$Chart$SeriesElement = F4(
	function (a, b, c, d) {
		return {$: 1, a: a, b: b, c: c, d: d};
	});
var $author$project$Internal$Legend$LineLegend = F3(
	function (a, b, c) {
		return {$: 1, a: a, b: b, c: c};
	});
var $author$project$Internal$Helpers$noChange = $elm$core$Basics$identity;
var $author$project$Internal$Legend$toDotLegends = F2(
	function (elIndex, properties) {
		var toInterConfig = function (attrs) {
			return A2($author$project$Internal$Helpers$apply, attrs, $author$project$Internal$Svg$defaultInterpolation);
		};
		var toDotLegend = F3(
			function (props, prop, colorIndex) {
				var defaultOpacity = ($elm$core$List$length(props) > 1) ? 0.4 : 0;
				var interAttr = _Utils_ap(
					_List_fromArray(
						[
							$author$project$Chart$Attributes$color(
							$author$project$Internal$Helpers$toDefaultColor(colorIndex)),
							$author$project$Chart$Attributes$opacity(defaultOpacity)
						]),
					prop.hU);
				var interConfig = toInterConfig(interAttr);
				var defaultName = 'Property #' + $elm$core$String$fromInt(colorIndex + 1);
				var defaultAttrs = _List_fromArray(
					[
						$author$project$Chart$Attributes$color(interConfig.d),
						$author$project$Chart$Attributes$border(interConfig.d),
						_Utils_eq(interConfig.aU, $elm$core$Maybe$Nothing) ? $author$project$Chart$Attributes$circle : $author$project$Internal$Helpers$noChange
					]);
				var dotAttrs = _Utils_ap(defaultAttrs, prop.ij);
				return A3(
					$author$project$Internal$Legend$LineLegend,
					A2($elm$core$Maybe$withDefault, defaultName, prop.f8),
					interAttr,
					dotAttrs);
			});
		return A2(
			$elm$core$List$indexedMap,
			F2(
				function (propIndex, f) {
					return f(elIndex + propIndex);
				}),
			A2(
				$elm$core$List$concatMap,
				function (ps) {
					return A2(
						$elm$core$List$map,
						toDotLegend(ps),
						ps);
				},
				A2($elm$core$List$map, $author$project$Internal$Property$toConfigs, properties)));
	});
var $author$project$Internal$Item$Dot = function (a) {
	return {$: 0, a: a};
};
var $elm$core$Maybe$map2 = F3(
	function (func, ma, mb) {
		if (ma.$ === 1) {
			return $elm$core$Maybe$Nothing;
		} else {
			var a = ma.a;
			if (mb.$ === 1) {
				return $elm$core$Maybe$Nothing;
			} else {
				var b = mb.a;
				return $elm$core$Maybe$Just(
					A2(func, a, b));
			}
		}
	});
var $author$project$Internal$Produce$toDotSeries = F4(
	function (elementIndex, toX, properties, data) {
		var forEachDataPoint = F9(
			function (absoluteIndex, stackSeriesConfigIndex, lineSeriesConfigIndex, lineSeriesConfig, interpolationConfig, defaultColor, defaultOpacity, dataIndex, datum) {
				var y = A2(
					$elm$core$Maybe$withDefault,
					0,
					lineSeriesConfig.dg(datum));
				var x = toX(datum);
				var identification = {gC: absoluteIndex, e4: dataIndex, hs: elementIndex, iz: lineSeriesConfigIndex, iI: stackSeriesConfigIndex};
				var defaultAttrs = _List_fromArray(
					[
						$author$project$Chart$Attributes$color(interpolationConfig.d),
						$author$project$Chart$Attributes$border(interpolationConfig.d),
						_Utils_eq(interpolationConfig.aU, $elm$core$Maybe$Nothing) ? $author$project$Chart$Attributes$circle : $author$project$Internal$Helpers$noChange
					]);
				var dotAttrs = _Utils_ap(
					defaultAttrs,
					_Utils_ap(
						lineSeriesConfig.ij,
						A2(lineSeriesConfig.gd, identification, datum)));
				var dotConfig = A2($author$project$Internal$Helpers$apply, dotAttrs, $author$project$Internal$Svg$defaultDot);
				var radius = A2(
					$elm$core$Maybe$withDefault,
					0,
					A2(
						$elm$core$Maybe$map,
						$author$project$Internal$Svg$toRadius(dotConfig.iD),
						dotConfig.aW));
				var tooltipTextColor = (dotConfig.d === 'white') ? ((dotConfig.H === 'white') ? interpolationConfig.d : dotConfig.H) : dotConfig.d;
				return A2(
					$author$project$Internal$Item$Rendered,
					{
						d: tooltipTextColor,
						hl: datum,
						hJ: identification,
						hW: !_Utils_eq(
							lineSeriesConfig.d$(datum),
							$elm$core$Maybe$Nothing),
						dO: lineSeriesConfig.f8,
						ij: dotConfig,
						i7: $author$project$Internal$Item$Dot,
						jj: lineSeriesConfig.jj(datum),
						a1: x,
						dm: x,
						a: y
					},
					{
						B: {a1: x, dm: x, jx: y, eP: y},
						fW: F2(
							function (plane, _v5) {
								var _v6 = lineSeriesConfig.d$(datum);
								if (_v6.$ === 1) {
									return $elm$svg$Svg$text('');
								} else {
									return A5(
										$author$project$Internal$Svg$dot,
										plane,
										function ($) {
											return $.b;
										},
										function ($) {
											return $.a;
										},
										dotConfig,
										{b: x, a: y});
								}
							}),
						jc: function (plane) {
							var radiusY = A2($author$project$Internal$Coordinates$scaleCartesianY, plane, radius);
							var radiusX = A2($author$project$Internal$Coordinates$scaleCartesianX, plane, radius);
							return {a1: x - radiusX, dm: x + radiusX, jx: y - radiusY, eP: y + radiusY};
						},
						ji: function (_v7) {
							return _List_fromArray(
								[
									A3(
									$author$project$Internal$Produce$tooltipRow,
									tooltipTextColor,
									A2($author$project$Internal$Produce$toDefaultName, identification, lineSeriesConfig.f8),
									lineSeriesConfig.jj(datum))
								]);
						}
					});
			});
		var forEachLine = F5(
			function (isStacked, absoluteIndex, stackSeriesConfigIndex, lineSeriesConfigIndex, lineSeriesConfig) {
				var defaultOpacity = isStacked ? 0.4 : 0;
				var absoluteIndexNew = absoluteIndex + lineSeriesConfigIndex;
				var defaultColor = $author$project$Internal$Helpers$toDefaultColor(absoluteIndexNew);
				var interpolationAttrs = _List_fromArray(
					[
						$author$project$Chart$Attributes$color(defaultColor),
						$author$project$Chart$Attributes$opacity(defaultOpacity)
					]);
				var interpolationConfig = A2(
					$author$project$Internal$Helpers$apply,
					_Utils_ap(interpolationAttrs, lineSeriesConfig.hU),
					$author$project$Internal$Svg$defaultInterpolation);
				var dotItems = A2(
					$elm$core$List$indexedMap,
					A7(forEachDataPoint, absoluteIndexNew, stackSeriesConfigIndex, lineSeriesConfigIndex, lineSeriesConfig, interpolationConfig, defaultColor, defaultOpacity),
					data);
				var viewSeries = function (plane) {
					var toBottom = function (datum) {
						return A3(
							$elm$core$Maybe$map2,
							F2(
								function (y, ySum) {
									return ySum - y;
								}),
							lineSeriesConfig.d$(datum),
							lineSeriesConfig.dg(datum));
					};
					return A2(
						$elm$svg$Svg$g,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$class('elm-charts__series')
							]),
						_List_fromArray(
							[
								A6(
								$author$project$Internal$Svg$area,
								plane,
								toX,
								$elm$core$Maybe$Just(toBottom),
								lineSeriesConfig.dg,
								interpolationConfig,
								data),
								A5($author$project$Internal$Svg$interpolation, plane, toX, lineSeriesConfig.dg, interpolationConfig, data),
								A2(
								$elm$svg$Svg$g,
								_List_fromArray(
									[
										$elm$svg$Svg$Attributes$class('elm-charts__dots')
									]),
								A2(
									$elm$core$List$map,
									$author$project$Internal$Item$render(plane),
									dotItems))
							]));
				};
				return A2(
					$author$project$Internal$Helpers$withFirst,
					dotItems,
					F2(
						function (first, rest) {
							return A2(
								$author$project$Internal$Item$Rendered,
								_Utils_Tuple2(first, rest),
								{
									B: A2($author$project$Internal$Coordinates$foldPosition, $author$project$Internal$Item$getLimits, dotItems),
									fW: F2(
										function (plane, _v3) {
											return viewSeries(plane);
										}),
									jc: function (plane) {
										return A2(
											$author$project$Internal$Coordinates$foldPosition,
											$author$project$Internal$Item$getPosition(plane),
											dotItems);
									},
									ji: function (_v4) {
										return _List_fromArray(
											[
												A2(
												$elm$html$Html$table,
												_List_fromArray(
													[
														A2($elm$html$Html$Attributes$style, 'margin', '0')
													]),
												A2($elm$core$List$concatMap, $author$project$Internal$Item$tooltip, dotItems))
											]);
									}
								});
						}));
			});
		var forEachStackSeriesConfig = F2(
			function (stackSeriesConfig, _v2) {
				var absoluteIndex = _v2.a;
				var stackSeriesConfigIndex = _v2.b;
				var items = _v2.c;
				var lineItems = function () {
					if (!stackSeriesConfig.$) {
						var lineSeriesConfig = stackSeriesConfig.a;
						return _List_fromArray(
							[
								A5(forEachLine, false, absoluteIndex, stackSeriesConfigIndex, 0, lineSeriesConfig)
							]);
					} else {
						var lineSeriesConfigs = stackSeriesConfig.a;
						return A2(
							$elm$core$List$indexedMap,
							A3(forEachLine, true, absoluteIndex, stackSeriesConfigIndex),
							lineSeriesConfigs);
					}
				}();
				return _Utils_Tuple3(
					absoluteIndex + $elm$core$List$length(lineItems),
					stackSeriesConfigIndex + 1,
					_Utils_ap(
						items,
						A2($elm$core$List$filterMap, $elm$core$Basics$identity, lineItems)));
			});
		return function (_v0) {
			var items = _v0.c;
			return items;
		}(
			A3(
				$elm$core$List$foldl,
				forEachStackSeriesConfig,
				_Utils_Tuple3(elementIndex, 0, _List_Nil),
				properties));
	});
var $author$project$Chart$seriesMap = F4(
	function (mapData, toX, properties, data) {
		return $author$project$Chart$Indexed(
			function (index) {
				var legends_ = A2($author$project$Internal$Legend$toDotLegends, index, properties);
				var items = A4($author$project$Internal$Produce$toDotSeries, index, toX, properties, data);
				var toLimits = A2($elm$core$List$map, $author$project$Internal$Item$getLimits, items);
				var generalized = A2(
					$elm$core$List$map,
					$author$project$Internal$Item$map(mapData),
					A2($elm$core$List$concatMap, $author$project$Internal$Many$generalize, items));
				return _Utils_Tuple2(
					A4(
						$author$project$Chart$SeriesElement,
						toLimits,
						generalized,
						legends_,
						function (p) {
							return A2(
								$elm$svg$Svg$map,
								$elm$core$Basics$never,
								A2(
									$elm$svg$Svg$g,
									_List_fromArray(
										[
											$elm$svg$Svg$Attributes$class('elm-charts__dot-series')
										]),
									A2(
										$elm$core$List$map,
										$author$project$Internal$Item$render(p),
										items)));
						}),
					index + $elm$core$List$length(items));
			});
	});
var $author$project$Chart$series = F3(
	function (toX, properties, data) {
		return A4($author$project$Chart$seriesMap, $elm$core$Basics$identity, toX, properties, data);
	});
var $author$project$Examples$Frame$AxisLength$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$range(
				_List_fromArray(
					[
						A2($author$project$Chart$Attributes$lowest, 0, $author$project$Chart$Attributes$orLower),
						A2($author$project$Chart$Attributes$highest, 100, $author$project$Chart$Attributes$orHigher)
					])),
				$author$project$Chart$Attributes$domain(
				_List_fromArray(
					[
						A2($author$project$Chart$Attributes$lowest, 0, $author$project$Chart$Attributes$orLower),
						A2($author$project$Chart$Attributes$highest, 100, $author$project$Chart$Attributes$orHigher)
					]))
			]),
		_List_fromArray(
			[
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_Nil,
						_List_Nil)
					]),
				_List_fromArray(
					[
						{b: 10, a: 20},
						{b: 85, a: 80}
					])),
				$author$project$Chart$xAxis(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$noArrow,
						$author$project$Chart$Attributes$limits(
						_List_fromArray(
							[$author$project$Chart$Attributes$likeData]))
					])),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid]))
			]));
};
var $author$project$Chart$Attributes$htmlAttrs = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{dI: v});
	};
};
var $author$project$Examples$Frame$Background$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$margin(
				{a4: 30, c2: 30, c5: 20, di: 20}),
				$author$project$Chart$Attributes$htmlAttrs(
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'background', '#fcf9e9')
					]))
			]),
		_List_fromArray(
			[
				$author$project$Chart$grid(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$color('white')
					])),
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$yAxis(_List_Nil),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_Nil,
						_List_Nil)
					]),
				_List_fromArray(
					[
						{b: 0, a: 0},
						{b: 10, a: 10}
					])),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid]))
			]));
};
var $author$project$Examples$Frame$Basic$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(_List_Nil),
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yAxis(_List_Nil),
				$author$project$Chart$yTicks(_List_Nil),
				$author$project$Chart$yLabels(_List_Nil)
			]));
};
var $author$project$Examples$Frame$Color$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(_List_Nil),
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yAxis(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$color($author$project$Chart$Attributes$pink)
					])),
				$author$project$Chart$yTicks(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$color($author$project$Chart$Attributes$pink)
					])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$color($author$project$Chart$Attributes$pink)
					]))
			]));
};
var $author$project$Internal$Svg$fromCartesian = F2(
	function (plane, point) {
		return {
			b: A2($author$project$Internal$Coordinates$toSVGX, plane, point.b),
			a: A2($author$project$Internal$Coordinates$toSVGY, plane, point.a)
		};
	});
var $author$project$Chart$Svg$fromCartesian = $author$project$Internal$Svg$fromCartesian;
var $author$project$Chart$Svg$fromSvg = $author$project$Internal$Svg$fromSvg;
var $author$project$Examples$Frame$Coordinates$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(_List_Nil),
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yAxis(_List_Nil),
				$author$project$Chart$yTicks(_List_Nil),
				$author$project$Chart$yLabels(_List_Nil),
				$author$project$Chart$svg(
				function (p) {
					var point = {b: 6, a: 4};
					var pointSvg = A2($author$project$Chart$Svg$fromCartesian, p, point);
					var color = _Utils_eq(
						A2($author$project$Chart$Svg$fromSvg, p, pointSvg),
						point) ? 'purple' : 'blue';
					return A2(
						$elm$svg$Svg$g,
						_List_Nil,
						_List_fromArray(
							[
								A2(
								$elm$svg$Svg$circle,
								_List_fromArray(
									[
										$elm$svg$Svg$Attributes$r('10'),
										$elm$svg$Svg$Attributes$fill(color),
										$elm$svg$Svg$Attributes$cx(
										$elm$core$String$fromFloat(pointSvg.b)),
										$elm$svg$Svg$Attributes$cy(
										$elm$core$String$fromFloat(pointSvg.a))
									]),
								_List_Nil)
							]));
				})
			]));
};
var $author$project$Examples$Frame$CustomElements$OnHover = $elm$core$Basics$identity;
var $author$project$Internal$Coordinates$center = function (pos) {
	return {b: pos.a1 + ((pos.dm - pos.a1) / 2), a: pos.jx + ((pos.eP - pos.jx) / 2)};
};
var $author$project$Internal$Coordinates$pointToPosition = function (point) {
	return {a1: point.b, dm: point.b, jx: point.a, eP: point.a};
};
var $author$project$Chart$Attributes$center = function (config) {
	return _Utils_update(
		config,
		{
			hy: $elm$core$Maybe$Just(
				A2($elm$core$Basics$composeR, $author$project$Internal$Coordinates$center, $author$project$Internal$Coordinates$pointToPosition))
		});
};
var $author$project$Internal$Item$Custom = {$: 2};
var $author$project$Chart$CustomElement = F2(
	function (a, b) {
		return {$: 3, a: a, b: b};
	});
var $author$project$Chart$custom = function (config) {
	return $author$project$Chart$Indexed(
		function (elIndex) {
			var item = A2(
				$author$project$Internal$Item$Rendered,
				{
					d: config.d,
					hl: config.dC,
					hJ: {gC: -1, e4: -1, hs: elIndex, iz: -1, iI: -1},
					hW: true,
					dO: $elm$core$Maybe$Just(config.dO),
					ij: 0,
					i7: $elm$core$Basics$always($author$project$Internal$Item$Custom),
					jj: config.I(config.dC),
					a1: config.F.a1,
					dm: config.F.dm,
					a: config.F.eP
				},
				{
					B: config.F,
					fW: F2(
						function (plane, position) {
							return config.fW(plane);
						}),
					jc: function (_v0) {
						return config.F;
					},
					ji: function (_v1) {
						return _List_fromArray(
							[
								A3(
								$author$project$Internal$Produce$tooltipRow,
								config.d,
								config.dO,
								config.I(config.dC))
							]);
					}
				});
			return _Utils_Tuple2(
				A2(
					$author$project$Chart$CustomElement,
					$author$project$Internal$Item$generalize(item),
					function (p) {
						return A2(
							$elm$svg$Svg$map,
							$elm$core$Basics$never,
							A2($author$project$Internal$Item$render, p, item));
					}),
				elIndex + 1);
		});
};
var $author$project$Chart$ListOfElements = function (a) {
	return {$: 11, a: a};
};
var $author$project$Chart$list = $author$project$Chart$ListOfElements;
var $author$project$Chart$Attributes$offset = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{h8: v});
	};
};
var $author$project$Internal$Svg$TopOrBottom = 5;
var $author$project$Chart$Attributes$onTopOrBottom = function (config) {
	return _Utils_update(
		config,
		{
			hp: $elm$core$Maybe$Just(5)
		});
};
var $author$project$Internal$Svg$defaultRect = {i: _List_Nil, H: 'rgba(210, 210, 210, 1)', P: 1, d: 'rgba(210, 210, 210, 0.5)', r: false, ag: 1, a1: $elm$core$Maybe$Nothing, dm: $elm$core$Maybe$Nothing, jx: $elm$core$Maybe$Nothing, eP: $elm$core$Maybe$Nothing};
var $author$project$Internal$Svg$rect = F2(
	function (plane, config) {
		var _v0 = function () {
			var _v3 = _Utils_Tuple2(
				_Utils_Tuple2(config.a1, config.dm),
				_Utils_Tuple2(config.jx, config.eP));
			_v3$11:
			while (true) {
				if (!_v3.a.a.$) {
					if (_v3.a.b.$ === 1) {
						if (_v3.b.a.$ === 1) {
							if (_v3.b.b.$ === 1) {
								var _v8 = _v3.a;
								var a = _v8.a.a;
								var _v9 = _v8.b;
								var _v10 = _v3.b;
								var _v11 = _v10.a;
								var _v12 = _v10.b;
								return _Utils_Tuple2(
									_Utils_Tuple2(a, a),
									_Utils_Tuple2(plane.a.Y, plane.a.J));
							} else {
								break _v3$11;
							}
						} else {
							if (!_v3.b.b.$) {
								var _v35 = _v3.a;
								var c = _v35.a.a;
								var _v36 = _v35.b;
								var _v37 = _v3.b;
								var a = _v37.a.a;
								var b = _v37.b.a;
								return _Utils_Tuple2(
									_Utils_Tuple2(c, c),
									_Utils_Tuple2(a, b));
							} else {
								break _v3$11;
							}
						}
					} else {
						if (_v3.b.a.$ === 1) {
							if (_v3.b.b.$ === 1) {
								var _v4 = _v3.a;
								var a = _v4.a.a;
								var b = _v4.b.a;
								var _v5 = _v3.b;
								var _v6 = _v5.a;
								var _v7 = _v5.b;
								return _Utils_Tuple2(
									_Utils_Tuple2(a, b),
									_Utils_Tuple2(plane.a.Y, plane.a.J));
							} else {
								var _v38 = _v3.a;
								var a = _v38.a.a;
								var b = _v38.b.a;
								var _v39 = _v3.b;
								var _v40 = _v39.a;
								var c = _v39.b.a;
								return _Utils_Tuple2(
									_Utils_Tuple2(a, b),
									_Utils_Tuple2(c, c));
							}
						} else {
							if (_v3.b.b.$ === 1) {
								var _v41 = _v3.a;
								var a = _v41.a.a;
								var b = _v41.b.a;
								var _v42 = _v3.b;
								var c = _v42.a.a;
								var _v43 = _v42.b;
								return _Utils_Tuple2(
									_Utils_Tuple2(a, b),
									_Utils_Tuple2(c, c));
							} else {
								break _v3$11;
							}
						}
					}
				} else {
					if (!_v3.a.b.$) {
						if (_v3.b.a.$ === 1) {
							if (_v3.b.b.$ === 1) {
								var _v13 = _v3.a;
								var _v14 = _v13.a;
								var b = _v13.b.a;
								var _v15 = _v3.b;
								var _v16 = _v15.a;
								var _v17 = _v15.b;
								return _Utils_Tuple2(
									_Utils_Tuple2(b, b),
									_Utils_Tuple2(plane.a.Y, plane.a.J));
							} else {
								break _v3$11;
							}
						} else {
							if (!_v3.b.b.$) {
								var _v32 = _v3.a;
								var _v33 = _v32.a;
								var c = _v32.b.a;
								var _v34 = _v3.b;
								var a = _v34.a.a;
								var b = _v34.b.a;
								return _Utils_Tuple2(
									_Utils_Tuple2(c, c),
									_Utils_Tuple2(a, b));
							} else {
								break _v3$11;
							}
						}
					} else {
						if (!_v3.b.a.$) {
							if (!_v3.b.b.$) {
								var _v18 = _v3.a;
								var _v19 = _v18.a;
								var _v20 = _v18.b;
								var _v21 = _v3.b;
								var a = _v21.a.a;
								var b = _v21.b.a;
								return _Utils_Tuple2(
									_Utils_Tuple2(plane.b.Y, plane.b.Y),
									_Utils_Tuple2(a, b));
							} else {
								var _v22 = _v3.a;
								var _v23 = _v22.a;
								var _v24 = _v22.b;
								var _v25 = _v3.b;
								var a = _v25.a.a;
								var _v26 = _v25.b;
								return _Utils_Tuple2(
									_Utils_Tuple2(plane.b.Y, plane.b.J),
									_Utils_Tuple2(a, a));
							}
						} else {
							if (!_v3.b.b.$) {
								var _v27 = _v3.a;
								var _v28 = _v27.a;
								var _v29 = _v27.b;
								var _v30 = _v3.b;
								var _v31 = _v30.a;
								var b = _v30.b.a;
								return _Utils_Tuple2(
									_Utils_Tuple2(plane.b.Y, plane.b.J),
									_Utils_Tuple2(b, b));
							} else {
								var _v44 = _v3.a;
								var _v45 = _v44.a;
								var _v46 = _v44.b;
								var _v47 = _v3.b;
								var _v48 = _v47.a;
								var _v49 = _v47.b;
								return _Utils_Tuple2(
									_Utils_Tuple2(plane.b.Y, plane.b.J),
									_Utils_Tuple2(plane.a.Y, plane.a.J));
							}
						}
					}
				}
			}
			return _Utils_Tuple2(
				_Utils_Tuple2(
					A2($elm$core$Maybe$withDefault, plane.b.Y, config.a1),
					A2($elm$core$Maybe$withDefault, plane.b.J, config.dm)),
				_Utils_Tuple2(
					A2($elm$core$Maybe$withDefault, plane.a.Y, config.jx),
					A2($elm$core$Maybe$withDefault, plane.a.J, config.eP)));
		}();
		var _v1 = _v0.a;
		var x1_ = _v1.a;
		var x2_ = _v1.b;
		var _v2 = _v0.b;
		var y1_ = _v2.a;
		var y2_ = _v2.b;
		var cmds = _List_fromArray(
			[
				A2($author$project$Internal$Commands$Move, x1_, y1_),
				A2($author$project$Internal$Commands$Line, x1_, y1_),
				A2($author$project$Internal$Commands$Line, x2_, y1_),
				A2($author$project$Internal$Commands$Line, x2_, y2_),
				A2($author$project$Internal$Commands$Line, x1_, y2_),
				A2($author$project$Internal$Commands$Line, x1_, y1_)
			]);
		return A4(
			$author$project$Internal$Svg$withAttrs,
			config.i,
			$elm$svg$Svg$path,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$class('elm-charts__rect'),
					$elm$svg$Svg$Attributes$fill(config.d),
					$elm$svg$Svg$Attributes$fillOpacity(
					$elm$core$String$fromFloat(config.ag)),
					$elm$svg$Svg$Attributes$stroke(config.H),
					$elm$svg$Svg$Attributes$strokeWidth(
					$elm$core$String$fromFloat(config.P)),
					$elm$svg$Svg$Attributes$d(
					A2($author$project$Internal$Commands$description, plane, cmds)),
					config.r ? $author$project$Internal$Svg$withinChartArea(plane) : $elm$svg$Svg$Attributes$class('')
				]),
			_List_Nil);
	});
var $author$project$Chart$Svg$rect = F2(
	function (plane, edits) {
		return A2(
			$author$project$Internal$Svg$rect,
			plane,
			A2($author$project$Internal$Helpers$apply, edits, $author$project$Internal$Svg$defaultRect));
	});
var $author$project$Examples$Frame$CustomElements$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$any)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xTicks(_List_Nil),
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yTicks(_List_Nil),
				$author$project$Chart$yLabels(_List_Nil),
				$author$project$Chart$list(
				function () {
					var heatmapItem = F2(
						function (index, value) {
							var y = ((index / 5) | 0) * 2;
							var x = (index % 5) * 2;
							var color = (value > 8) ? '#0E4D64' : ((value > 6) ? '#137177' : ((value > 4) ? '#188977' : ((value > 2) ? '#1D9A6C' : ((value > 0) ? '#74C67A' : ((!value) ? '#99D492' : '#0A2F51')))));
							return $author$project$Chart$custom(
								{
									d: color,
									dC: {b: index, a: value},
									I: function (coord) {
										return $elm$core$String$fromFloat(coord.a) + ' C°';
									},
									dO: 'Temperature',
									F: {a1: x, dm: x + 2, jx: y, eP: y + 2},
									fW: function (p) {
										return A2(
											$author$project$Chart$Svg$rect,
											p,
											_List_fromArray(
												[
													$author$project$Chart$Attributes$x1(x),
													$author$project$Chart$Attributes$x2(x + 2),
													$author$project$Chart$Attributes$y1(y),
													$author$project$Chart$Attributes$y2(y + 2),
													$author$project$Chart$Attributes$color(color),
													$author$project$Chart$Attributes$border('white')
												]));
									}
								});
						});
					return A2(
						$elm$core$List$indexedMap,
						heatmapItem,
						_List_fromArray(
							[2, 5, 8, 5, 3, 5, 7, 9, 0, 3, 2, 4, 6, 3, 5, 7, 9, 0, 3, 2, 4, 6, 7, 8, 10]));
				}()),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (_v0, item) {
						return _List_fromArray(
							[
								A4(
								$author$project$Chart$tooltip,
								item,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$center,
										$author$project$Chart$Attributes$offset(0),
										$author$project$Chart$Attributes$onTopOrBottom
									]),
								_List_Nil,
								_List_Nil)
							]);
					}))
			]));
};
var $author$project$Chart$Attributes$format = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{
				I: $elm$core$Maybe$Just(v)
			});
	};
};
var $author$project$Examples$Frame$CustomFormat$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$format(
						function (x) {
							return $elm$core$String$fromFloat(x) + ' C°';
						}),
						$author$project$Chart$Attributes$withGrid
					]))
			]));
};
var $author$project$Chart$Attributes$fontSize = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{
				q: $elm$core$Maybe$Just(v)
			});
	};
};
var $author$project$Chart$generate = F5(
	function (num, gen, limit, attrs, func) {
		return $author$project$Chart$SubElements(
			F2(
				function (p, _v0) {
					var items = A3(
						$author$project$Chart$Svg$generate,
						num,
						gen,
						A2(
							$author$project$Internal$Helpers$apply,
							attrs,
							limit(p)));
					return A2(
						$elm$core$List$concatMap,
						func(p),
						items);
				}));
	});
var $author$project$Chart$Attributes$noChange = $elm$core$Basics$identity;
var $author$project$Chart$Attributes$x = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{b: v});
	};
};
var $author$project$Chart$LabelElement = F3(
	function (a, b, c) {
		return {$: 8, a: a, b: b, c: c};
	});
var $author$project$Chart$xLabel = F2(
	function (edits, inner) {
		var toTickValues = F3(
			function (p, config, ts) {
				return (!config.l) ? ts : _Utils_update(
					ts,
					{
						O: _Utils_ap(
							ts.O,
							_List_fromArray(
								[config.b]))
					});
			});
		var toConfig = function (p) {
			return A2(
				$author$project$Internal$Helpers$apply,
				edits,
				{
					o: $elm$core$Maybe$Nothing,
					i: _List_Nil,
					H: 'white',
					P: 0.1,
					d: '#808BAB',
					p: $elm$core$Maybe$Nothing,
					j: false,
					q: $elm$core$Maybe$Nothing,
					l: false,
					r: false,
					u: 0,
					w: false,
					b: $author$project$Chart$Attributes$middle(p.b),
					m: 0,
					a: $author$project$Chart$Attributes$zero(p.a),
					n: 20
				});
		};
		return A3(
			$author$project$Chart$LabelElement,
			toConfig,
			toTickValues,
			F2(
				function (p, config) {
					var string = _Utils_eq(inner, _List_Nil) ? _List_fromArray(
						[
							$elm$svg$Svg$text(
							$elm$core$String$fromFloat(config.b))
						]) : inner;
					return A4(
						$author$project$Internal$Svg$label,
						p,
						{
							o: config.o,
							i: config.i,
							H: config.H,
							P: config.P,
							d: config.d,
							p: config.p,
							q: config.q,
							r: config.r,
							u: config.u,
							w: config.w,
							m: config.m,
							n: config.j ? ((-config.n) + 10) : config.n
						},
						string,
						{b: config.b, a: config.a});
				}));
	});
var $author$project$Chart$Attributes$y = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{a: v});
	};
};
var $author$project$Examples$Frame$CustomLabels$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				A5(
				$author$project$Chart$generate,
				12,
				$author$project$Chart$Svg$ints,
				function ($) {
					return $.b;
				},
				_List_Nil,
				F2(
					function (p, num) {
						var isEven = !(num % 2);
						return _List_fromArray(
							[
								A2(
								$author$project$Chart$xLabel,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$x(num),
										$author$project$Chart$Attributes$withGrid,
										isEven ? $author$project$Chart$Attributes$noChange : $author$project$Chart$Attributes$y(p.a.J),
										isEven ? $author$project$Chart$Attributes$noChange : $author$project$Chart$Attributes$moveUp(28),
										isEven ? $author$project$Chart$Attributes$noChange : $author$project$Chart$Attributes$fontSize(10),
										isEven ? $author$project$Chart$Attributes$noChange : $author$project$Chart$Attributes$color($author$project$Chart$Attributes$blue)
									]),
								_List_fromArray(
									[
										$elm$svg$Svg$text(
										$elm$core$String$fromInt(num) + '°')
									]))
							]);
					}))
			]));
};
var $author$project$Examples$Frame$Dimensions$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$range(
				_List_fromArray(
					[
						A2($author$project$Chart$Attributes$lowest, 5, $author$project$Chart$Attributes$orLower),
						A2($author$project$Chart$Attributes$highest, 90, $author$project$Chart$Attributes$orHigher)
					])),
				$author$project$Chart$Attributes$domain(
				_List_fromArray(
					[
						A2($author$project$Chart$Attributes$lowest, 5, $author$project$Chart$Attributes$orLower),
						A2($author$project$Chart$Attributes$highest, 100, $author$project$Chart$Attributes$orHigher)
					]))
			]),
		_List_fromArray(
			[
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_Nil,
						_List_Nil)
					]),
				_List_fromArray(
					[
						{b: 10, a: 20},
						{b: 80, a: 80}
					])),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$amount(10),
						$author$project$Chart$Attributes$withGrid
					])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$amount(10),
						$author$project$Chart$Attributes$withGrid
					]))
			]));
};
var $author$project$Chart$Attributes$dotGrid = function (config) {
	return _Utils_update(
		config,
		{bg: true});
};
var $author$project$Examples$Frame$DotGrid$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$grid(
				_List_fromArray(
					[$author$project$Chart$Attributes$dotGrid])),
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(_List_Nil),
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yAxis(_List_Nil),
				$author$project$Chart$yTicks(_List_Nil),
				$author$project$Chart$yLabels(_List_Nil)
			]));
};
var $author$project$Chart$Attributes$ellipsis = F2(
	function (w, h) {
		return function (config) {
			return _Utils_update(
				config,
				{
					p: $elm$core$Maybe$Just(
						{U: h, h: w})
				});
		};
	});
var $author$project$Examples$Frame$Ellipsis$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$margin(
				{a4: 30, c2: 45, c5: 15, di: 10})
			]),
		_List_fromArray(
			[
				$author$project$Chart$yAxis(
				_List_fromArray(
					[$author$project$Chart$Attributes$noArrow])),
				$author$project$Chart$yTicks(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$format(
						function (y) {
							return $elm$core$String$fromFloat(y) + ' yyyyyyy';
						}),
						A2($author$project$Chart$Attributes$ellipsis, 35, 20)
					])),
				$author$project$Chart$xAxis(
				_List_fromArray(
					[$author$project$Chart$Attributes$noArrow])),
				$author$project$Chart$xTicks(_List_Nil),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$format(
						function (x) {
							return $elm$core$String$fromFloat(x) + ' xxxxxxx';
						}),
						A2($author$project$Chart$Attributes$ellipsis, 35, 20)
					]))
			]));
};
var $author$project$Examples$Frame$GridColor$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$grid(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$color($author$project$Chart$Attributes$blue)
					])),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid]))
			]));
};
var $author$project$Chart$Attributes$noGrid = function (config) {
	return _Utils_update(
		config,
		{l: false});
};
var $author$project$Examples$Frame$GridFilter$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$xTicks(
				_List_fromArray(
					[$author$project$Chart$Attributes$noGrid])),
				$author$project$Chart$yLabels(_List_Nil),
				$author$project$Chart$yTicks(
				_List_fromArray(
					[$author$project$Chart$Attributes$noGrid]))
			]));
};
var $author$project$Chart$Attributes$alignLeft = function (config) {
	return _Utils_update(
		config,
		{
			o: $elm$core$Maybe$Just(1)
		});
};
var $author$project$Examples$Frame$LabelWithLine$Datum = F2(
	function (age, toys) {
		return {eT: age, f9: toys};
	});
var $author$project$Examples$Frame$LabelWithLine$data = _List_fromArray(
	[
		A2($author$project$Examples$Frame$LabelWithLine$Datum, 5, 6)
	]);
var $author$project$Chart$Attributes$exactly = F3(
	function (exact, _v0, _v1) {
		return exact;
	});
var $author$project$Chart$scatter = function (y) {
	return A2(
		$author$project$Internal$Property$notStacked,
		A2($elm$core$Basics$composeR, y, $elm$core$Maybe$Just),
		_List_Nil);
};
var $author$project$Examples$Frame$LabelWithLine$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 10, c5: 10, di: 25}),
				$author$project$Chart$Attributes$range(
				_List_fromArray(
					[
						A2($author$project$Chart$Attributes$lowest, 0, $author$project$Chart$Attributes$exactly),
						A2($author$project$Chart$Attributes$highest, 10, $author$project$Chart$Attributes$exactly)
					])),
				$author$project$Chart$Attributes$domain(
				_List_fromArray(
					[
						A2($author$project$Chart$Attributes$lowest, 0, $author$project$Chart$Attributes$exactly),
						A2($author$project$Chart$Attributes$highest, 10, $author$project$Chart$Attributes$exactly)
					]))
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(_List_Nil),
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yAxis(_List_Nil),
				$author$project$Chart$yTicks(_List_Nil),
				$author$project$Chart$yLabels(_List_Nil),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.eT;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.f9;
						},
						_List_Nil)
					]),
				$author$project$Examples$Frame$LabelWithLine$data),
				A3(
				$author$project$Chart$label,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveRight(14),
						$author$project$Chart$Attributes$moveUp(8),
						$author$project$Chart$Attributes$alignLeft
					]),
				_List_fromArray(
					[
						$elm$svg$Svg$text('The dot in question')
					]),
				{b: 5, a: 6}),
				$author$project$Chart$line(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$break,
						$author$project$Chart$Attributes$x1(5),
						$author$project$Chart$Attributes$y1(6),
						$author$project$Chart$Attributes$x2Svg(10),
						$author$project$Chart$Attributes$y2Svg(13),
						$author$project$Chart$Attributes$color($author$project$Chart$Attributes$purple)
					]))
			]));
};
var $author$project$Internal$Svg$Cross = 4;
var $author$project$Chart$Attributes$cross = function (config) {
	return _Utils_update(
		config,
		{
			aW: $elm$core$Maybe$Just(4)
		});
};
var $author$project$Examples$Frame$Legends$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$Frame$Legends$data = _List_fromArray(
	[
		A7($author$project$Examples$Frame$Legends$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$Frame$Legends$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$Frame$Legends$Datum, 3, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$Frame$Legends$Datum, 4, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$Frame$Legends$Datum, 5, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$Frame$Legends$Datum, 6, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Chart$Attributes$pinned = function (value) {
	return function (config) {
		return _Utils_update(
			config,
			{t: value});
	};
};
var $author$project$Chart$Attributes$row = function (config) {
	return _Utils_update(
		config,
		{eW: 0});
};
var $author$project$Examples$Frame$Legends$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$margin(
				{a4: 0, c2: 0, c5: 0, di: 30})
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$withGrid,
						$author$project$Chart$Attributes$pinned(
						function ($) {
							return $.Y;
						})
					])),
				$author$project$Chart$xLabels(_List_Nil),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$roundTop(0.3)
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$named,
						'B1',
						A2(
							$author$project$Chart$bar,
							function ($) {
								return $.gA;
							},
							_List_Nil)),
						A2(
						$author$project$Chart$named,
						'B2',
						A2(
							$author$project$Chart$bar,
							function ($) {
								return $.a;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$striped(_List_Nil)
								])))
					]),
				$author$project$Examples$Frame$Legends$data),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$named,
						'A1',
						A3(
							$author$project$Chart$interpolated,
							function ($) {
								return $.fJ;
							},
							_List_Nil,
							_List_fromArray(
								[
									$author$project$Chart$Attributes$cross,
									$author$project$Chart$Attributes$borderWidth(2),
									$author$project$Chart$Attributes$border('white')
								]))),
						A2(
						$author$project$Chart$named,
						'A2',
						A3(
							$author$project$Chart$interpolated,
							function ($) {
								return $.fS;
							},
							_List_Nil,
							_List_fromArray(
								[
									$author$project$Chart$Attributes$cross,
									$author$project$Chart$Attributes$borderWidth(2),
									$author$project$Chart$Attributes$border('white')
								])))
					]),
				$author$project$Examples$Frame$Legends$data),
				A4(
				$author$project$Chart$legendsAt,
				function ($) {
					return $.Y;
				},
				function ($) {
					return $.J;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$row,
						$author$project$Chart$Attributes$moveRight(10),
						$author$project$Chart$Attributes$moveUp(25),
						$author$project$Chart$Attributes$spacing(15)
					]),
				_List_fromArray(
					[
						$author$project$Chart$Attributes$width(20)
					]))
			]));
};
var $author$project$Chart$withPlane = function (func) {
	return $author$project$Chart$SubElements(
		F2(
			function (p, is) {
				return func(p);
			}));
};
var $author$project$Examples$Frame$Lines$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(_List_Nil),
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yAxis(_List_Nil),
				$author$project$Chart$yTicks(_List_Nil),
				$author$project$Chart$yLabels(_List_Nil),
				$author$project$Chart$withPlane(
				function (p) {
					return _List_fromArray(
						[
							$author$project$Chart$line(
							_List_fromArray(
								[
									$author$project$Chart$Attributes$x1(p.b.Y),
									$author$project$Chart$Attributes$y1(5),
									$author$project$Chart$Attributes$x2(p.b.J),
									$author$project$Chart$Attributes$dashed(
									_List_fromArray(
										[5, 5])),
									$author$project$Chart$Attributes$color($author$project$Chart$Attributes$red)
								])),
							$author$project$Chart$line(
							_List_fromArray(
								[
									$author$project$Chart$Attributes$x1(3),
									$author$project$Chart$Attributes$y1(p.a.Y),
									$author$project$Chart$Attributes$y2(p.a.J),
									$author$project$Chart$Attributes$dashed(
									_List_fromArray(
										[5, 5])),
									$author$project$Chart$Attributes$color($author$project$Chart$Attributes$blue)
								]))
						]);
				})
			]));
};
var $author$project$Examples$Frame$Margin$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$margin(
				{a4: 30, c2: 30, c5: 20, di: 20}),
				$author$project$Chart$Attributes$htmlAttrs(
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'border', '1px solid darkgray')
					]))
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$yAxis(_List_Nil),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_Nil,
						_List_Nil)
					]),
				_List_fromArray(
					[
						{b: 0, a: 0},
						{b: 10, a: 10}
					])),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid]))
			]));
};
var $author$project$Examples$Frame$NoArrow$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(
				_List_fromArray(
					[$author$project$Chart$Attributes$noArrow])),
				$author$project$Chart$xTicks(_List_Nil),
				$author$project$Chart$xLabels(_List_Nil)
			]));
};
var $author$project$Examples$Frame$Offset$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveRight(5),
						$author$project$Chart$Attributes$moveUp(20),
						$author$project$Chart$Attributes$alignLeft,
						$author$project$Chart$Attributes$withGrid
					]))
			]));
};
var $author$project$Internal$Svg$Ints = {$: 1};
var $author$project$Chart$Attributes$ints = function (config) {
	return _Utils_update(
		config,
		{ad: $author$project$Internal$Svg$Ints});
};
var $author$project$Examples$Frame$OnlyInts$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$range(
				_List_fromArray(
					[
						A2($author$project$Chart$Attributes$highest, 3, $author$project$Chart$Attributes$exactly),
						A2($author$project$Chart$Attributes$lowest, 0, $author$project$Chart$Attributes$exactly)
					]))
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(
				_List_fromArray(
					[$author$project$Chart$Attributes$ints])),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$ints]))
			]));
};
var $author$project$Examples$Frame$Padding$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 20, c2: 20, c5: 20, di: 20})
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$yAxis(_List_Nil),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_Nil,
						_List_Nil)
					]),
				_List_fromArray(
					[
						{b: 0, a: 0},
						{b: 10, a: 10}
					])),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$pinned(
						function ($) {
							return $.Y;
						}),
						$author$project$Chart$Attributes$withGrid
					])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$pinned(
						function ($) {
							return $.Y;
						}),
						$author$project$Chart$Attributes$withGrid
					]))
			]));
};
var $author$project$Examples$Frame$Position$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$yAxis(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$pinned(
						function ($) {
							return $.J;
						})
					])),
				$author$project$Chart$yTicks(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$pinned(
						function ($) {
							return $.J;
						}),
						$author$project$Chart$Attributes$flip
					])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$pinned(
						function ($) {
							return $.J;
						}),
						$author$project$Chart$Attributes$flip
					]))
			]));
};
var $author$project$Chart$rect = function (attrs) {
	return $author$project$Chart$SvgElement(
		function (p) {
			return A2($author$project$Chart$Svg$rect, p, attrs);
		});
};
var $author$project$Examples$Frame$Rect$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(_List_Nil),
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yAxis(_List_Nil),
				$author$project$Chart$yTicks(_List_Nil),
				$author$project$Chart$yLabels(_List_Nil),
				$author$project$Chart$withPlane(
				function (p) {
					return _List_fromArray(
						[
							$author$project$Chart$rect(
							_List_fromArray(
								[
									$author$project$Chart$Attributes$x1(3),
									$author$project$Chart$Attributes$y1(3),
									$author$project$Chart$Attributes$x2(7),
									$author$project$Chart$Attributes$y2(9),
									$author$project$Chart$Attributes$color('rgb(210, 210, 210)'),
									$author$project$Chart$Attributes$opacity(0.3)
								]))
						]);
				})
			]));
};
var $author$project$Examples$Frame$Times$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 0, c5: 25, di: 10}),
				$author$project$Chart$Attributes$range(
				_List_fromArray(
					[
						A2($author$project$Chart$Attributes$lowest, 1591974241000, $author$project$Chart$Attributes$exactly),
						A2($author$project$Chart$Attributes$highest, 1623510241000, $author$project$Chart$Attributes$exactly)
					]))
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$times($elm$time$Time$utc)
					])),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$times($elm$time$Time$utc)
					]))
			]));
};
var $author$project$Examples$Frame$Titles$Datum = F2(
	function (age, toys) {
		return {eT: age, f9: toys};
	});
var $author$project$Examples$Frame$Titles$data = _List_fromArray(
	[
		A2($author$project$Examples$Frame$Titles$Datum, 0.5, 4),
		A2($author$project$Examples$Frame$Titles$Datum, 0.8, 5),
		A2($author$project$Examples$Frame$Titles$Datum, 1.2, 6),
		A2($author$project$Examples$Frame$Titles$Datum, 1.4, 6),
		A2($author$project$Examples$Frame$Titles$Datum, 1.6, 4),
		A2($author$project$Examples$Frame$Titles$Datum, 3, 8),
		A2($author$project$Examples$Frame$Titles$Datum, 3, 9),
		A2($author$project$Examples$Frame$Titles$Datum, 3.2, 10),
		A2($author$project$Examples$Frame$Titles$Datum, 3.8, 7),
		A2($author$project$Examples$Frame$Titles$Datum, 6, 12),
		A2($author$project$Examples$Frame$Titles$Datum, 6.2, 8),
		A2($author$project$Examples$Frame$Titles$Datum, 6, 10),
		A2($author$project$Examples$Frame$Titles$Datum, 6, 9),
		A2($author$project$Examples$Frame$Titles$Datum, 9.1, 8),
		A2($author$project$Examples$Frame$Titles$Datum, 9.2, 13),
		A2($author$project$Examples$Frame$Titles$Datum, 9.8, 10),
		A2($author$project$Examples$Frame$Titles$Datum, 12, 7),
		A2($author$project$Examples$Frame$Titles$Datum, 12.5, 5),
		A2($author$project$Examples$Frame$Titles$Datum, 12.5, 2)
	]);
var $author$project$Examples$Frame$Titles$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 0, c5: 10, di: 25}),
				$author$project$Chart$Attributes$range(
				_List_fromArray(
					[
						A2($author$project$Chart$Attributes$lowest, 0, $author$project$Chart$Attributes$exactly)
					]))
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(
				_List_fromArray(
					[$author$project$Chart$Attributes$ints])),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$ints])),
				$author$project$Chart$yAxis(_List_Nil),
				$author$project$Chart$yTicks(
				_List_fromArray(
					[$author$project$Chart$Attributes$ints])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$ints])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.eT;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.f9;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0),
								$author$project$Chart$Attributes$borderWidth(1)
							]))
					]),
				$author$project$Examples$Frame$Titles$data),
				A4(
				$author$project$Chart$labelAt,
				function ($) {
					return $.Y;
				},
				$author$project$Chart$Attributes$middle,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveLeft(35),
						$author$project$Chart$Attributes$rotate(90)
					]),
				_List_fromArray(
					[
						$elm$svg$Svg$text('Fruits')
					])),
				A4(
				$author$project$Chart$labelAt,
				$author$project$Chart$Attributes$middle,
				function ($) {
					return $.Y;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveDown(30)
					]),
				_List_fromArray(
					[
						$elm$svg$Svg$text('Age')
					])),
				A4(
				$author$project$Chart$labelAt,
				$author$project$Chart$Attributes$middle,
				function ($) {
					return $.J;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$fontSize(14)
					]),
				_List_fromArray(
					[
						$elm$svg$Svg$text('How many fruits do children eat? (2021)')
					])),
				A4(
				$author$project$Chart$labelAt,
				$author$project$Chart$Attributes$middle,
				function ($) {
					return $.J;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveDown(15)
					]),
				_List_fromArray(
					[
						$elm$svg$Svg$text('Data from fruits.com')
					]))
			]));
};
var $author$project$Examples$Frontpage$BasicArea$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.a;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$opacity(0.2)
									]),
								_List_Nil),
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.gA;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$opacity(1),
										$author$project$Chart$Attributes$dotted(_List_Nil)
									]),
								_List_Nil)
							]))
					]),
				_List_fromArray(
					[
						{b: 1, a: 1, gA: 3},
						{b: 5, a: 2, gA: 1},
						{b: 10, a: 2, gA: 4}
					]))
			]));
};
var $author$project$Examples$Frontpage$BasicBar$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid, $author$project$Chart$Attributes$ints])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$x1(
						function ($) {
							return $.b;
						})
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$striped(_List_Nil)
							])),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_Nil)
					]),
				_List_fromArray(
					[
						{b: 1, a: 3, gA: 1},
						{b: 2, a: 2, gA: 3},
						{b: 3, a: 4, gA: 2}
					]))
			]));
};
var $author$project$Examples$Frontpage$BasicBubble$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 5, c2: 40, c5: 40, di: 30})
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$variation,
						F2(
							function (_v0, data) {
								return _List_fromArray(
									[
										$author$project$Chart$Attributes$size(data.iD)
									]);
							}),
						A2(
							$author$project$Chart$scatter,
							function ($) {
								return $.a;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$opacity(0.3),
									$author$project$Chart$Attributes$borderWidth(1)
								]))),
						A2(
						$author$project$Chart$variation,
						F2(
							function (_v1, data) {
								return _List_fromArray(
									[
										$author$project$Chart$Attributes$size(data.iD)
									]);
							}),
						A2(
							$author$project$Chart$scatter,
							function ($) {
								return $.gA;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$opacity(0.3),
									$author$project$Chart$Attributes$borderWidth(1)
								])))
					]),
				_List_fromArray(
					[
						{iD: 450, b: 1, a: 2, gA: 3},
						{iD: 350, b: 2, a: 3, gA: 5},
						{iD: 150, b: 3, a: 4, gA: 2},
						{iD: 550, b: 4, a: 1, gA: 3},
						{iD: 450, b: 5, a: 4, gA: 1}
					]))
			]));
};
var $author$project$Internal$Svg$Monotone = 1;
var $author$project$Chart$Attributes$monotone = function (config) {
	return _Utils_update(
		config,
		{
			aU: $elm$core$Maybe$Just(1)
		});
};
var $author$project$Internal$Svg$Square = 2;
var $author$project$Chart$Attributes$square = function (config) {
	return _Utils_update(
		config,
		{
			aW: $elm$core$Maybe$Just(2)
		});
};
var $author$project$Examples$Frontpage$BasicLine$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 5, c2: 10, c5: 10, di: 10})
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$monotone]),
						_List_fromArray(
							[$author$project$Chart$Attributes$circle])),
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$monotone]),
						_List_fromArray(
							[$author$project$Chart$Attributes$square]))
					]),
				_List_fromArray(
					[
						{b: 1, a: 2, gA: 3},
						{b: 5, a: 4, gA: 1},
						{b: 10, a: 2, gA: 4}
					]))
			]));
};
var $author$project$Examples$Frontpage$BasicNavigation$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xAxis(_List_Nil),
				$author$project$Chart$xTicks(_List_Nil),
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yAxis(_List_Nil),
				$author$project$Chart$yTicks(_List_Nil),
				$author$project$Chart$yLabels(_List_Nil)
			]));
};
var $author$project$Examples$Frontpage$BasicScatter$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 5, c2: 10, c5: 10, di: 0})
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$circle])),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$square]))
					]),
				_List_fromArray(
					[
						{b: 1, a: 2, gA: 3},
						{b: 2, a: 3, gA: 5},
						{b: 3, a: 4, gA: 2},
						{b: 4, a: 1, gA: 3},
						{b: 5, a: 4, gA: 1}
					]))
			]));
};
var $author$project$Examples$Frontpage$Concise$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Frontpage$Concise$blue1 = '#0f9ff0D0';
var $author$project$Examples$Frontpage$Concise$blue2 = '#0f9ff090';
var $author$project$Examples$Frontpage$Concise$Datum = F4(
	function (cats, dogs, people, country) {
		return {e0: cats, d6: country, e9: dogs, fM: people};
	});
var $author$project$Examples$Frontpage$Concise$data = _List_fromArray(
	[
		A4($author$project$Examples$Frontpage$Concise$Datum, 2.4, 1.2, 5.3, 'Norway'),
		A4($author$project$Examples$Frontpage$Concise$Datum, 2.2, 2.4, 5.8, 'Denmark'),
		A4($author$project$Examples$Frontpage$Concise$Datum, 3.6, 2.2, 10.2, 'Sweden'),
		A4($author$project$Examples$Frontpage$Concise$Datum, 3.4, 1.2, 5.5, 'Finland')
	]);
var $author$project$Chart$Item$getCenter = function (p) {
	return A2(
		$elm$core$Basics$composeR,
		$author$project$Internal$Item$getPosition(p),
		$author$project$Internal$Coordinates$center);
};
var $author$project$Examples$Frontpage$Concise$mint1 = '#54c8ddD0';
var $author$project$Examples$Frontpage$Concise$mint2 = '#54c8dd90';
var $author$project$Chart$productLabel = F2(
	function (edits, item) {
		return $author$project$Chart$withPlane(
			function (p) {
				var config = A2(
					$author$project$Internal$Helpers$apply,
					edits,
					_Utils_update(
						$author$project$Chart$defaultLabel,
						{F: $author$project$Chart$Item$getTop}));
				var text = function () {
					var _v1 = config.I;
					if (!_v1.$) {
						var formatting = _v1.a;
						return formatting(item);
					} else {
						return $elm$core$String$fromFloat(
							$author$project$Chart$Item$getY(item));
					}
				}();
				return _List_fromArray(
					[
						$author$project$Chart$svg(
						function (_v0) {
							return A4(
								$author$project$Internal$Svg$label,
								p,
								$author$project$Chart$toLabelFromItemLabel(config),
								_List_fromArray(
									[
										$elm$svg$Svg$text(text)
									]),
								A2(config.F, p, item));
						})
					]);
			});
	});
var $author$project$Examples$Frontpage$Concise$purple1 = '#653bf4B0';
var $author$project$Examples$Frontpage$Concise$purple2 = '#653bf470';
var $author$project$Examples$Frontpage$Concise$weakWhite = 'rgba(255, 255, 255, 0.7)';
var $author$project$Examples$Frontpage$Concise$white = 'white';
var $author$project$Examples$Frontpage$Concise$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(500),
				$author$project$Chart$Attributes$margin(
				{a4: 25, c2: 40, c5: 0, di: 10}),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$stacks)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$yLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$withGrid,
						$author$project$Chart$Attributes$format(
						function (y) {
							return $elm$core$String$fromFloat(y) + 'M';
						})
					])),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$roundTop(0.2),
						$author$project$Chart$Attributes$roundBottom(0.2),
						$author$project$Chart$Attributes$margin(0.2),
						$author$project$Chart$Attributes$spacing(0.05),
						$author$project$Chart$Attributes$noGrid
					]),
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A2(
								$author$project$Chart$named,
								'Cats',
								A2(
									$author$project$Chart$bar,
									function ($) {
										return $.e0;
									},
									_List_fromArray(
										[
											$author$project$Chart$Attributes$gradient(
											_List_fromArray(
												[$author$project$Examples$Frontpage$Concise$mint1, $author$project$Examples$Frontpage$Concise$mint2]))
										]))),
								A2(
								$author$project$Chart$named,
								'Dogs',
								A2(
									$author$project$Chart$bar,
									function ($) {
										return $.e9;
									},
									_List_fromArray(
										[
											$author$project$Chart$Attributes$gradient(
											_List_fromArray(
												[$author$project$Examples$Frontpage$Concise$blue1, $author$project$Examples$Frontpage$Concise$blue2]))
										])))
							])),
						A2(
						$author$project$Chart$named,
						'People',
						A2(
							$author$project$Chart$bar,
							function ($) {
								return $.fM;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$gradient(
									_List_fromArray(
										[$author$project$Examples$Frontpage$Concise$purple1, $author$project$Examples$Frontpage$Concise$purple2]))
								])))
					]),
				$author$project$Examples$Frontpage$Concise$data),
				A4(
				$author$project$Chart$labelAt,
				$author$project$Chart$Attributes$percent(30),
				function ($) {
					return $.J;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveDown(3),
						$author$project$Chart$Attributes$fontSize(15)
					]),
				_List_fromArray(
					[
						$elm$svg$Svg$text('Populations in Scandinavia')
					])),
				A4(
				$author$project$Chart$labelAt,
				$author$project$Chart$Attributes$percent(30),
				function ($) {
					return $.J;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveDown(20),
						$author$project$Chart$Attributes$fontSize(12)
					]),
				_List_fromArray(
					[
						$elm$svg$Svg$text('Note: Based on made up data.')
					])),
				A2(
				$author$project$Chart$binLabels,
				function ($) {
					return $.d6;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveDown(18)
					])),
				$author$project$Chart$barLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveDown(18),
						$author$project$Chart$Attributes$color($author$project$Examples$Frontpage$Concise$weakWhite)
					])),
				A4(
				$author$project$Chart$legendsAt,
				function ($) {
					return $.J;
				},
				function ($) {
					return $.J;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$alignRight,
						$author$project$Chart$Attributes$column,
						$author$project$Chart$Attributes$spacing(7)
					]),
				_List_Nil),
				function () {
				var toBrightLabel = $author$project$Chart$productLabel(
					_List_fromArray(
						[
							$author$project$Chart$Attributes$moveDown(18),
							$author$project$Chart$Attributes$color($author$project$Examples$Frontpage$Concise$white)
						]));
				return A2(
					$author$project$Chart$each,
					model.c$,
					F2(
						function (p, stack) {
							return A2(
								$elm$core$List$map,
								toBrightLabel,
								$author$project$Chart$Item$getMembers(stack));
						}));
			}(),
				$author$project$Chart$eachBin(
				F2(
					function (p, bin) {
						var yPos = A2($author$project$Chart$Item$getTop, p, bin).a;
						var xMid = A2($author$project$Chart$Item$getCenter, p, bin).b;
						var datum = $author$project$Chart$Item$getOneData(bin);
						var bar = $author$project$Chart$Item$getMember(bin);
						return (datum.d6 === 'Finland') ? _List_fromArray(
							[
								$author$project$Chart$line(
								_List_fromArray(
									[
										$author$project$Chart$Attributes$x1(
										$author$project$Chart$Item$getX1(bar)),
										$author$project$Chart$Attributes$x2(
										$author$project$Chart$Item$getX2(bar)),
										$author$project$Chart$Attributes$y1(yPos),
										$author$project$Chart$Attributes$moveUp(15),
										$author$project$Chart$Attributes$tickLength(5)
									])),
								A3(
								$author$project$Chart$label,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$moveUp(22),
										$author$project$Chart$Attributes$fontSize(10)
									]),
								_List_fromArray(
									[
										$elm$svg$Svg$text('Most pets per person')
									]),
								{b: xMid, a: yPos})
							]) : _List_Nil;
					}))
			]));
};
var $author$project$Examples$Frontpage$Familiar$Datum = F3(
	function (x, y, z) {
		return {b: x, a: y, gA: z};
	});
var $author$project$Examples$Frontpage$Familiar$data = function () {
	var toDatum = F3(
		function (e, t, y) {
			return A3($author$project$Examples$Frontpage$Familiar$Datum, t, y, y + e);
		});
	return _List_fromArray(
		[
			A3(toDatum, 5, 1622505600000, 3.2),
			A3(toDatum, 6, 1625097600000, 5.6),
			A3(toDatum, 5, 1627776000000, 4.2),
			A3(toDatum, 7, 1630454400000, 7.6),
			A3(toDatum, 6, 1633046400000, 3.2),
			A3(toDatum, 8, 1635724800000, 12.8),
			A3(toDatum, 7, 1638316800000, 6.3),
			A3(toDatum, 9, 1640995200000, 16.3),
			A3(toDatum, 12, 1643673600000, 7.8),
			A3(toDatum, 13, 1646092800000, 28.5)
		]);
}();
var $author$project$Examples$Frontpage$Familiar$viewChart = A2(
	$author$project$Chart$chart,
	_List_fromArray(
		[
			$author$project$Chart$Attributes$height(350),
			$author$project$Chart$Attributes$width(570),
			$author$project$Chart$Attributes$margin(
			{a4: 30, c2: 30, c5: 10, di: 10})
		]),
	_List_fromArray(
		[
			$author$project$Chart$xLabels(
			_List_fromArray(
				[
					$author$project$Chart$Attributes$times($elm$time$Time$utc),
					$author$project$Chart$Attributes$amount(12)
				])),
			$author$project$Chart$yLabels(
			_List_fromArray(
				[
					$author$project$Chart$Attributes$withGrid,
					$author$project$Chart$Attributes$amount(6)
				])),
			$author$project$Chart$xAxis(_List_Nil),
			$author$project$Chart$yAxis(_List_Nil),
			A3(
			$author$project$Chart$series,
			function ($) {
				return $.b;
			},
			_List_fromArray(
				[
					A3(
					$author$project$Chart$interpolated,
					function ($) {
						return $.a;
					},
					_List_fromArray(
						[
							$author$project$Chart$Attributes$width(2)
						]),
					_List_Nil),
					A3(
					$author$project$Chart$interpolated,
					function ($) {
						return $.gA;
					},
					_List_fromArray(
						[
							$author$project$Chart$Attributes$width(2)
						]),
					_List_Nil)
				]),
			$author$project$Examples$Frontpage$Familiar$data)
		]));
var $author$project$Examples$Frontpage$Familiar$view = function (model) {
	return $author$project$Examples$Frontpage$Familiar$viewChart;
};
var $author$project$Examples$Interactivity$Background$OnHover = $elm$core$Basics$identity;
var $author$project$Chart$Attributes$background = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{gT: v});
	};
};
var $author$project$Examples$Interactivity$Background$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$Background$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$Background$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$Background$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$Background$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$Background$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$Interactivity$Background$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$bars)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.3),
								$author$project$Chart$Attributes$borderWidth(1)
							])),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.3),
								$author$project$Chart$Attributes$borderWidth(1),
								$author$project$Chart$Attributes$striped(_List_Nil)
							]))
					]),
				$author$project$Examples$Interactivity$Background$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4(
								$author$project$Chart$tooltip,
								item,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$background('#fcf9e9')
									]),
								_List_Nil,
								_List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$BasicArea$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$BasicArea$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$BasicArea$data = _List_fromArray(
	[
		A7($author$project$Examples$Interactivity$BasicArea$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$Interactivity$BasicArea$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$Interactivity$BasicArea$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$Interactivity$BasicArea$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$Interactivity$BasicArea$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$Interactivity$BasicArea$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$Interactivity$BasicArea$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$Interactivity$BasicArea$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$Interactivity$BasicArea$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$Interactivity$BasicArea$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$Interactivity$BasicArea$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$stacks)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.a;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$monotone,
										$author$project$Chart$Attributes$opacity(0.2)
									]),
								_List_fromArray(
									[
										$author$project$Chart$Attributes$circle,
										$author$project$Chart$Attributes$color('white'),
										$author$project$Chart$Attributes$borderWidth(1)
									])),
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.gA;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$monotone,
										$author$project$Chart$Attributes$opacity(0),
										$author$project$Chart$Attributes$color($author$project$Chart$Attributes$purple)
									]),
								_List_fromArray(
									[
										$author$project$Chart$Attributes$circle,
										$author$project$Chart$Attributes$color('white'),
										$author$project$Chart$Attributes$borderWidth(1)
									]))
							]))
					]),
				$author$project$Examples$Interactivity$BasicArea$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$BasicBar$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$BasicBar$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$BasicBar$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$BasicBar$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$BasicBar$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$BasicBar$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$BasicBar$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$Interactivity$BasicBar$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$bars)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.gA;
								},
								_List_Nil),
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.a;
								},
								_List_Nil)
							])),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.jr;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$dotted(_List_Nil)
							]))
					]),
				$author$project$Examples$Interactivity$BasicBar$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$BasicBin$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$BasicBin$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$BasicBin$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$BasicBin$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$BasicBin$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$BasicBin$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$BasicBin$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$Interactivity$BasicBin$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$bins)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_Nil),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_Nil)
					]),
				$author$project$Examples$Interactivity$BasicBin$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$BasicLine$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$BasicLine$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$BasicLine$data = _List_fromArray(
	[
		A7($author$project$Examples$Interactivity$BasicLine$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$Interactivity$BasicLine$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$Interactivity$BasicLine$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$Interactivity$BasicLine$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$Interactivity$BasicLine$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$Interactivity$BasicLine$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$Interactivity$BasicLine$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$Interactivity$BasicLine$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$Interactivity$BasicLine$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$Interactivity$BasicLine$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Internal$Many$fromPoint = function (point) {
	return {a1: point.b, dm: point.b, jx: point.a, eP: point.a};
};
var $author$project$Internal$Item$isDot = function (_v0) {
	var meta = _v0.a;
	var item = _v0.b;
	var _v1 = meta.ij;
	if (!_v1.$) {
		var dot = _v1.a;
		return $elm$core$Maybe$Just(
			A2(
				$author$project$Internal$Item$Rendered,
				{d: meta.d, hl: meta.hl, hJ: meta.hJ, hW: meta.hW, dO: meta.dO, ij: dot, i7: $author$project$Internal$Item$Dot, jj: meta.jj, a1: meta.a1, dm: meta.dm, a: meta.a},
				item));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Internal$Many$dots = function () {
	var centerPosition = F2(
		function (plane, item) {
			return $author$project$Internal$Many$fromPoint(
				$author$project$Internal$Coordinates$center(
					A2($author$project$Internal$Item$getPosition, plane, item)));
		});
	return A2(
		$author$project$Internal$Many$Remodel,
		centerPosition,
		$elm$core$List$filterMap($author$project$Internal$Item$isDot));
}();
var $author$project$Chart$Item$dots = $author$project$Internal$Many$dots;
var $author$project$Examples$Interactivity$BasicLine$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$dots)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_Nil,
						_List_fromArray(
							[
								$author$project$Chart$Attributes$circle,
								$author$project$Chart$Attributes$size(3)
							])),
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.gA;
						},
						_List_Nil,
						_List_fromArray(
							[
								$author$project$Chart$Attributes$circle,
								$author$project$Chart$Attributes$size(3)
							]))
					]),
				$author$project$Examples$Interactivity$BasicLine$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$BasicStack$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$BasicStack$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$BasicStack$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$BasicStack$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$BasicStack$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$BasicStack$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$BasicStack$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$Interactivity$BasicStack$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$stacks)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.gA;
								},
								_List_Nil),
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.a;
								},
								_List_Nil)
							])),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.jr;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$purple),
								$author$project$Chart$Attributes$striped(_List_Nil)
							]))
					]),
				$author$project$Examples$Interactivity$BasicStack$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$Border$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$Border$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$Border$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$Border$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$Border$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$Border$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$Border$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$Interactivity$Border$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$bars)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.3),
								$author$project$Chart$Attributes$borderWidth(1)
							])),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.3),
								$author$project$Chart$Attributes$borderWidth(1)
							]))
					]),
				$author$project$Examples$Interactivity$Border$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4(
								$author$project$Chart$tooltip,
								item,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$border($author$project$Chart$Attributes$red)
									]),
								_List_Nil,
								_List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$ChangeContent$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$ChangeContent$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$ChangeContent$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$ChangeContent$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$ChangeContent$Datum, 1.0, 0.3, 2.5, 3.1, 5.1, 4.9, 5.3, 7.0),
		A8($author$project$Examples$Interactivity$ChangeContent$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$ChangeContent$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$ChangeContent$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Internal$Item$getColor = function (_v0) {
	var meta = _v0.a;
	return meta.d;
};
var $author$project$Chart$Item$getColor = $author$project$Internal$Item$getColor;
var $author$project$Internal$Item$getX = function (_v0) {
	var meta = _v0.a;
	return meta.a1;
};
var $author$project$Chart$Item$getX = $author$project$Internal$Item$getX;
var $author$project$Examples$Interactivity$ChangeContent$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$dots)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.5),
								$author$project$Chart$Attributes$borderWidth(1)
							])),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.5),
								$author$project$Chart$Attributes$borderWidth(1)
							])),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.jt;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.5),
								$author$project$Chart$Attributes$borderWidth(1)
							])),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.fJ;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.5),
								$author$project$Chart$Attributes$borderWidth(1)
							]))
					]),
				$author$project$Examples$Interactivity$ChangeContent$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, dot) {
						var y = $author$project$Chart$Item$getY(dot);
						var x = $author$project$Chart$Item$getX(dot);
						var color = $author$project$Chart$Item$getColor(dot);
						return _List_fromArray(
							[
								A4(
								$author$project$Chart$tooltip,
								dot,
								_List_Nil,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'color', color)
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('x: '),
										$elm$html$Html$text(
										$elm$core$String$fromFloat(x)),
										$elm$html$Html$text(' y: '),
										$elm$html$Html$text(
										$elm$core$String$fromFloat(y))
									]))
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$ChangeDot$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$ChangeDot$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$ChangeDot$data = _List_fromArray(
	[
		A7($author$project$Examples$Interactivity$ChangeDot$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$Interactivity$ChangeDot$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$Interactivity$ChangeDot$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$Interactivity$ChangeDot$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$Interactivity$ChangeDot$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$Interactivity$ChangeDot$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$Interactivity$ChangeDot$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$Interactivity$ChangeDot$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$Interactivity$ChangeDot$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$Interactivity$ChangeDot$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$Interactivity$ChangeDot$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$dots)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$amongst,
						model.c$,
						function (_v0) {
							return _List_fromArray(
								[
									$author$project$Chart$Attributes$opacity(0),
									$author$project$Chart$Attributes$borderWidth(2)
								]);
						},
						A2(
							$author$project$Chart$scatter,
							function ($) {
								return $.a;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$circle,
									$author$project$Chart$Attributes$size(8)
								]))),
						A3(
						$author$project$Chart$amongst,
						model.c$,
						function (_v1) {
							return _List_fromArray(
								[
									$author$project$Chart$Attributes$opacity(0),
									$author$project$Chart$Attributes$borderWidth(2)
								]);
						},
						A2(
							$author$project$Chart$scatter,
							function ($) {
								return $.gA;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$circle,
									$author$project$Chart$Attributes$size(8)
								])))
					]),
				$author$project$Examples$Interactivity$ChangeDot$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$ChangeName$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$ChangeName$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$ChangeName$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$ChangeName$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$ChangeName$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$ChangeName$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$ChangeName$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$Interactivity$ChangeName$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$bins)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$named,
						'Cats',
						A2(
							$author$project$Chart$bar,
							function ($) {
								return $.gA;
							},
							_List_Nil)),
						A2(
						$author$project$Chart$named,
						'Fish',
						A2(
							$author$project$Chart$bar,
							function ($) {
								return $.a;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$striped(_List_Nil)
								]))),
						A2(
						$author$project$Chart$named,
						'Ants',
						A2(
							$author$project$Chart$bar,
							function ($) {
								return $.jr;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$dotted(_List_Nil)
								])))
					]),
				$author$project$Examples$Interactivity$ChangeName$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$ChangeUnit$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$ChangeUnit$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$ChangeUnit$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$ChangeUnit$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$ChangeUnit$Datum, 1.0, 0.3, 2.5, 3.1, 5.1, 4.9, 5.3, 7.0),
		A8($author$project$Examples$Interactivity$ChangeUnit$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$ChangeUnit$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$ChangeUnit$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Internal$Property$tooltipText = F2(
	function (newTooltipText, property) {
		var update = function (config) {
			return _Utils_update(
				config,
				{
					jj: function (datum) {
						return newTooltipText(
							config.d$(datum));
					}
				});
		};
		if (!property.$) {
			var config = property.a;
			return $author$project$Internal$Property$NotStacked(
				update(config));
		} else {
			var configs = property.a;
			return $author$project$Internal$Property$Stacked(
				A2($elm$core$List$map, update, configs));
		}
	});
var $author$project$Chart$format = function (func) {
	return $author$project$Internal$Property$tooltipText(
		function (v) {
			if (!v.$) {
				var v_ = v.a;
				return func(v_);
			} else {
				return 'N/A';
			}
		});
};
var $author$project$Internal$Svg$LeftOrRight = 4;
var $author$project$Chart$Attributes$onLeftOrRight = function (config) {
	return _Utils_update(
		config,
		{
			hp: $elm$core$Maybe$Just(4)
		});
};
var $author$project$Examples$Interactivity$ChangeUnit$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$stacks)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A2(
								$author$project$Chart$format,
								function (v) {
									return $elm$core$String$fromFloat(v) + ' m/s';
								},
								A2(
									$author$project$Chart$bar,
									function ($) {
										return $.a;
									},
									_List_fromArray(
										[
											$author$project$Chart$Attributes$opacity(0.5),
											$author$project$Chart$Attributes$borderWidth(1)
										]))),
								A2(
								$author$project$Chart$format,
								function (v) {
									return $elm$core$String$fromFloat(v) + ' m/s';
								},
								A2(
									$author$project$Chart$bar,
									function ($) {
										return $.gA;
									},
									_List_fromArray(
										[
											$author$project$Chart$Attributes$opacity(0.5),
											$author$project$Chart$Attributes$borderWidth(1)
										])))
							]))
					]),
				$author$project$Examples$Interactivity$ChangeUnit$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, dot) {
						return _List_fromArray(
							[
								A4(
								$author$project$Chart$tooltip,
								dot,
								_List_fromArray(
									[$author$project$Chart$Attributes$onLeftOrRight]),
								_List_Nil,
								_List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$Coordinates$OnHover = $elm$core$Basics$identity;
var $author$project$Chart$none = $author$project$Chart$HtmlElement(
	F2(
		function (_v0, _v1) {
			return $elm$html$Html$text('');
		}));
var $author$project$Examples$Interactivity$Coordinates$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				A2($elm$core$Basics$composeL, $elm$core$Basics$identity, $elm$core$Maybe$Just),
				$author$project$Chart$Events$getCoords),
				$author$project$Chart$Events$onMouseLeave($elm$core$Maybe$Nothing),
				$author$project$Chart$Attributes$domain(
				_List_fromArray(
					[
						A2($author$project$Chart$Attributes$lowest, 0, $author$project$Chart$Attributes$exactly),
						A2($author$project$Chart$Attributes$highest, 10, $author$project$Chart$Attributes$exactly)
					])),
				$author$project$Chart$Attributes$range(
				_List_fromArray(
					[
						A2($author$project$Chart$Attributes$lowest, 0, $author$project$Chart$Attributes$exactly),
						A2($author$project$Chart$Attributes$highest, 10, $author$project$Chart$Attributes$exactly)
					]))
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				function () {
				var _v0 = model.c$;
				if (!_v0.$) {
					var coords = _v0.a;
					return A3(
						$author$project$Chart$series,
						function ($) {
							return $.b;
						},
						_List_fromArray(
							[
								A2(
								$author$project$Chart$scatter,
								function ($) {
									return $.a;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$cross,
										$author$project$Chart$Attributes$borderWidth(2),
										$author$project$Chart$Attributes$border('white'),
										$author$project$Chart$Attributes$size(12)
									]))
							]),
						_List_fromArray(
							[coords]));
				} else {
					return $author$project$Chart$none;
				}
			}(),
				function () {
				var _v1 = model.c$;
				if (!_v1.$) {
					var coords = _v1.a;
					return A4(
						$author$project$Chart$labelAt,
						$author$project$Chart$Attributes$middle,
						function ($) {
							return $.J;
						},
						_List_Nil,
						_List_fromArray(
							[
								$elm$svg$Svg$text(
								'x: ' + $elm$core$String$fromFloat(coords.b)),
								$elm$svg$Svg$text(
								' y: ' + $elm$core$String$fromFloat(coords.a))
							]));
				} else {
					return $author$project$Chart$none;
				}
			}()
			]));
};
var $author$project$Examples$Interactivity$Direction$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$Direction$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$Direction$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$Direction$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$Direction$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$Direction$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$Direction$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$Interactivity$Direction$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$dots)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_Nil),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.gA;
						},
						_List_Nil)
					]),
				$author$project$Examples$Interactivity$Direction$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4(
								$author$project$Chart$tooltip,
								item,
								_List_fromArray(
									[$author$project$Chart$Attributes$onTopOrBottom]),
								_List_Nil,
								_List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$DoubleSearch$OnHover = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Examples$Interactivity$DoubleSearch$Datum = F9(
	function (x, x1, x2, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, dm: x2, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$DoubleSearch$data = _List_fromArray(
	[
		A9($author$project$Examples$Interactivity$DoubleSearch$Datum, 0.0, 0.0, 1.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A9($author$project$Examples$Interactivity$DoubleSearch$Datum, 2.0, 1.0, 2.0, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A9($author$project$Examples$Interactivity$DoubleSearch$Datum, 3.0, 2.0, 3.0, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A9($author$project$Examples$Interactivity$DoubleSearch$Datum, 4.0, 3.0, 4.0, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Internal$Events$map2 = F3(
	function (f, _v0, _v1) {
		var a = _v0;
		var b = _v1;
		return F3(
			function (ps, s, p) {
				return A2(
					f,
					A3(a, ps, s, p),
					A3(b, ps, s, p));
			});
	});
var $author$project$Chart$Events$map2 = $author$project$Internal$Events$map2;
var $author$project$Examples$Interactivity$DoubleSearch$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$on,
				'mousemove',
				A3(
					$author$project$Chart$Events$map2,
					$author$project$Examples$Interactivity$DoubleSearch$OnHover,
					$author$project$Chart$Events$getNearest($author$project$Chart$Item$dots),
					$author$project$Chart$Events$getNearest($author$project$Chart$Item$bars))),
				$author$project$Chart$Events$onMouseLeave(
				A2($author$project$Examples$Interactivity$DoubleSearch$OnHover, _List_Nil, _List_Nil))
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.fJ;
								},
								_List_Nil,
								_List_fromArray(
									[$author$project$Chart$Attributes$circle])),
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.fS;
								},
								_List_Nil,
								_List_fromArray(
									[$author$project$Chart$Attributes$circle]))
							]))
					]),
				$author$project$Examples$Interactivity$DoubleSearch$data),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$x1(
						function ($) {
							return $.a1;
						}),
						$author$project$Chart$Attributes$x2(
						function ($) {
							return $.dm;
						})
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$purple),
								$author$project$Chart$Attributes$striped(_List_Nil)
							]))
					]),
				$author$project$Examples$Interactivity$DoubleSearch$data),
				A2(
				$author$project$Chart$each,
				model.dH,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					})),
				A2(
				$author$project$Chart$each,
				model.c0,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A3(
								$author$project$Chart$label,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$color($author$project$Chart$Attributes$purple),
										$author$project$Chart$Attributes$moveUp(8),
										$author$project$Chart$Attributes$fontSize(14)
									]),
								_List_fromArray(
									[
										$elm$svg$Svg$text(
										$elm$core$String$fromFloat(
											$author$project$Chart$Item$getY(item)))
									]),
								A2($author$project$Chart$Item$getTop, p, item))
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$FilterSearch$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$FilterSearch$Datum = F9(
	function (x, x1, x2, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, dm: x2, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$FilterSearch$data = _List_fromArray(
	[
		A9($author$project$Examples$Interactivity$FilterSearch$Datum, 0.0, 0.0, 1.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A9($author$project$Examples$Interactivity$FilterSearch$Datum, 2.0, 1.0, 2.0, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A9($author$project$Examples$Interactivity$FilterSearch$Datum, 3.0, 2.0, 3.0, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A9($author$project$Examples$Interactivity$FilterSearch$Datum, 4.0, 3.0, 4.0, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$Interactivity$FilterSearch$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 10, c5: 10, di: 0}),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest(
					A2($author$project$Chart$Item$andThen, $author$project$Chart$Item$stacks, $author$project$Chart$Item$dots))),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$withGrid,
						$author$project$Chart$Attributes$pinned(
						function ($) {
							return $.Y;
						})
					])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.fJ;
								},
								_List_Nil,
								_List_fromArray(
									[$author$project$Chart$Attributes$circle])),
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.fS;
								},
								_List_Nil,
								_List_fromArray(
									[$author$project$Chart$Attributes$circle]))
							]))
					]),
				$author$project$Examples$Interactivity$FilterSearch$data),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$x1(
						function ($) {
							return $.a1;
						}),
						$author$project$Chart$Attributes$x2(
						function ($) {
							return $.dm;
						})
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$purple)
							]))
					]),
				$author$project$Examples$Interactivity$FilterSearch$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$Focal$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$Focal$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$Focal$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$Focal$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$Focal$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$Focal$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$Focal$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Chart$Attributes$top = function (config) {
	return _Utils_update(
		config,
		{
			hy: $elm$core$Maybe$Just(
				function (pos) {
					return _Utils_update(
						pos,
						{jx: pos.eP});
				})
		});
};
var $author$project$Examples$Interactivity$Focal$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$bars)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.6),
								$author$project$Chart$Attributes$borderWidth(1),
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$green)
							])),
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.6),
								$author$project$Chart$Attributes$borderWidth(1),
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$blue)
							]))
					]),
				$author$project$Examples$Interactivity$Focal$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4(
								$author$project$Chart$tooltip,
								item,
								_List_fromArray(
									[$author$project$Chart$Attributes$onLeftOrRight, $author$project$Chart$Attributes$top]),
								_List_Nil,
								_List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$Multiple$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$Multiple$Datum = F9(
	function (x, x1, x2, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, dm: x2, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$Multiple$data = _List_fromArray(
	[
		A9($author$project$Examples$Interactivity$Multiple$Datum, 0.0, 0.0, 1.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A9($author$project$Examples$Interactivity$Multiple$Datum, 2.0, 1.0, 2.0, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A9($author$project$Examples$Interactivity$Multiple$Datum, 3.0, 2.0, 3.0, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A9($author$project$Examples$Interactivity$Multiple$Datum, 4.0, 3.0, 4.0, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$Interactivity$Multiple$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$any)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$x1(
						function ($) {
							return $.a1;
						}),
						$author$project$Chart$Attributes$x2(
						function ($) {
							return $.dm;
						})
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.3),
								$author$project$Chart$Attributes$borderWidth(1)
							]))
					]),
				$author$project$Examples$Interactivity$Multiple$data),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.fJ;
						},
						_List_Nil,
						_List_Nil),
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.fS;
						},
						_List_Nil,
						_List_Nil)
					]),
				$author$project$Examples$Interactivity$Multiple$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$NoArrow$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$NoArrow$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$NoArrow$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$NoArrow$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$NoArrow$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$NoArrow$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$NoArrow$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$Interactivity$NoArrow$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$dots)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color('white'),
								$author$project$Chart$Attributes$size(20),
								$author$project$Chart$Attributes$borderWidth(2)
							])),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color('white'),
								$author$project$Chart$Attributes$size(20),
								$author$project$Chart$Attributes$borderWidth(2)
							]))
					]),
				$author$project$Examples$Interactivity$NoArrow$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4(
								$author$project$Chart$tooltip,
								item,
								_List_fromArray(
									[$author$project$Chart$Attributes$noArrow]),
								_List_Nil,
								_List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$Offset$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$Offset$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$Offset$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$Offset$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$Offset$Datum, 2.0, 0.4, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$Offset$Datum, 3.0, 0.6, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$Offset$Datum, 4.0, 0.2, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$Interactivity$Offset$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$dots)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$size(60),
								$author$project$Chart$Attributes$opacity(0.3),
								$author$project$Chart$Attributes$borderWidth(1)
							])),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$size(50),
								$author$project$Chart$Attributes$opacity(0.3),
								$author$project$Chart$Attributes$borderWidth(1)
							]))
					]),
				$author$project$Examples$Interactivity$Offset$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4(
								$author$project$Chart$tooltip,
								item,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$offset(0)
									]),
								_List_Nil,
								_List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$Interactivity$TrickyTooltip$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$Interactivity$TrickyTooltip$Datum = F8(
	function (x, x1, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a1: x1, a: y, gA: z};
	});
var $author$project$Examples$Interactivity$TrickyTooltip$data = _List_fromArray(
	[
		A8($author$project$Examples$Interactivity$TrickyTooltip$Datum, 0.0, 0.0, 1.2, 4.0, 4.6, 6.9, 7.3, 8.0),
		A8($author$project$Examples$Interactivity$TrickyTooltip$Datum, 2.0, 1.0, 2.2, 4.2, 5.3, 5.7, 6.2, 7.8),
		A8($author$project$Examples$Interactivity$TrickyTooltip$Datum, 3.0, 2.0, 1.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A8($author$project$Examples$Interactivity$TrickyTooltip$Datum, 4.0, 3.0, 1.2, 3.0, 4.1, 5.5, 7.9, 8.1)
	]);
var $author$project$Examples$Interactivity$TrickyTooltip$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 10, c5: 10, di: 0}),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest(
					A2($author$project$Chart$Item$andThen, $author$project$Chart$Item$bins, $author$project$Chart$Item$bars))),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$yLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$withGrid,
						$author$project$Chart$Attributes$pinned(
						function ($) {
							return $.Y;
						})
					])),
				$author$project$Chart$xLabels(_List_Nil),
				A3(
				$author$project$Chart$bars,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.jt;
						},
						_List_Nil),
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.fJ;
								},
								_List_Nil),
								A2(
								$author$project$Chart$bar,
								function ($) {
									return $.fS;
								},
								_List_Nil)
							]))
					]),
				$author$project$Examples$Interactivity$TrickyTooltip$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, bin) {
						var toTooltip = function (stack) {
							return A4(
								$author$project$Chart$tooltip,
								stack,
								_List_fromArray(
									[$author$project$Chart$Attributes$onLeftOrRight]),
								_List_Nil,
								_List_Nil);
						};
						var stacks = A2(
							$author$project$Chart$Item$apply,
							$author$project$Chart$Item$stacks,
							$author$project$Chart$Item$getMembers(bin));
						return A2($elm$core$List$map, toTooltip, stacks);
					}))
			]));
};
var $author$project$Examples$Interactivity$Zoom$OnDown = function (a) {
	return {$: 0, a: a};
};
var $author$project$Examples$Interactivity$Zoom$OnMove = function (a) {
	return {$: 1, a: a};
};
var $author$project$Examples$Interactivity$Zoom$OnReset = {$: 3};
var $author$project$Examples$Interactivity$Zoom$OnUp = function (a) {
	return {$: 2, a: a};
};
var $author$project$Data$Iris$Setosa = 0;
var $author$project$Data$Iris$Versicolor = 1;
var $author$project$Data$Iris$Virginica = 2;
var $elm$html$Html$button = _VirtualDom_node('button');
var $author$project$Data$Iris$Datum = F5(
	function (sepalLength, sepalWidth, petalLength, petalWidth, species) {
		return {dP: petalLength, ii: petalWidth, dV: sepalLength, dW: sepalWidth, eJ: species};
	});
var $author$project$Data$Iris$data = _List_fromArray(
	[
		A5($author$project$Data$Iris$Datum, 5.1, 3.5, 1.4, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 4.9, 3.0, 1.4, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 4.7, 3.2, 1.3, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 4.6, 3.1, 1.5, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.0, 3.6, 1.4, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.4, 3.9, 1.7, 0.4, 0),
		A5($author$project$Data$Iris$Datum, 4.6, 3.4, 1.4, 0.3, 0),
		A5($author$project$Data$Iris$Datum, 5.0, 3.4, 1.5, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 4.4, 2.9, 1.4, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 4.9, 3.1, 1.5, 0.1, 0),
		A5($author$project$Data$Iris$Datum, 5.4, 3.7, 1.5, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 4.8, 3.4, 1.6, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 4.8, 3.0, 1.4, 0.1, 0),
		A5($author$project$Data$Iris$Datum, 4.3, 3.0, 1.1, 0.1, 0),
		A5($author$project$Data$Iris$Datum, 5.8, 4.0, 1.2, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.7, 4.4, 1.5, 0.4, 0),
		A5($author$project$Data$Iris$Datum, 5.4, 3.9, 1.3, 0.4, 0),
		A5($author$project$Data$Iris$Datum, 5.1, 3.5, 1.4, 0.3, 0),
		A5($author$project$Data$Iris$Datum, 5.7, 3.8, 1.7, 0.3, 0),
		A5($author$project$Data$Iris$Datum, 5.1, 3.8, 1.5, 0.3, 0),
		A5($author$project$Data$Iris$Datum, 5.4, 3.4, 1.7, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.1, 3.7, 1.5, 0.4, 0),
		A5($author$project$Data$Iris$Datum, 4.6, 3.6, 1.0, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.1, 3.3, 1.7, 0.5, 0),
		A5($author$project$Data$Iris$Datum, 4.8, 3.4, 1.9, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.0, 3.0, 1.6, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.0, 3.4, 1.6, 0.4, 0),
		A5($author$project$Data$Iris$Datum, 5.2, 3.5, 1.5, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.2, 3.4, 1.4, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 4.7, 3.2, 1.6, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 4.8, 3.1, 1.6, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.4, 3.4, 1.5, 0.4, 0),
		A5($author$project$Data$Iris$Datum, 5.2, 4.1, 1.5, 0.1, 0),
		A5($author$project$Data$Iris$Datum, 5.5, 4.2, 1.4, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 4.9, 3.1, 1.5, 0.1, 0),
		A5($author$project$Data$Iris$Datum, 5.0, 3.2, 1.2, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.5, 3.5, 1.3, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 4.9, 3.1, 1.5, 0.1, 0),
		A5($author$project$Data$Iris$Datum, 4.4, 3.0, 1.3, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.1, 3.4, 1.5, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.0, 3.5, 1.3, 0.3, 0),
		A5($author$project$Data$Iris$Datum, 4.5, 2.3, 1.3, 0.3, 0),
		A5($author$project$Data$Iris$Datum, 4.4, 3.2, 1.3, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.0, 3.5, 1.6, 0.6, 0),
		A5($author$project$Data$Iris$Datum, 5.1, 3.8, 1.9, 0.4, 0),
		A5($author$project$Data$Iris$Datum, 4.8, 3.0, 1.4, 0.3, 0),
		A5($author$project$Data$Iris$Datum, 5.1, 3.8, 1.6, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 4.6, 3.2, 1.4, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.3, 3.7, 1.5, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 5.0, 3.3, 1.4, 0.2, 0),
		A5($author$project$Data$Iris$Datum, 7.0, 3.2, 4.7, 1.4, 1),
		A5($author$project$Data$Iris$Datum, 6.4, 3.2, 4.5, 1.5, 1),
		A5($author$project$Data$Iris$Datum, 6.9, 3.1, 4.9, 1.5, 1),
		A5($author$project$Data$Iris$Datum, 5.5, 2.3, 4.0, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 6.5, 2.8, 4.6, 1.5, 1),
		A5($author$project$Data$Iris$Datum, 5.7, 2.8, 4.5, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 6.3, 3.3, 4.7, 1.6, 1),
		A5($author$project$Data$Iris$Datum, 4.9, 2.4, 3.3, 1.0, 1),
		A5($author$project$Data$Iris$Datum, 6.6, 2.9, 4.6, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 5.2, 2.7, 3.9, 1.4, 1),
		A5($author$project$Data$Iris$Datum, 5.0, 2.0, 3.5, 1.0, 1),
		A5($author$project$Data$Iris$Datum, 5.9, 3.0, 4.2, 1.5, 1),
		A5($author$project$Data$Iris$Datum, 6.0, 2.2, 4.0, 1.0, 1),
		A5($author$project$Data$Iris$Datum, 6.1, 2.9, 4.7, 1.4, 1),
		A5($author$project$Data$Iris$Datum, 5.6, 2.9, 3.6, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 6.7, 3.1, 4.4, 1.4, 1),
		A5($author$project$Data$Iris$Datum, 5.6, 3.0, 4.5, 1.5, 1),
		A5($author$project$Data$Iris$Datum, 5.8, 2.7, 4.1, 1.0, 1),
		A5($author$project$Data$Iris$Datum, 6.2, 2.2, 4.5, 1.5, 1),
		A5($author$project$Data$Iris$Datum, 5.6, 2.5, 3.9, 1.1, 1),
		A5($author$project$Data$Iris$Datum, 5.9, 3.2, 4.8, 1.8, 1),
		A5($author$project$Data$Iris$Datum, 6.1, 2.8, 4.0, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 6.3, 2.5, 4.9, 1.5, 1),
		A5($author$project$Data$Iris$Datum, 6.1, 2.8, 4.7, 1.2, 1),
		A5($author$project$Data$Iris$Datum, 6.4, 2.9, 4.3, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 6.6, 3.0, 4.4, 1.4, 1),
		A5($author$project$Data$Iris$Datum, 6.8, 2.8, 4.8, 1.4, 1),
		A5($author$project$Data$Iris$Datum, 6.7, 3.0, 5.0, 1.7, 1),
		A5($author$project$Data$Iris$Datum, 6.0, 2.9, 4.5, 1.5, 1),
		A5($author$project$Data$Iris$Datum, 5.7, 2.6, 3.5, 1.0, 1),
		A5($author$project$Data$Iris$Datum, 5.5, 2.4, 3.8, 1.1, 1),
		A5($author$project$Data$Iris$Datum, 5.5, 2.4, 3.7, 1.0, 1),
		A5($author$project$Data$Iris$Datum, 5.8, 2.7, 3.9, 1.2, 1),
		A5($author$project$Data$Iris$Datum, 6.0, 2.7, 5.1, 1.6, 1),
		A5($author$project$Data$Iris$Datum, 5.4, 3.0, 4.5, 1.5, 1),
		A5($author$project$Data$Iris$Datum, 6.0, 3.4, 4.5, 1.6, 1),
		A5($author$project$Data$Iris$Datum, 6.7, 3.1, 4.7, 1.5, 1),
		A5($author$project$Data$Iris$Datum, 6.3, 2.3, 4.4, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 5.6, 3.0, 4.1, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 5.5, 2.5, 4.0, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 5.5, 2.6, 4.4, 1.2, 1),
		A5($author$project$Data$Iris$Datum, 6.1, 3.0, 4.6, 1.4, 1),
		A5($author$project$Data$Iris$Datum, 5.8, 2.6, 4.0, 1.2, 1),
		A5($author$project$Data$Iris$Datum, 5.0, 2.3, 3.3, 1.0, 1),
		A5($author$project$Data$Iris$Datum, 5.6, 2.7, 4.2, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 5.7, 3.0, 4.2, 1.2, 1),
		A5($author$project$Data$Iris$Datum, 5.7, 2.9, 4.2, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 6.2, 2.9, 4.3, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 5.1, 2.5, 3.0, 1.1, 1),
		A5($author$project$Data$Iris$Datum, 5.7, 2.8, 4.1, 1.3, 1),
		A5($author$project$Data$Iris$Datum, 6.3, 3.3, 6.0, 2.5, 2),
		A5($author$project$Data$Iris$Datum, 5.8, 2.7, 5.1, 1.9, 2),
		A5($author$project$Data$Iris$Datum, 7.1, 3.0, 5.9, 2.1, 2),
		A5($author$project$Data$Iris$Datum, 6.3, 2.9, 5.6, 1.8, 2),
		A5($author$project$Data$Iris$Datum, 6.5, 3.0, 5.8, 2.2, 2),
		A5($author$project$Data$Iris$Datum, 7.6, 3.0, 6.6, 2.1, 2),
		A5($author$project$Data$Iris$Datum, 4.9, 2.5, 4.5, 1.7, 2),
		A5($author$project$Data$Iris$Datum, 7.3, 2.9, 6.3, 1.8, 2),
		A5($author$project$Data$Iris$Datum, 6.7, 2.5, 5.8, 1.8, 2),
		A5($author$project$Data$Iris$Datum, 7.2, 3.6, 6.1, 2.5, 2),
		A5($author$project$Data$Iris$Datum, 6.5, 3.2, 5.1, 2.0, 2),
		A5($author$project$Data$Iris$Datum, 6.4, 2.7, 5.3, 1.9, 2),
		A5($author$project$Data$Iris$Datum, 6.8, 3.0, 5.5, 2.1, 2),
		A5($author$project$Data$Iris$Datum, 5.7, 2.5, 5.0, 2.0, 2),
		A5($author$project$Data$Iris$Datum, 5.8, 2.8, 5.1, 2.4, 2),
		A5($author$project$Data$Iris$Datum, 6.4, 3.2, 5.3, 2.3, 2),
		A5($author$project$Data$Iris$Datum, 6.5, 3.0, 5.5, 1.8, 2),
		A5($author$project$Data$Iris$Datum, 7.7, 3.8, 6.7, 2.2, 2),
		A5($author$project$Data$Iris$Datum, 7.7, 2.6, 6.9, 2.3, 2),
		A5($author$project$Data$Iris$Datum, 6.0, 2.2, 5.0, 1.5, 2),
		A5($author$project$Data$Iris$Datum, 6.9, 3.2, 5.7, 2.3, 2),
		A5($author$project$Data$Iris$Datum, 5.6, 2.8, 4.9, 2.0, 2),
		A5($author$project$Data$Iris$Datum, 7.7, 2.8, 6.7, 2.0, 2),
		A5($author$project$Data$Iris$Datum, 6.3, 2.7, 4.9, 1.8, 2),
		A5($author$project$Data$Iris$Datum, 6.7, 3.3, 5.7, 2.1, 2),
		A5($author$project$Data$Iris$Datum, 7.2, 3.2, 6.0, 1.8, 2),
		A5($author$project$Data$Iris$Datum, 6.2, 2.8, 4.8, 1.8, 2),
		A5($author$project$Data$Iris$Datum, 6.1, 3.0, 4.9, 1.8, 2),
		A5($author$project$Data$Iris$Datum, 6.4, 2.8, 5.6, 2.1, 2),
		A5($author$project$Data$Iris$Datum, 7.2, 3.0, 5.8, 1.6, 2),
		A5($author$project$Data$Iris$Datum, 7.4, 2.8, 6.1, 1.9, 2),
		A5($author$project$Data$Iris$Datum, 7.9, 3.8, 6.4, 2.0, 2),
		A5($author$project$Data$Iris$Datum, 6.4, 2.8, 5.6, 2.2, 2),
		A5($author$project$Data$Iris$Datum, 6.3, 2.8, 5.1, 1.5, 2),
		A5($author$project$Data$Iris$Datum, 6.1, 2.6, 5.6, 1.4, 2),
		A5($author$project$Data$Iris$Datum, 7.7, 3.0, 6.1, 2.3, 2),
		A5($author$project$Data$Iris$Datum, 6.3, 3.4, 5.6, 2.4, 2),
		A5($author$project$Data$Iris$Datum, 6.4, 3.1, 5.5, 1.8, 2),
		A5($author$project$Data$Iris$Datum, 6.0, 3.0, 4.8, 1.8, 2),
		A5($author$project$Data$Iris$Datum, 6.9, 3.1, 5.4, 2.1, 2),
		A5($author$project$Data$Iris$Datum, 6.7, 3.1, 5.6, 2.4, 2),
		A5($author$project$Data$Iris$Datum, 6.9, 3.1, 5.1, 2.3, 2),
		A5($author$project$Data$Iris$Datum, 5.8, 2.7, 5.1, 1.9, 2),
		A5($author$project$Data$Iris$Datum, 6.8, 3.2, 5.9, 2.3, 2),
		A5($author$project$Data$Iris$Datum, 6.7, 3.3, 5.7, 2.5, 2),
		A5($author$project$Data$Iris$Datum, 6.7, 3.0, 5.2, 2.3, 2),
		A5($author$project$Data$Iris$Datum, 6.3, 2.5, 5.0, 1.9, 2),
		A5($author$project$Data$Iris$Datum, 6.5, 3.0, 5.2, 2.0, 2),
		A5($author$project$Data$Iris$Datum, 6.2, 3.4, 5.4, 2.3, 2),
		A5($author$project$Data$Iris$Datum, 5.9, 3.0, 5.1, 1.8, 2)
	]);
var $author$project$Internal$Svg$Diamond = 3;
var $author$project$Chart$Attributes$diamond = function (config) {
	return _Utils_update(
		config,
		{
			aW: $elm$core$Maybe$Just(3)
		});
};
var $author$project$Examples$Interactivity$Zoom$getCurrentWindow = function (model) {
	switch (model.$) {
		case 0:
			return $elm$core$Maybe$Nothing;
		case 1:
			return $elm$core$Maybe$Nothing;
		case 2:
			var start = model.a;
			var end = model.b;
			return $elm$core$Maybe$Just(
				_Utils_Tuple2(start, end));
		default:
			var start = model.a;
			var end = model.b;
			return $elm$core$Maybe$Just(
				_Utils_Tuple2(start, end));
	}
};
var $author$project$Examples$Interactivity$Zoom$getNewSelection = function (model) {
	switch (model.$) {
		case 0:
			return $elm$core$Maybe$Nothing;
		case 1:
			var start = model.a;
			var end = model.b;
			return $elm$core$Maybe$Just(
				_Utils_Tuple2(start, end));
		case 2:
			var start = model.c;
			var end = model.d;
			return $elm$core$Maybe$Just(
				_Utils_Tuple2(start, end));
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Chart$Events$onMouseDown = F2(
	function (onMsg, decoder) {
		return A2(
			$author$project$Chart$Events$on,
			'mousedown',
			A2($author$project$Chart$Events$map, onMsg, decoder));
	});
var $author$project$Chart$Events$onMouseUp = F2(
	function (onMsg, decoder) {
		return A2(
			$author$project$Chart$Events$on,
			'mouseup',
			A2($author$project$Chart$Events$map, onMsg, decoder));
	});
var $author$project$Data$Iris$only = F3(
	function (needed, func, datum) {
		return _Utils_eq(datum.eJ, needed) ? $elm$core$Maybe$Just(
			func(datum)) : $elm$core$Maybe$Nothing;
	});
var $author$project$Chart$scatterMaybe = function (y) {
	return A2($author$project$Internal$Property$notStacked, y, _List_Nil);
};
var $author$project$Examples$Interactivity$Zoom$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$htmlAttrs(
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'cursor', 'crosshair')
					])),
				A2($author$project$Chart$Events$onMouseDown, $author$project$Examples$Interactivity$Zoom$OnDown, $author$project$Chart$Events$getCoords),
				A2($author$project$Chart$Events$onMouseMove, $author$project$Examples$Interactivity$Zoom$OnMove, $author$project$Chart$Events$getCoords),
				A2($author$project$Chart$Events$onMouseUp, $author$project$Examples$Interactivity$Zoom$OnUp, $author$project$Chart$Events$getCoords),
				function () {
				var _v0 = $author$project$Examples$Interactivity$Zoom$getCurrentWindow(model);
				if (!_v0.$) {
					var _v1 = _v0.a;
					var start = _v1.a;
					var end = _v1.b;
					return $author$project$Chart$Attributes$range(
						_List_fromArray(
							[
								A2($author$project$Chart$Attributes$lowest, start.b, $author$project$Chart$Attributes$exactly),
								A2($author$project$Chart$Attributes$highest, end.b, $author$project$Chart$Attributes$exactly)
							]));
				} else {
					return $author$project$Chart$Attributes$range(_List_Nil);
				}
			}(),
				function () {
				var _v2 = $author$project$Examples$Interactivity$Zoom$getCurrentWindow(model);
				if (!_v2.$) {
					var _v3 = _v2.a;
					var start = _v3.a;
					var end = _v3.b;
					return $author$project$Chart$Attributes$domain(
						_List_fromArray(
							[
								A2($author$project$Chart$Attributes$lowest, start.a, $author$project$Chart$Attributes$exactly),
								A2($author$project$Chart$Attributes$highest, end.a, $author$project$Chart$Attributes$exactly)
							]));
				} else {
					return $author$project$Chart$Attributes$range(_List_Nil);
				}
			}()
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.dW;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatterMaybe,
						A2(
							$author$project$Data$Iris$only,
							0,
							function ($) {
								return $.ii;
							}),
						_List_fromArray(
							[
								$author$project$Chart$Attributes$size(3),
								$author$project$Chart$Attributes$color('white'),
								$author$project$Chart$Attributes$borderWidth(1),
								$author$project$Chart$Attributes$circle
							])),
						A2(
						$author$project$Chart$scatterMaybe,
						A2(
							$author$project$Data$Iris$only,
							1,
							function ($) {
								return $.ii;
							}),
						_List_fromArray(
							[
								$author$project$Chart$Attributes$size(3),
								$author$project$Chart$Attributes$color('white'),
								$author$project$Chart$Attributes$borderWidth(1),
								$author$project$Chart$Attributes$square
							])),
						A2(
						$author$project$Chart$scatterMaybe,
						A2(
							$author$project$Data$Iris$only,
							2,
							function ($) {
								return $.ii;
							}),
						_List_fromArray(
							[
								$author$project$Chart$Attributes$size(3),
								$author$project$Chart$Attributes$color('white'),
								$author$project$Chart$Attributes$borderWidth(1),
								$author$project$Chart$Attributes$diamond
							]))
					]),
				$author$project$Data$Iris$data),
				function () {
				var _v4 = $author$project$Examples$Interactivity$Zoom$getNewSelection(model);
				if (!_v4.$) {
					var _v5 = _v4.a;
					var start = _v5.a;
					var end = _v5.b;
					return $author$project$Chart$rect(
						_List_fromArray(
							[
								$author$project$Chart$Attributes$x1(start.b),
								$author$project$Chart$Attributes$x2(end.b),
								$author$project$Chart$Attributes$y1(start.a),
								$author$project$Chart$Attributes$y2(end.a)
							]));
				} else {
					return $author$project$Chart$none;
				}
			}(),
				function () {
				var _v6 = $author$project$Examples$Interactivity$Zoom$getCurrentWindow(model);
				if (!_v6.$) {
					var _v7 = _v6.a;
					var start = _v7.a;
					var end = _v7.b;
					return A6(
						$author$project$Chart$htmlAt,
						function ($) {
							return $.J;
						},
						function ($) {
							return $.J;
						},
						-10,
						-10,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'transform', 'translateX(-100%)')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$button,
								_List_fromArray(
									[
										$elm$html$Html$Events$onClick($author$project$Examples$Interactivity$Zoom$OnReset),
										A2($elm$html$Html$Attributes$style, 'border', '1px solid black'),
										A2($elm$html$Html$Attributes$style, 'border-radius', '5px'),
										A2($elm$html$Html$Attributes$style, 'padding', '2px 10px'),
										A2($elm$html$Html$Attributes$style, 'background', 'white'),
										A2($elm$html$Html$Attributes$style, 'font-size', '14px')
									]),
								_List_fromArray(
									[
										$elm$html$Html$text('Reset')
									]))
							]));
				} else {
					return $author$project$Chart$none;
				}
			}()
			]));
};
var $author$project$Examples$Interactivity$ZoomAlt$OnMouseDown = function (a) {
	return {$: 1, a: a};
};
var $author$project$Examples$Interactivity$ZoomAlt$OnMouseLeave = {$: 3};
var $author$project$Examples$Interactivity$ZoomAlt$OnMouseMove = function (a) {
	return {$: 0, a: a};
};
var $author$project$Examples$Interactivity$ZoomAlt$OnMouseUp = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $author$project$Examples$Interactivity$ZoomAlt$OnZoomIn = {$: 4};
var $author$project$Examples$Interactivity$ZoomAlt$OnZoomOut = {$: 5};
var $author$project$Examples$Interactivity$ZoomAlt$OnZoomReset = {$: 6};
var $author$project$Chart$Attributes$centerAt = function (v) {
	return function (axis) {
		var full = axis.J - axis.Y;
		return _Utils_update(
			axis,
			{J: v + (full / 2), Y: v - (full / 2)});
	};
};
var $author$project$Chart$Attributes$darkGray = $author$project$Internal$Helpers$darkGray;
var $author$project$Internal$Events$getOffset = F3(
	function (_v0, plane, searched) {
		return {
			b: searched.b - (plane.b.Y + ($author$project$Internal$Coordinates$range(plane.b) / 2)),
			a: searched.a - (plane.a.Y + ($author$project$Internal$Coordinates$range(plane.a) / 2))
		};
	});
var $author$project$Chart$Events$getOffset = $author$project$Internal$Events$getOffset;
var $author$project$Chart$Attributes$hideOverflow = function (config) {
	return _Utils_update(
		config,
		{r: true});
};
var $elm$html$Html$span = _VirtualDom_node('span');
var $author$project$Chart$Attributes$zoom = function (per) {
	return function (axis) {
		var full = axis.J - axis.Y;
		var zoomedFull = full / (A2($elm$core$Basics$max, 1, per) / 100);
		var off = (full - zoomedFull) / 2;
		return _Utils_update(
			axis,
			{J: axis.J - off, Y: axis.Y + off});
	};
};
var $author$project$Examples$Interactivity$ZoomAlt$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$range(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$zoom(model.Z),
						$author$project$Chart$Attributes$centerAt(model.Q.b)
					])),
				$author$project$Chart$Attributes$domain(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$zoom(model.Z),
						$author$project$Chart$Attributes$centerAt(model.Q.a)
					])),
				A2($author$project$Chart$Events$onMouseDown, $author$project$Examples$Interactivity$ZoomAlt$OnMouseDown, $author$project$Chart$Events$getOffset),
				A2($author$project$Chart$Events$onMouseMove, $author$project$Examples$Interactivity$ZoomAlt$OnMouseMove, $author$project$Chart$Events$getOffset),
				A2(
				$author$project$Chart$Events$on,
				'mouseup',
				A3($author$project$Chart$Events$map2, $author$project$Examples$Interactivity$ZoomAlt$OnMouseUp, $author$project$Chart$Events$getOffset, $author$project$Chart$Events$getCoords)),
				$author$project$Chart$Events$onMouseLeave($author$project$Examples$Interactivity$ZoomAlt$OnMouseLeave),
				$author$project$Chart$Attributes$htmlAttrs(
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'user-select', 'none'),
						A2(
						$elm$html$Html$Attributes$style,
						'cursor',
						function () {
							var _v0 = model.W;
							switch (_v0.$) {
								case 0:
									return 'grabbing';
								case 1:
									return 'grabbing';
								default:
									return 'grab';
							}
						}())
					]))
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$withGrid,
						$author$project$Chart$Attributes$amount(10),
						$author$project$Chart$Attributes$ints,
						$author$project$Chart$Attributes$fontSize(9)
					])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$withGrid,
						$author$project$Chart$Attributes$amount(10),
						$author$project$Chart$Attributes$ints,
						$author$project$Chart$Attributes$fontSize(9)
					])),
				$author$project$Chart$xTicks(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$amount(10),
						$author$project$Chart$Attributes$ints
					])),
				$author$project$Chart$yTicks(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$amount(10),
						$author$project$Chart$Attributes$ints
					])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$variation,
						F2(
							function (_v1, d) {
								return _List_fromArray(
									[
										$author$project$Chart$Attributes$size((d.ak * model.Z) / 100),
										$author$project$Chart$Attributes$hideOverflow
									]);
							}),
						A2(
							$author$project$Chart$scatter,
							function ($) {
								return $.a;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$opacity(0.2),
									$author$project$Chart$Attributes$borderWidth(1)
								])))
					]),
				_List_fromArray(
					[
						{ak: 40, b: -100, a: -100},
						{ak: 30, b: -80, a: -30},
						{ak: 60, b: -60, a: 80},
						{ak: 70, b: -50, a: 50},
						{ak: 40, b: 20, a: 80},
						{ak: 60, b: 30, a: -20},
						{ak: 80, b: 40, a: 50},
						{ak: 50, b: 80, a: 20},
						{ak: 40, b: 100, a: 100}
					])),
				$author$project$Chart$withPlane(
				function (p) {
					return _List_fromArray(
						[
							$author$project$Chart$line(
							_List_fromArray(
								[
									$author$project$Chart$Attributes$color($author$project$Chart$Attributes$darkGray),
									$author$project$Chart$Attributes$dashed(
									_List_fromArray(
										[6, 6])),
									$author$project$Chart$Attributes$y1(
									$author$project$Chart$Attributes$middle(p.a))
								])),
							$author$project$Chart$line(
							_List_fromArray(
								[
									$author$project$Chart$Attributes$color($author$project$Chart$Attributes$darkGray),
									$author$project$Chart$Attributes$dashed(
									_List_fromArray(
										[6, 6])),
									$author$project$Chart$Attributes$x1(
									$author$project$Chart$Attributes$middle(p.b))
								]))
						]);
				}),
				A6(
				$author$project$Chart$htmlAt,
				function ($) {
					return $.J;
				},
				function ($) {
					return $.J;
				},
				0,
				0,
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'transform', 'translateX(-100%)')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$span,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'margin-right', '5px')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(
								$elm$core$String$fromFloat(model.Z) + '%')
							])),
						A2(
						$elm$html$Html$button,
						_List_fromArray(
							[
								$elm$html$Html$Events$onClick($author$project$Examples$Interactivity$ZoomAlt$OnZoomIn),
								A2($elm$html$Html$Attributes$style, 'margin-right', '5px')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('+')
							])),
						A2(
						$elm$html$Html$button,
						_List_fromArray(
							[
								$elm$html$Html$Events$onClick($author$project$Examples$Interactivity$ZoomAlt$OnZoomOut),
								A2($elm$html$Html$Attributes$style, 'margin-right', '5px')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('-')
							])),
						A2(
						$elm$html$Html$button,
						_List_fromArray(
							[
								$elm$html$Html$Events$onClick($author$project$Examples$Interactivity$ZoomAlt$OnZoomReset)
							]),
						_List_fromArray(
							[
								$elm$html$Html$text('⨯')
							]))
					]))
			]));
};
var $author$project$Examples$LineCharts$Area$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Area$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Area$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Area$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Area$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Area$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Area$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Area$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Area$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Area$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Area$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Area$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$LineCharts$Area$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.2)
							]),
						_List_Nil),
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.2)
							]),
						_List_Nil)
					]),
				$author$project$Examples$LineCharts$Area$data)
			]));
};
var $author$project$Examples$LineCharts$Basic$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Basic$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Basic$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Basic$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Basic$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Basic$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Basic$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Basic$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Basic$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Basic$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Basic$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Basic$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$LineCharts$Basic$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_Nil,
						_List_Nil),
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.gA;
						},
						_List_Nil,
						_List_Nil)
					]),
				$author$project$Examples$LineCharts$Basic$data)
			]));
};
var $author$project$Examples$LineCharts$Color$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Color$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Color$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Color$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Color$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Color$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Color$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Color$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Color$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Color$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Color$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Color$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Chart$Attributes$orange = $author$project$Internal$Helpers$orange;
var $author$project$Examples$LineCharts$Color$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$red)
							]),
						_List_Nil),
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$orange)
							]),
						_List_Nil)
					]),
				$author$project$Examples$LineCharts$Color$data)
			]));
};
var $author$project$Examples$LineCharts$Dashed$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Dashed$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Dashed$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Dashed$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Dashed$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Dashed$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Dashed$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Dashed$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Dashed$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Dashed$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Dashed$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Dashed$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$LineCharts$Dashed$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$monotone,
								$author$project$Chart$Attributes$dashed(
								_List_fromArray(
									[1, 2]))
							]),
						_List_Nil),
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$monotone,
								$author$project$Chart$Attributes$dashed(
								_List_fromArray(
									[10, 5]))
							]),
						_List_Nil)
					]),
				$author$project$Examples$LineCharts$Dashed$data)
			]));
};
var $author$project$Examples$LineCharts$Dots$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Dots$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Dots$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Dots$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Dots$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Dots$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Dots$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Dots$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Dots$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Dots$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Dots$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Dots$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$LineCharts$Dots$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_Nil,
						_List_fromArray(
							[$author$project$Chart$Attributes$circle]))
					]),
				$author$project$Examples$LineCharts$Dots$data)
			]));
};
var $author$project$Examples$LineCharts$Gradient$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Gradient$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Gradient$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Gradient$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Gradient$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Gradient$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Gradient$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Gradient$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Gradient$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Gradient$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Gradient$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Gradient$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$LineCharts$Gradient$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.6),
								$author$project$Chart$Attributes$gradient(_List_Nil)
							]),
						_List_Nil)
					]),
				$author$project$Examples$LineCharts$Gradient$data)
			]));
};
var $author$project$Examples$LineCharts$Labels$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Labels$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Labels$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Labels$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Labels$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Labels$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Labels$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Labels$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Labels$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Labels$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Labels$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Labels$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Chart$eachDot = function (func) {
	return $author$project$Chart$SubElements(
		F2(
			function (p, is) {
				return A2(
					$elm$core$List$concatMap,
					func(p),
					A2(
						$author$project$Chart$Item$apply,
						A2($author$project$Chart$Item$andThen, $author$project$Chart$Item$real, $author$project$Chart$Item$dots),
						is));
			}));
};
var $author$project$Chart$dotLabels = function (edits) {
	return $author$project$Chart$eachDot(
		F2(
			function (p, item) {
				var config = A2(
					$author$project$Internal$Helpers$apply,
					edits,
					_Utils_update(
						$author$project$Chart$defaultLabel,
						{F: $author$project$Chart$Item$getCenter}));
				var text = function () {
					var _v1 = config.I;
					if (!_v1.$) {
						var formatting = _v1.a;
						return formatting(item);
					} else {
						return $elm$core$String$fromFloat(
							$author$project$Chart$Item$getY(item));
					}
				}();
				return _List_fromArray(
					[
						$author$project$Chart$svg(
						function (_v0) {
							return A4(
								$author$project$Internal$Svg$label,
								p,
								$author$project$Chart$toLabelFromItemLabel(config),
								_List_fromArray(
									[
										$elm$svg$Svg$text(text)
									]),
								A2(config.F, p, item));
						})
					]);
			}));
};
var $author$project$Examples$LineCharts$Labels$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 15, c5: 15, di: 0})
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$monotone]),
						_List_fromArray(
							[
								$author$project$Chart$Attributes$circle,
								$author$project$Chart$Attributes$size(40)
							]))
					]),
				$author$project$Examples$LineCharts$Labels$data),
				$author$project$Chart$dotLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$moveDown(4),
						$author$project$Chart$Attributes$color('white')
					]))
			]));
};
var $author$project$Examples$LineCharts$Legends$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Legends$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Legends$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Legends$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Legends$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Legends$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Legends$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Legends$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Legends$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Legends$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Legends$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Legends$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$LineCharts$Legends$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$named,
						'Cats',
						A3(
							$author$project$Chart$interpolated,
							function ($) {
								return $.a;
							},
							_List_Nil,
							_List_fromArray(
								[
									$author$project$Chart$Attributes$cross,
									$author$project$Chart$Attributes$borderWidth(2),
									$author$project$Chart$Attributes$border('white')
								]))),
						A2(
						$author$project$Chart$named,
						'Fish',
						A3(
							$author$project$Chart$interpolated,
							function ($) {
								return $.gA;
							},
							_List_Nil,
							_List_fromArray(
								[
									$author$project$Chart$Attributes$cross,
									$author$project$Chart$Attributes$borderWidth(2),
									$author$project$Chart$Attributes$border('white')
								])))
					]),
				$author$project$Examples$LineCharts$Legends$data),
				A4(
				$author$project$Chart$legendsAt,
				function ($) {
					return $.Y;
				},
				function ($) {
					return $.J;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$column,
						$author$project$Chart$Attributes$moveRight(15),
						$author$project$Chart$Attributes$spacing(5)
					]),
				_List_fromArray(
					[
						$author$project$Chart$Attributes$width(20)
					]))
			]));
};
var $author$project$Examples$LineCharts$Missing$Datum = F3(
	function (x, y, z) {
		return {b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Missing$data = _List_fromArray(
	[
		A3(
		$author$project$Examples$LineCharts$Missing$Datum,
		1,
		$elm$core$Maybe$Just(2),
		$elm$core$Maybe$Just(1)),
		A3(
		$author$project$Examples$LineCharts$Missing$Datum,
		2,
		$elm$core$Maybe$Just(3),
		$elm$core$Maybe$Just(2)),
		A3(
		$author$project$Examples$LineCharts$Missing$Datum,
		3,
		$elm$core$Maybe$Just(4),
		$elm$core$Maybe$Just(3)),
		A3(
		$author$project$Examples$LineCharts$Missing$Datum,
		4,
		$elm$core$Maybe$Nothing,
		$elm$core$Maybe$Just(4)),
		A3(
		$author$project$Examples$LineCharts$Missing$Datum,
		5,
		$elm$core$Maybe$Just(2),
		$elm$core$Maybe$Just(3)),
		A3(
		$author$project$Examples$LineCharts$Missing$Datum,
		6,
		$elm$core$Maybe$Just(4),
		$elm$core$Maybe$Just(1)),
		A3(
		$author$project$Examples$LineCharts$Missing$Datum,
		7,
		$elm$core$Maybe$Just(5),
		$elm$core$Maybe$Just(2)),
		A3(
		$author$project$Examples$LineCharts$Missing$Datum,
		8,
		$elm$core$Maybe$Just(6),
		$elm$core$Maybe$Nothing),
		A3(
		$author$project$Examples$LineCharts$Missing$Datum,
		9,
		$elm$core$Maybe$Just(5),
		$elm$core$Maybe$Just(4)),
		A3(
		$author$project$Examples$LineCharts$Missing$Datum,
		10,
		$elm$core$Maybe$Just(4),
		$elm$core$Maybe$Just(3))
	]);
var $author$project$Chart$interpolatedMaybe = F2(
	function (y, inter) {
		return A2(
			$author$project$Internal$Property$notStacked,
			y,
			_Utils_ap(
				_List_fromArray(
					[$author$project$Chart$Attributes$linear]),
				inter));
	});
var $author$project$Internal$Svg$Stepped = 2;
var $author$project$Chart$Attributes$stepped = function (config) {
	return _Utils_update(
		config,
		{
			aU: $elm$core$Maybe$Just(2)
		});
};
var $author$project$Examples$LineCharts$Missing$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolatedMaybe,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$stepped]),
						_List_Nil)
					]),
				$author$project$Examples$LineCharts$Missing$data)
			]));
};
var $author$project$Examples$LineCharts$Montone$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Montone$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Montone$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Montone$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Montone$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Montone$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Montone$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Montone$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Montone$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Montone$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Montone$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Montone$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$LineCharts$Montone$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$monotone]),
						_List_Nil),
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$monotone]),
						_List_Nil)
					]),
				$author$project$Examples$LineCharts$Montone$data)
			]));
};
var $author$project$Examples$LineCharts$Pattern$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Pattern$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Pattern$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Pattern$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Pattern$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Pattern$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Pattern$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Pattern$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Pattern$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Pattern$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Pattern$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Pattern$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$LineCharts$Pattern$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.a;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$striped(
										_List_fromArray(
											[
												$author$project$Chart$Attributes$width(3),
												$author$project$Chart$Attributes$spacing(4),
												$author$project$Chart$Attributes$rotate(90)
											]))
									]),
								_List_Nil),
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.gA;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$dotted(
										_List_fromArray(
											[
												$author$project$Chart$Attributes$width(3),
												$author$project$Chart$Attributes$spacing(4)
											]))
									]),
								_List_Nil)
							]))
					]),
				$author$project$Examples$LineCharts$Pattern$data)
			]));
};
var $author$project$Examples$LineCharts$Stacked$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Stacked$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Stacked$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Stacked$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Stacked$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Stacked$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Stacked$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Stacked$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Stacked$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Stacked$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Stacked$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Stacked$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$LineCharts$Stacked$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.a;
								},
								_List_Nil,
								_List_Nil),
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.gA;
								},
								_List_Nil,
								_List_Nil)
							]))
					]),
				$author$project$Examples$LineCharts$Stacked$data)
			]));
};
var $author$project$Examples$LineCharts$Stepped$Datum = F3(
	function (x, y, z) {
		return {b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Stepped$data = _List_fromArray(
	[
		A3($author$project$Examples$LineCharts$Stepped$Datum, 1, 2, 1),
		A3($author$project$Examples$LineCharts$Stepped$Datum, 2, 3, 2),
		A3($author$project$Examples$LineCharts$Stepped$Datum, 3, 4, 3),
		A3($author$project$Examples$LineCharts$Stepped$Datum, 4, 3, 4),
		A3($author$project$Examples$LineCharts$Stepped$Datum, 5, 2, 3),
		A3($author$project$Examples$LineCharts$Stepped$Datum, 6, 4, 1),
		A3($author$project$Examples$LineCharts$Stepped$Datum, 7, 5, 2),
		A3($author$project$Examples$LineCharts$Stepped$Datum, 8, 6, 3),
		A3($author$project$Examples$LineCharts$Stepped$Datum, 9, 5, 4),
		A3($author$project$Examples$LineCharts$Stepped$Datum, 10, 4, 3)
	]);
var $author$project$Examples$LineCharts$Stepped$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$stepped]),
						_List_Nil),
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$stepped]),
						_List_Nil)
					]),
				$author$project$Examples$LineCharts$Stepped$data)
			]));
};
var $author$project$Examples$LineCharts$Tooltip$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$LineCharts$Tooltip$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Tooltip$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Tooltip$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Tooltip$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Tooltip$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Tooltip$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Tooltip$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Tooltip$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Tooltip$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Tooltip$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Tooltip$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Tooltip$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$LineCharts$Tooltip$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$dots)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_Nil,
						_List_fromArray(
							[
								$author$project$Chart$Attributes$circle,
								$author$project$Chart$Attributes$size(3)
							])),
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.gA;
						},
						_List_Nil,
						_List_fromArray(
							[
								$author$project$Chart$Attributes$circle,
								$author$project$Chart$Attributes$size(3)
							]))
					]),
				$author$project$Examples$LineCharts$Tooltip$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$LineCharts$TooltipStack$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$LineCharts$TooltipStack$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$TooltipStack$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$TooltipStack$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$TooltipStack$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$TooltipStack$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$TooltipStack$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$TooltipStack$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$TooltipStack$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$TooltipStack$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$TooltipStack$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$TooltipStack$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$TooltipStack$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$LineCharts$TooltipStack$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$stacks)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						$author$project$Chart$stacked(
						_List_fromArray(
							[
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.a;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$monotone,
										$author$project$Chart$Attributes$gradient(_List_Nil)
									]),
								_List_fromArray(
									[
										$author$project$Chart$Attributes$circle,
										$author$project$Chart$Attributes$color('white'),
										$author$project$Chart$Attributes$borderWidth(1)
									])),
								A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.gA;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$monotone,
										$author$project$Chart$Attributes$gradient(_List_Nil)
									]),
								_List_fromArray(
									[
										$author$project$Chart$Attributes$circle,
										$author$project$Chart$Attributes$color('white'),
										$author$project$Chart$Attributes$borderWidth(1)
									]))
							]))
					]),
				$author$project$Examples$LineCharts$TooltipStack$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$LineCharts$Width$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$LineCharts$Width$data = _List_fromArray(
	[
		A7($author$project$Examples$LineCharts$Width$Datum, 1, 2, 1, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$LineCharts$Width$Datum, 2, 3, 2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$LineCharts$Width$Datum, 3, 4, 3, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$LineCharts$Width$Datum, 4, 3, 4, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$LineCharts$Width$Datum, 5, 2, 3, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$LineCharts$Width$Datum, 6, 4, 1, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$LineCharts$Width$Datum, 7, 5, 2, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$LineCharts$Width$Datum, 8, 6, 3, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$LineCharts$Width$Datum, 9, 5, 4, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$LineCharts$Width$Datum, 10, 4, 3, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$LineCharts$Width$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$width(4)
							]),
						_List_Nil),
						A3(
						$author$project$Chart$interpolated,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$width(3)
							]),
						_List_Nil)
					]),
				$author$project$Examples$LineCharts$Width$data)
			]));
};
var $author$project$Examples$ScatterCharts$Basic$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$ScatterCharts$Basic$data = _List_fromArray(
	[
		A7($author$project$Examples$ScatterCharts$Basic$Datum, 0.1, 2.0, 4.0, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$ScatterCharts$Basic$Datum, 0.2, 3.0, 4.2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$ScatterCharts$Basic$Datum, 0.8, 4.0, 4.6, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$ScatterCharts$Basic$Datum, 1.0, 2.0, 4.2, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$ScatterCharts$Basic$Datum, 1.2, 5.0, 3.5, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$ScatterCharts$Basic$Datum, 2.0, 2.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$ScatterCharts$Basic$Datum, 2.3, 1.0, 4.3, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$ScatterCharts$Basic$Datum, 2.8, 3.0, 2.9, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$ScatterCharts$Basic$Datum, 3.0, 2.0, 3.6, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$ScatterCharts$Basic$Datum, 4.0, 1.0, 4.2, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$ScatterCharts$Basic$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_Nil),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.gA;
						},
						_List_Nil)
					]),
				$author$project$Examples$ScatterCharts$Basic$data)
			]));
};
var $author$project$Examples$ScatterCharts$Borders$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$ScatterCharts$Borders$data = _List_fromArray(
	[
		A7($author$project$Examples$ScatterCharts$Borders$Datum, 0.1, 2.0, 4.0, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$ScatterCharts$Borders$Datum, 0.2, 3.0, 4.2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$ScatterCharts$Borders$Datum, 0.8, 4.0, 4.6, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$ScatterCharts$Borders$Datum, 1.0, 2.0, 4.2, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$ScatterCharts$Borders$Datum, 1.2, 5.0, 3.5, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$ScatterCharts$Borders$Datum, 2.0, 2.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$ScatterCharts$Borders$Datum, 2.3, 1.0, 4.3, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$ScatterCharts$Borders$Datum, 2.8, 3.0, 2.9, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$ScatterCharts$Borders$Datum, 3.0, 2.0, 3.6, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$ScatterCharts$Borders$Datum, 4.0, 1.0, 4.2, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$ScatterCharts$Borders$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$borderWidth(3),
								$author$project$Chart$Attributes$border($author$project$Chart$Attributes$purple),
								$author$project$Chart$Attributes$size(18),
								$author$project$Chart$Attributes$opacity(0)
							]))
					]),
				$author$project$Examples$ScatterCharts$Borders$data)
			]));
};
var $author$project$Examples$ScatterCharts$Colors$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$ScatterCharts$Colors$data = _List_fromArray(
	[
		A7($author$project$Examples$ScatterCharts$Colors$Datum, 0.1, 2.0, 4.0, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$ScatterCharts$Colors$Datum, 0.2, 3.0, 4.2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$ScatterCharts$Colors$Datum, 0.8, 4.0, 4.6, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$ScatterCharts$Colors$Datum, 1.0, 2.0, 4.2, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$ScatterCharts$Colors$Datum, 1.2, 5.0, 3.5, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$ScatterCharts$Colors$Datum, 2.0, 2.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$ScatterCharts$Colors$Datum, 2.3, 1.0, 4.3, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$ScatterCharts$Colors$Datum, 2.8, 3.0, 2.9, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$ScatterCharts$Colors$Datum, 3.0, 2.0, 3.6, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$ScatterCharts$Colors$Datum, 4.0, 1.0, 4.2, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$ScatterCharts$Colors$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$red)
							])),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$orange)
							]))
					]),
				$author$project$Examples$ScatterCharts$Colors$data)
			]));
};
var $author$project$Examples$ScatterCharts$DataDependent$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$ScatterCharts$DataDependent$data = _List_fromArray(
	[
		A7($author$project$Examples$ScatterCharts$DataDependent$Datum, 0.1, 2.0, 4.0, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$ScatterCharts$DataDependent$Datum, 0.2, 3.0, 4.2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$ScatterCharts$DataDependent$Datum, 0.8, 4.0, 4.6, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$ScatterCharts$DataDependent$Datum, 1.0, 2.0, 4.2, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$ScatterCharts$DataDependent$Datum, 1.2, 5.0, 3.5, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$ScatterCharts$DataDependent$Datum, 2.0, 2.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$ScatterCharts$DataDependent$Datum, 2.3, 1.0, 4.3, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$ScatterCharts$DataDependent$Datum, 2.8, 3.0, 2.9, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$ScatterCharts$DataDependent$Datum, 3.0, 2.0, 3.6, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$ScatterCharts$DataDependent$Datum, 4.0, 1.0, 4.2, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$ScatterCharts$DataDependent$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 10, c5: 10, di: 0})
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$variation,
						F2(
							function (i, d) {
								return _List_fromArray(
									[
										$author$project$Chart$Attributes$size((d.b * 20) + 2)
									]);
							}),
						A2(
							$author$project$Chart$scatter,
							function ($) {
								return $.gA;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$opacity(0.5),
									$author$project$Chart$Attributes$borderWidth(1)
								]))),
						A2(
						$author$project$Chart$variation,
						F2(
							function (i, d) {
								return _List_fromArray(
									[
										$author$project$Chart$Attributes$highlight(
										(d.b === 3) ? 0.5 : 0)
									]);
							}),
						A2(
							$author$project$Chart$scatter,
							function ($) {
								return $.a;
							},
							_List_Nil))
					]),
				$author$project$Examples$ScatterCharts$DataDependent$data)
			]));
};
var $author$project$Examples$ScatterCharts$Highlight$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$ScatterCharts$Highlight$data = _List_fromArray(
	[
		A7($author$project$Examples$ScatterCharts$Highlight$Datum, 0.1, 2.0, 4.0, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$ScatterCharts$Highlight$Datum, 0.2, 3.0, 4.2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$ScatterCharts$Highlight$Datum, 0.8, 4.0, 4.6, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$ScatterCharts$Highlight$Datum, 1.0, 2.0, 4.2, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$ScatterCharts$Highlight$Datum, 1.2, 5.0, 3.5, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$ScatterCharts$Highlight$Datum, 2.0, 2.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$ScatterCharts$Highlight$Datum, 2.3, 1.0, 4.3, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$ScatterCharts$Highlight$Datum, 2.8, 3.0, 2.9, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$ScatterCharts$Highlight$Datum, 3.0, 2.0, 3.6, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$ScatterCharts$Highlight$Datum, 4.0, 1.0, 4.2, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$ScatterCharts$Highlight$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 15, c5: 15, di: 0})
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_Nil),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$highlight(0.4)
							]))
					]),
				$author$project$Examples$ScatterCharts$Highlight$data)
			]));
};
var $author$project$Examples$ScatterCharts$Labels$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$ScatterCharts$Labels$data = _List_fromArray(
	[
		A7($author$project$Examples$ScatterCharts$Labels$Datum, 0.6, 2.0, 4.0, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$ScatterCharts$Labels$Datum, 0.7, 3.0, 4.2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$ScatterCharts$Labels$Datum, 0.8, 4.0, 4.6, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$ScatterCharts$Labels$Datum, 1.0, 2.0, 4.2, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$ScatterCharts$Labels$Datum, 1.2, 5.0, 3.5, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$ScatterCharts$Labels$Datum, 2.0, 2.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$ScatterCharts$Labels$Datum, 2.3, 1.0, 4.3, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$ScatterCharts$Labels$Datum, 2.8, 3.0, 2.9, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$ScatterCharts$Labels$Datum, 3.0, 2.0, 3.6, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$ScatterCharts$Labels$Datum, 4.0, 1.0, 4.2, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$ScatterCharts$Labels$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 30, c5: 10, di: 0})
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$variation,
						F2(
							function (i, d) {
								return _List_fromArray(
									[
										$author$project$Chart$Attributes$size(d.jt * 30)
									]);
							}),
						A2(
							$author$project$Chart$scatter,
							function ($) {
								return $.a;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$opacity(0.2),
									$author$project$Chart$Attributes$borderWidth(1)
								])))
					]),
				$author$project$Examples$ScatterCharts$Labels$data),
				$author$project$Chart$eachDot(
				F2(
					function (p, dot) {
						return _List_fromArray(
							[
								A3(
								$author$project$Chart$label,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$moveDown(4),
										$author$project$Chart$Attributes$color(
										$author$project$Chart$Item$getColor(dot))
									]),
								_List_fromArray(
									[
										$elm$svg$Svg$text(
										$elm$core$String$fromFloat(
											$author$project$Chart$Item$getData(dot).jt))
									]),
								A2($author$project$Chart$Item$getCenter, p, dot))
							]);
					}))
			]));
};
var $author$project$Examples$ScatterCharts$Legends$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$ScatterCharts$Legends$data = _List_fromArray(
	[
		A7($author$project$Examples$ScatterCharts$Legends$Datum, 0.1, 2.0, 4.0, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$ScatterCharts$Legends$Datum, 0.2, 3.0, 4.2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$ScatterCharts$Legends$Datum, 0.8, 4.0, 4.6, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$ScatterCharts$Legends$Datum, 1.0, 2.0, 4.2, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$ScatterCharts$Legends$Datum, 1.2, 5.0, 3.5, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$ScatterCharts$Legends$Datum, 2.0, 2.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$ScatterCharts$Legends$Datum, 2.3, 1.0, 4.3, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$ScatterCharts$Legends$Datum, 2.8, 3.0, 2.9, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$ScatterCharts$Legends$Datum, 3.0, 2.0, 3.6, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$ScatterCharts$Legends$Datum, 4.0, 1.0, 4.2, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$ScatterCharts$Legends$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_Nil),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.gA;
						},
						_List_Nil)
					]),
				$author$project$Examples$ScatterCharts$Legends$data),
				A4(
				$author$project$Chart$legendsAt,
				function ($) {
					return $.J;
				},
				function ($) {
					return $.J;
				},
				_List_fromArray(
					[
						$author$project$Chart$Attributes$column,
						$author$project$Chart$Attributes$moveLeft(2),
						$author$project$Chart$Attributes$spacing(0),
						$author$project$Chart$Attributes$alignRight
					]),
				_List_fromArray(
					[
						$author$project$Chart$Attributes$spacing(5)
					]))
			]));
};
var $author$project$Examples$ScatterCharts$Opacity$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$ScatterCharts$Opacity$data = _List_fromArray(
	[
		A7($author$project$Examples$ScatterCharts$Opacity$Datum, 0.1, 2.0, 4.0, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$ScatterCharts$Opacity$Datum, 0.2, 3.0, 4.2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$ScatterCharts$Opacity$Datum, 0.8, 4.0, 4.6, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$ScatterCharts$Opacity$Datum, 1.0, 2.0, 4.2, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$ScatterCharts$Opacity$Datum, 1.2, 5.0, 3.5, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$ScatterCharts$Opacity$Datum, 2.0, 2.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$ScatterCharts$Opacity$Datum, 2.3, 1.0, 4.3, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$ScatterCharts$Opacity$Datum, 2.8, 3.0, 2.9, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$ScatterCharts$Opacity$Datum, 3.0, 2.0, 3.6, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$ScatterCharts$Opacity$Datum, 4.0, 1.0, 4.2, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$ScatterCharts$Opacity$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.1),
								$author$project$Chart$Attributes$borderWidth(1)
							])),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$opacity(0.1),
								$author$project$Chart$Attributes$borderWidth(1)
							]))
					]),
				$author$project$Examples$ScatterCharts$Opacity$data)
			]));
};
var $author$project$Examples$ScatterCharts$Shapes$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$ScatterCharts$Shapes$data = _List_fromArray(
	[
		A7($author$project$Examples$ScatterCharts$Shapes$Datum, 0.1, 2.0, 4.0, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$ScatterCharts$Shapes$Datum, 0.2, 3.0, 4.2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$ScatterCharts$Shapes$Datum, 0.8, 4.0, 4.6, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$ScatterCharts$Shapes$Datum, 1.0, 2.0, 4.2, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$ScatterCharts$Shapes$Datum, 1.2, 5.0, 3.5, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$ScatterCharts$Shapes$Datum, 2.0, 2.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$ScatterCharts$Shapes$Datum, 2.3, 1.0, 4.3, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$ScatterCharts$Shapes$Datum, 2.8, 3.0, 2.9, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$ScatterCharts$Shapes$Datum, 3.0, 2.0, 3.6, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$ScatterCharts$Shapes$Datum, 4.0, 1.0, 4.2, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Internal$Svg$Plus = 5;
var $author$project$Chart$Attributes$plus = function (config) {
	return _Utils_update(
		config,
		{
			aW: $elm$core$Maybe$Just(5)
		});
};
var $author$project$Internal$Svg$Triangle = 1;
var $author$project$Chart$Attributes$triangle = function (config) {
	return _Utils_update(
		config,
		{
			aW: $elm$core$Maybe$Just(1)
		});
};
var $author$project$Examples$ScatterCharts$Shapes$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$plus])),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$square])),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.jt;
						},
						_List_fromArray(
							[$author$project$Chart$Attributes$triangle]))
					]),
				$author$project$Examples$ScatterCharts$Shapes$data)
			]));
};
var $author$project$Examples$ScatterCharts$Sizes$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$ScatterCharts$Sizes$data = _List_fromArray(
	[
		A7($author$project$Examples$ScatterCharts$Sizes$Datum, 0.1, 2.0, 4.0, 4.6, 6.9, 7.3, 8.0),
		A7($author$project$Examples$ScatterCharts$Sizes$Datum, 0.2, 3.0, 4.2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$ScatterCharts$Sizes$Datum, 0.8, 4.0, 4.6, 5.5, 5.2, 7.2, 8.1),
		A7($author$project$Examples$ScatterCharts$Sizes$Datum, 1.0, 2.0, 4.2, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$ScatterCharts$Sizes$Datum, 1.2, 5.0, 3.5, 4.9, 5.9, 6.7, 8.2),
		A7($author$project$Examples$ScatterCharts$Sizes$Datum, 2.0, 2.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$ScatterCharts$Sizes$Datum, 2.3, 1.0, 4.3, 5.3, 5.1, 7.8, 7.1),
		A7($author$project$Examples$ScatterCharts$Sizes$Datum, 2.8, 3.0, 2.9, 5.4, 3.9, 7.6, 8.5),
		A7($author$project$Examples$ScatterCharts$Sizes$Datum, 3.0, 2.0, 3.6, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$ScatterCharts$Sizes$Datum, 4.0, 1.0, 4.2, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$ScatterCharts$Sizes$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$size(14)
							])),
						A2(
						$author$project$Chart$scatter,
						function ($) {
							return $.gA;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$size(3)
							]))
					]),
				$author$project$Examples$ScatterCharts$Sizes$data)
			]));
};
var $author$project$Examples$ScatterCharts$Tooltip$OnHover = $elm$core$Basics$identity;
var $author$project$Examples$ScatterCharts$Tooltip$Datum = F7(
	function (x, y, z, v, w, p, q) {
		return {fJ: p, fS: q, jr: v, jt: w, b: x, a: y, gA: z};
	});
var $author$project$Examples$ScatterCharts$Tooltip$data = _List_fromArray(
	[
		A7($author$project$Examples$ScatterCharts$Tooltip$Datum, 0.6, 2.0, 4.0, 4.6, 6.9, 7.3, 2.0),
		A7($author$project$Examples$ScatterCharts$Tooltip$Datum, 0.7, 3.0, 4.2, 5.2, 6.2, 7.0, 8.7),
		A7($author$project$Examples$ScatterCharts$Tooltip$Datum, 0.8, 4.0, 4.6, 5.5, 5.2, 7.2, 3.1),
		A7($author$project$Examples$ScatterCharts$Tooltip$Datum, 1.0, 2.0, 4.2, 5.3, 5.7, 6.2, 7.8),
		A7($author$project$Examples$ScatterCharts$Tooltip$Datum, 1.2, 5.0, 3.5, 4.9, 5.9, 6.7, 5.2),
		A7($author$project$Examples$ScatterCharts$Tooltip$Datum, 2.0, 2.0, 3.2, 4.8, 5.4, 7.2, 8.3),
		A7($author$project$Examples$ScatterCharts$Tooltip$Datum, 2.3, 1.0, 4.3, 5.3, 5.1, 7.8, 10.1),
		A7($author$project$Examples$ScatterCharts$Tooltip$Datum, 2.8, 3.0, 2.9, 5.4, 3.9, 7.6, 4.5),
		A7($author$project$Examples$ScatterCharts$Tooltip$Datum, 3.0, 2.0, 3.6, 5.8, 4.6, 6.5, 6.9),
		A7($author$project$Examples$ScatterCharts$Tooltip$Datum, 4.0, 1.0, 4.2, 4.5, 5.3, 6.3, 7.0)
	]);
var $author$project$Examples$ScatterCharts$Tooltip$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(300),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 30, c5: 15, di: 0}),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$dots)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[$author$project$Chart$Attributes$withGrid])),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$amongst,
						model.c$,
						function (d) {
							return _List_fromArray(
								[
									$author$project$Chart$Attributes$highlight(0.15)
								]);
						},
						A2(
							$author$project$Chart$variation,
							F2(
								function (i, d) {
									return _List_fromArray(
										[
											$author$project$Chart$Attributes$size(d.fS * 20)
										]);
								}),
							A2(
								$author$project$Chart$scatter,
								function ($) {
									return $.a;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$opacity(0.2),
										$author$project$Chart$Attributes$borderWidth(1)
									])))),
						A3(
						$author$project$Chart$amongst,
						model.c$,
						function (d) {
							return _List_fromArray(
								[
									$author$project$Chart$Attributes$highlight(0.15)
								]);
						},
						A2(
							$author$project$Chart$variation,
							F2(
								function (i, d) {
									return _List_fromArray(
										[
											$author$project$Chart$Attributes$size(d.fS * 20)
										]);
								}),
							A2(
								$author$project$Chart$scatter,
								function ($) {
									return $.gA;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$opacity(0.2),
										$author$project$Chart$Attributes$borderWidth(1)
									]))))
					]),
				$author$project$Examples$ScatterCharts$Tooltip$data),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, item) {
						return _List_fromArray(
							[
								A4($author$project$Chart$tooltip, item, _List_Nil, _List_Nil, _List_Nil)
							]);
					}))
			]));
};
var $author$project$Examples$view = F2(
	function (model, chosen) {
		switch (chosen) {
			case 0:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg0,
					$author$project$Examples$BarCharts$Gradient$view(model.bh));
			case 1:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg1,
					$author$project$Examples$BarCharts$VariableWidth$view(model.bi));
			case 2:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg2,
					$author$project$Examples$BarCharts$Title$view(model.bA));
			case 3:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg3,
					$author$project$Examples$BarCharts$TooltipStack$view(model.bL));
			case 4:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg4,
					$author$project$Examples$BarCharts$Tooltip$view(model.bW));
			case 5:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg5,
					$author$project$Examples$BarCharts$BarLabels$view(model.b5));
			case 6:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg6,
					$author$project$Examples$BarCharts$Pattern$view(model.cg));
			case 7:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg7,
					$author$project$Examples$BarCharts$Histogram$view(model.cr));
			case 8:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg8,
					$author$project$Examples$BarCharts$BinLabelsAdvanced$view(model.cC));
			case 9:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg9,
					$author$project$Examples$BarCharts$Spacing$view(model.cN));
			case 10:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg10,
					$author$project$Examples$BarCharts$Highlight$view(model.bj));
			case 11:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg11,
					$author$project$Examples$BarCharts$DataDependent$view(model.br));
			case 12:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg12,
					$author$project$Examples$BarCharts$Color$view(model.bs));
			case 13:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg13,
					$author$project$Examples$BarCharts$TooltipBin$view(model.bt));
			case 14:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg14,
					$author$project$Examples$BarCharts$Corners$view(model.bu));
			case 15:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg15,
					$author$project$Examples$BarCharts$Ungroup$view(model.bv));
			case 16:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg16,
					$author$project$Examples$BarCharts$BinLabels$view(model.bw));
			case 17:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg17,
					$author$project$Examples$BarCharts$Stacked$view(model.bx));
			case 18:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg18,
					$author$project$Examples$BarCharts$Margin$view(model.by));
			case 19:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg19,
					$author$project$Examples$BarCharts$Borders$view(model.bz));
			case 20:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg20,
					$author$project$Examples$BarCharts$Opacity$view(model.bB));
			case 21:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg21,
					$author$project$Examples$BarCharts$Legends$view(model.bC));
			case 22:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg22,
					$author$project$Examples$BarCharts$Basic$view(model.bD));
			case 23:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg23,
					$author$project$Examples$Frame$Lines$view(model.bE));
			case 24:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg24,
					$author$project$Examples$Frame$Position$view(model.bF));
			case 25:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg25,
					$author$project$Examples$Frame$Coordinates$view(model.bG));
			case 26:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg26,
					$author$project$Examples$Frame$GridFilter$view(model.bH));
			case 27:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg27,
					$author$project$Examples$Frame$Dimensions$view(model.bI));
			case 28:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg28,
					$author$project$Examples$Frame$CustomElements$view(model.bJ));
			case 29:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg29,
					$author$project$Examples$Frame$NoArrow$view(model.bK));
			case 30:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg30,
					$author$project$Examples$Frame$Background$view(model.bM));
			case 31:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg31,
					$author$project$Examples$Frame$Rect$view(model.bN));
			case 32:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg32,
					$author$project$Examples$Frame$Padding$view(model.bO));
			case 33:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg33,
					$author$project$Examples$Frame$Times$view(model.bP));
			case 34:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg34,
					$author$project$Examples$Frame$OnlyInts$view(model.bQ));
			case 35:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg35,
					$author$project$Examples$Frame$GridColor$view(model.bR));
			case 36:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg36,
					$author$project$Examples$Frame$Offset$view(model.bS));
			case 37:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg37,
					$author$project$Examples$Frame$Ellipsis$view(model.bT));
			case 38:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg38,
					$author$project$Examples$Frame$Color$view(model.bU));
			case 39:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg39,
					$author$project$Examples$Frame$Amount$view(model.bV));
			case 40:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg40,
					$author$project$Examples$Frame$Titles$view(model.bX));
			case 41:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg41,
					$author$project$Examples$Frame$CustomLabels$view(model.bY));
			case 42:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg42,
					$author$project$Examples$Frame$Margin$view(model.bZ));
			case 43:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg43,
					$author$project$Examples$Frame$LabelWithLine$view(model.b_));
			case 44:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg44,
					$author$project$Examples$Frame$DotGrid$view(model.b$));
			case 45:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg45,
					$author$project$Examples$Frame$CustomFormat$view(model.b0));
			case 46:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg46,
					$author$project$Examples$Frame$AxisLength$view(model.b1));
			case 47:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg47,
					$author$project$Examples$Frame$Arbitrary$view(model.b2));
			case 48:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg48,
					$author$project$Examples$Frame$Legends$view(model.b3));
			case 49:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg49,
					$author$project$Examples$Frame$Basic$view(model.b4));
			case 50:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg50,
					$author$project$Examples$Interactivity$ChangeContent$view(model.b6));
			case 51:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg51,
					$author$project$Examples$Interactivity$Direction$view(model.b7));
			case 52:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg52,
					$author$project$Examples$Interactivity$ChangeDot$view(model.b8));
			case 53:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg53,
					$author$project$Examples$Interactivity$Border$view(model.b9));
			case 54:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg54,
					$author$project$Examples$Interactivity$Zoom$view(model.ca));
			case 55:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg55,
					$author$project$Examples$Interactivity$BasicBin$view(model.cb));
			case 56:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg56,
					$author$project$Examples$Interactivity$BasicStack$view(model.cc));
			case 57:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg57,
					$author$project$Examples$Interactivity$Coordinates$view(model.cd));
			case 58:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg58,
					$author$project$Examples$Interactivity$ChangeName$view(model.ce));
			case 59:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg59,
					$author$project$Examples$Interactivity$NoArrow$view(model.cf));
			case 60:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg60,
					$author$project$Examples$Interactivity$FilterSearch$view(model.ch));
			case 61:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg61,
					$author$project$Examples$Interactivity$Background$view(model.ci));
			case 62:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg62,
					$author$project$Examples$Interactivity$BasicBar$view(model.cj));
			case 63:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg63,
					$author$project$Examples$Interactivity$BasicArea$view(model.ck));
			case 64:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg64,
					$author$project$Examples$Interactivity$ZoomAlt$view(model.cl));
			case 65:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg65,
					$author$project$Examples$Interactivity$TrickyTooltip$view(model.cm));
			case 66:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg66,
					$author$project$Examples$Interactivity$Multiple$view(model.cn));
			case 67:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg67,
					$author$project$Examples$Interactivity$BasicLine$view(model.co));
			case 68:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg68,
					$author$project$Examples$Interactivity$Offset$view(model.cp));
			case 69:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg69,
					$author$project$Examples$Interactivity$DoubleSearch$view(model.cq));
			case 70:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg70,
					$author$project$Examples$Interactivity$ChangeUnit$view(model.cs));
			case 71:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg71,
					$author$project$Examples$Interactivity$Focal$view(model.ct));
			case 72:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg72,
					$author$project$Examples$LineCharts$Area$view(model.cu));
			case 73:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg73,
					$author$project$Examples$LineCharts$Gradient$view(model.cv));
			case 74:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg74,
					$author$project$Examples$LineCharts$Width$view(model.cw));
			case 75:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg75,
					$author$project$Examples$LineCharts$TooltipStack$view(model.cx));
			case 76:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg76,
					$author$project$Examples$LineCharts$Tooltip$view(model.cy));
			case 77:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg77,
					$author$project$Examples$LineCharts$Montone$view(model.cz));
			case 78:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg78,
					$author$project$Examples$LineCharts$Pattern$view(model.cA));
			case 79:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg79,
					$author$project$Examples$LineCharts$Dots$view(model.cB));
			case 80:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg80,
					$author$project$Examples$LineCharts$Dashed$view(model.cD));
			case 81:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg81,
					$author$project$Examples$LineCharts$Color$view(model.cE));
			case 82:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg82,
					$author$project$Examples$LineCharts$Stepped$view(model.cF));
			case 83:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg83,
					$author$project$Examples$LineCharts$Stacked$view(model.cG));
			case 84:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg84,
					$author$project$Examples$LineCharts$Labels$view(model.cH));
			case 85:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg85,
					$author$project$Examples$LineCharts$Missing$view(model.cI));
			case 86:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg86,
					$author$project$Examples$LineCharts$Legends$view(model.cJ));
			case 87:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg87,
					$author$project$Examples$LineCharts$Basic$view(model.cK));
			case 88:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg88,
					$author$project$Examples$Frontpage$BasicBubble$view(model.cL));
			case 89:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg89,
					$author$project$Examples$Frontpage$BasicNavigation$view(model.cM));
			case 90:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg90,
					$author$project$Examples$Frontpage$BasicBar$view(model.cO));
			case 91:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg91,
					$author$project$Examples$Frontpage$BasicArea$view(model.cP));
			case 92:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg92,
					$author$project$Examples$Frontpage$Concise$view(model.cQ));
			case 93:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg93,
					$author$project$Examples$Frontpage$BasicLine$view(model.cR));
			case 94:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg94,
					$author$project$Examples$Frontpage$BasicScatter$view(model.cS));
			case 95:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg95,
					$author$project$Examples$Frontpage$Familiar$view(model.cT));
			case 96:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg96,
					$author$project$Examples$ScatterCharts$Colors$view(model.cU));
			case 97:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg97,
					$author$project$Examples$ScatterCharts$Shapes$view(model.cV));
			case 98:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg98,
					$author$project$Examples$ScatterCharts$Tooltip$view(model.cW));
			case 99:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg99,
					$author$project$Examples$ScatterCharts$Highlight$view(model.cX));
			case 100:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg100,
					$author$project$Examples$ScatterCharts$DataDependent$view(model.bk));
			case 101:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg101,
					$author$project$Examples$ScatterCharts$Borders$view(model.bl));
			case 102:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg102,
					$author$project$Examples$ScatterCharts$Labels$view(model.bm));
			case 103:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg103,
					$author$project$Examples$ScatterCharts$Opacity$view(model.bn));
			case 104:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg104,
					$author$project$Examples$ScatterCharts$Sizes$view(model.bo));
			case 105:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg105,
					$author$project$Examples$ScatterCharts$Legends$view(model.bp));
			default:
				return A2(
					$elm$html$Html$map,
					$author$project$Examples$ExampleMsg106,
					$author$project$Examples$ScatterCharts$Basic$view(model.bq));
		}
	});
var $author$project$Ui$Thumbnail$viewOne = F2(
	function (model, id) {
		var view = function (meta) {
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$spacing(5)
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$Font$size(16)
							]),
						$mdgriffith$elm_ui$Element$text(meta.dO)),
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$Font$size(12)
							]),
						$mdgriffith$elm_ui$Element$text(meta.ho)),
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
								A2($mdgriffith$elm_ui$Element$paddingXY, 0, 15)
							]),
						$mdgriffith$elm_ui$Element$html(
							A2($author$project$Examples$view, model, id)))
					]));
		};
		return A2(
			$mdgriffith$elm_ui$Element$link,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$centerX
				]),
			{
				dL: function () {
					var meta = $author$project$Examples$meta(id);
					return A2($elm$core$String$contains, 'Zoom', meta.dO) ? A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$htmlAttribute(
								A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')),
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
							]),
						view(meta)) : view(meta);
				}(),
				jq: $author$project$Ui$Thumbnail$toUrl(id)
			});
	});
var $author$project$Ui$Thumbnail$viewGroup = F2(
	function (model, group) {
		return A2(
			$elm$core$List$map,
			$author$project$Ui$Thumbnail$viewOne(model),
			A2(
				$elm$core$List$sortBy,
				A2(
					$elm$core$Basics$composeR,
					$author$project$Examples$meta,
					function ($) {
						return $.$8;
					}),
				group.dJ));
	});
var $author$project$Ui$Thumbnail$viewSelected = F2(
	function (model, selected) {
		return A2(
			$author$project$Ui$Thumbnail$viewGroup,
			model,
			A2(
				$elm$core$Maybe$withDefault,
				$author$project$Ui$Thumbnail$firstGroup,
				A2($elm$core$Dict$get, selected, $author$project$Ui$Thumbnail$dictGroups)));
	});
var $mdgriffith$elm_ui$Internal$Model$Padding = F5(
	function (a, b, c, d, e) {
		return {$: 0, a: a, b: b, c: c, d: d, e: e};
	});
var $mdgriffith$elm_ui$Internal$Model$Spaced = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Internal$Model$extractSpacingAndPadding = function (attrs) {
	return A3(
		$elm$core$List$foldr,
		F2(
			function (attr, _v0) {
				var pad = _v0.a;
				var spacing = _v0.b;
				return _Utils_Tuple2(
					function () {
						if (!pad.$) {
							var x = pad.a;
							return pad;
						} else {
							if ((attr.$ === 4) && (attr.b.$ === 7)) {
								var _v3 = attr.b;
								var name = _v3.a;
								var t = _v3.b;
								var r = _v3.c;
								var b = _v3.d;
								var l = _v3.e;
								return $elm$core$Maybe$Just(
									A5($mdgriffith$elm_ui$Internal$Model$Padding, name, t, r, b, l));
							} else {
								return $elm$core$Maybe$Nothing;
							}
						}
					}(),
					function () {
						if (!spacing.$) {
							var x = spacing.a;
							return spacing;
						} else {
							if ((attr.$ === 4) && (attr.b.$ === 5)) {
								var _v6 = attr.b;
								var name = _v6.a;
								var x = _v6.b;
								var y = _v6.c;
								return $elm$core$Maybe$Just(
									A3($mdgriffith$elm_ui$Internal$Model$Spaced, name, x, y));
							} else {
								return $elm$core$Maybe$Nothing;
							}
						}
					}());
			}),
		_Utils_Tuple2($elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing),
		attrs);
};
var $mdgriffith$elm_ui$Internal$Model$paddingNameFloat = F4(
	function (top, right, bottom, left) {
		return 'pad-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(top) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(right) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(bottom) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(left)))))));
	});
var $mdgriffith$elm_ui$Element$wrappedRow = F2(
	function (attrs, children) {
		var _v0 = $mdgriffith$elm_ui$Internal$Model$extractSpacingAndPadding(attrs);
		var padded = _v0.a;
		var spaced = _v0.b;
		if (spaced.$ === 1) {
			return A4(
				$mdgriffith$elm_ui$Internal$Model$element,
				$mdgriffith$elm_ui$Internal$Model$asRow,
				$mdgriffith$elm_ui$Internal$Model$div,
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.a9 + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.at + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.eO)))),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
							attrs))),
				$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
		} else {
			var _v2 = spaced.a;
			var spaceName = _v2.a;
			var x = _v2.b;
			var y = _v2.c;
			var newPadding = function () {
				if (!padded.$) {
					var _v5 = padded.a;
					var name = _v5.a;
					var t = _v5.b;
					var r = _v5.c;
					var b = _v5.d;
					var l = _v5.e;
					if ((_Utils_cmp(r, x / 2) > -1) && (_Utils_cmp(b, y / 2) > -1)) {
						var newTop = t - (y / 2);
						var newRight = r - (x / 2);
						var newLeft = l - (x / 2);
						var newBottom = b - (y / 2);
						return $elm$core$Maybe$Just(
							A2(
								$mdgriffith$elm_ui$Internal$Model$StyleClass,
								$mdgriffith$elm_ui$Internal$Flag$padding,
								A5(
									$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
									A4($mdgriffith$elm_ui$Internal$Model$paddingNameFloat, newTop, newRight, newBottom, newLeft),
									newTop,
									newRight,
									newBottom,
									newLeft)));
					} else {
						return $elm$core$Maybe$Nothing;
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}();
			if (!newPadding.$) {
				var pad = newPadding.a;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$element,
					$mdgriffith$elm_ui$Internal$Model$asRow,
					$mdgriffith$elm_ui$Internal$Model$div,
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.a9 + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.at + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.eO)))),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
							A2(
								$elm$core$List$cons,
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
								_Utils_ap(
									attrs,
									_List_fromArray(
										[pad]))))),
					$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
			} else {
				var halfY = -(y / 2);
				var halfX = -(x / 2);
				return A4(
					$mdgriffith$elm_ui$Internal$Model$element,
					$mdgriffith$elm_ui$Internal$Model$asEl,
					$mdgriffith$elm_ui$Internal$Model$div,
					attrs,
					$mdgriffith$elm_ui$Internal$Model$Unkeyed(
						_List_fromArray(
							[
								A4(
								$mdgriffith$elm_ui$Internal$Model$element,
								$mdgriffith$elm_ui$Internal$Model$asRow,
								$mdgriffith$elm_ui$Internal$Model$div,
								A2(
									$elm$core$List$cons,
									$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.a9 + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.at + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.eO)))),
									A2(
										$elm$core$List$cons,
										$mdgriffith$elm_ui$Internal$Model$Attr(
											A2(
												$elm$html$Html$Attributes$style,
												'margin',
												$elm$core$String$fromFloat(halfY) + ('px' + (' ' + ($elm$core$String$fromFloat(halfX) + 'px'))))),
										A2(
											$elm$core$List$cons,
											$mdgriffith$elm_ui$Internal$Model$Attr(
												A2(
													$elm$html$Html$Attributes$style,
													'width',
													'calc(100% + ' + ($elm$core$String$fromInt(x) + 'px)'))),
											A2(
												$elm$core$List$cons,
												$mdgriffith$elm_ui$Internal$Model$Attr(
													A2(
														$elm$html$Html$Attributes$style,
														'height',
														'calc(100% + ' + ($elm$core$String$fromInt(y) + 'px)'))),
												A2(
													$elm$core$List$cons,
													A2(
														$mdgriffith$elm_ui$Internal$Model$StyleClass,
														$mdgriffith$elm_ui$Internal$Flag$spacing,
														A3($mdgriffith$elm_ui$Internal$Model$SpacingStyle, spaceName, x, y)),
													_List_Nil))))),
								$mdgriffith$elm_ui$Internal$Model$Unkeyed(children))
							])));
			}
		}
	});
var $author$project$Page$Section$view = function (model) {
	return {
		dr: A2(
			$author$project$Ui$Layout$view,
			model.a$,
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$map,
					$author$project$Page$Section$MenuMsg,
					A2($author$project$Ui$Menu$small, model.a$, model.c4)),
					A2($author$project$Ui$Layout$heading, model.a$, 'Documentation'),
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							A2($mdgriffith$elm_ui$Element$paddingXY, 0, 20),
							$mdgriffith$elm_ui$Element$Font$size(14),
							$mdgriffith$elm_ui$Element$width(
							A2($mdgriffith$elm_ui$Element$maximum, 600, $mdgriffith$elm_ui$Element$fill))
						]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('This catalog is meant to document through example. For documentation of exact interface, see the '),
							A2(
							$mdgriffith$elm_ui$Element$link,
							_List_fromArray(
								[$mdgriffith$elm_ui$Element$Font$underline]),
							{
								dL: $mdgriffith$elm_ui$Element$text('official Elm documentation'),
								jq: 'https://package.elm-lang.org/packages/terezka/elm-charts/latest'
							}),
							$mdgriffith$elm_ui$Element$text('.')
						])),
					A2(
					$author$project$Ui$Tabs$view,
					model.a$,
					{
						gN: $author$project$Ui$Thumbnail$groups,
						iy: $author$project$Route$documentation + ('/' + model.dU),
						je: function ($) {
							return $.i5;
						},
						jf: A2(
							$elm$core$Basics$composeL,
							$author$project$Ui$Thumbnail$toUrlGroup,
							function ($) {
								return $.i5;
							})
					}),
					function () {
					var _v0 = model.dU;
					if (_v0 === 'bar-charts') {
						return A2(
							$mdgriffith$elm_ui$Element$column,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
									$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
									$mdgriffith$elm_ui$Element$spacing(25),
									A2($mdgriffith$elm_ui$Element$paddingXY, 0, 20)
								]),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Element$el,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$Font$size(24)
										]),
									$mdgriffith$elm_ui$Element$text('Terminology')),
									A2(
									$mdgriffith$elm_ui$Element$el,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
										]),
									$mdgriffith$elm_ui$Element$html($author$project$Charts$Terminology$view)),
									A2(
									$mdgriffith$elm_ui$Element$el,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$Font$size(24)
										]),
									$mdgriffith$elm_ui$Element$text('Examples'))
								]));
					} else {
						return $mdgriffith$elm_ui$Element$none;
					}
				}(),
					function () {
					var _v1 = $author$project$Ui$Layout$screen(model.a$);
					switch (_v1) {
						case 2:
							return A2(
								$mdgriffith$elm_ui$Element$map,
								$author$project$Page$Section$OnExampleMsg,
								A2(
									$mdgriffith$elm_ui$Element$wrappedRow,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$centerX,
											A2($mdgriffith$elm_ui$Element$spacingXY, 100, 70),
											$mdgriffith$elm_ui$Element$paddingEach(
											{a4: 100, c2: 0, c5: 0, di: 30})
										]),
									A2(
										$elm$core$List$map,
										$mdgriffith$elm_ui$Element$el(
											_List_fromArray(
												[
													$mdgriffith$elm_ui$Element$width(
													$mdgriffith$elm_ui$Element$px(265))
												])),
										A2($author$project$Ui$Thumbnail$viewSelected, model.cY, $author$project$Route$documentation + ('/' + model.dU)))));
						case 1:
							return A2(
								$mdgriffith$elm_ui$Element$map,
								$author$project$Page$Section$OnExampleMsg,
								A2(
									$mdgriffith$elm_ui$Element$wrappedRow,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$centerX,
											A2($mdgriffith$elm_ui$Element$spacingXY, 100, 70),
											$mdgriffith$elm_ui$Element$paddingEach(
											{a4: 100, c2: 0, c5: 0, di: 30})
										]),
									A2(
										$elm$core$List$map,
										$mdgriffith$elm_ui$Element$el(
											_List_fromArray(
												[
													$mdgriffith$elm_ui$Element$width(
													$mdgriffith$elm_ui$Element$px(265))
												])),
										A2($author$project$Ui$Thumbnail$viewSelected, model.cY, $author$project$Route$documentation + ('/' + model.dU)))));
						default:
							return A2(
								$mdgriffith$elm_ui$Element$map,
								$author$project$Page$Section$OnExampleMsg,
								A2(
									$mdgriffith$elm_ui$Element$column,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$centerX,
											A2($mdgriffith$elm_ui$Element$spacingXY, 100, 70),
											$mdgriffith$elm_ui$Element$paddingEach(
											{a4: 100, c2: 20, c5: 20, di: 30})
										]),
									A2($author$project$Ui$Thumbnail$viewSelected, model.cY, $author$project$Route$documentation + ('/' + model.dU))));
					}
				}()
				])),
		i5: 'elm-charts | Documentation'
	};
};
var $author$project$Page$Documentation$view = $author$project$Page$Section$view;
var $author$project$Page$Example$MenuMsg = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$Example$OnExampleMsg = function (a) {
	return {$: 2, a: a};
};
var $author$project$Page$Example$OnToggleCode = {$: 3};
var $author$project$Examples$first = 0;
var $author$project$Examples$BarCharts$BarLabels$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .q []\n        , C.bar .p []\n        ]\n        data\n\n    , C.barLabels [ CA.moveDown 15, CA.color "white" ]\n    ]\n  ';
var $author$project$Examples$BarCharts$Basic$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .z []\n        , C.bar .y []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$BinLabels$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.grid []\n\n    , C.yLabels [ CA.withGrid ]\n    , C.binLabels .label [ CA.moveDown 20 ]\n\n    , C.bars []\n        [ C.bar .q []\n        , C.bar .p []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$BinLabelsAdvanced$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.yLabels [ CA.withGrid ]\n\n    , C.eachBin <| \\p bin ->\n        let bar = CI.getMember bin\n            datum = CI.getOneData bin\n            isSpecial = datum.y + datum.z > 6\n\n            labelBasic =\n              String.fromFloat (CI.getX1 bar) ++ " - " ++\n              String.fromFloat (CI.getX2 bar)\n\n            label =\n              if isSpecial\n              then "→ " ++ labelBasic ++ " ←"\n              else labelBasic\n\n            color =\n              if isSpecial\n              then "blue"\n              else CA.labelGray\n        in\n        [ C.label\n            [ CA.color color, CA.moveDown 18 ]\n            [ S.text label ]\n            (CI.getBottom p bin)\n        ]\n\n    , C.bars\n        [ CA.x1 .x ]\n        [ C.bar .z []\n        , C.bar .y []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Borders$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        []\n        [ C.stacked\n            [ C.bar .z [ CA.borderWidth 2, CA.opacity 0.4 ]\n            , C.bar .y [ CA.borderWidth 2, CA.opacity 0.4 ]\n            ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Color$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        []\n        [ C.bar .y [ CA.color CA.blue ]\n        , C.bar .z [ CA.color CA.green ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Corners$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.roundTop 0.5 ]\n        [ C.bar .y []\n        , C.bar .z [ CA.roundBottom 0.5 ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$DataDependent$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        []\n        [ C.bar .y []\n            |> C.variation (\\_ d -> if d.x == 3 then [ CA.striped [] ] else [])\n        , C.bar .z []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Gradient$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        []\n        [ C.bar .y [ CA.gradient [ CA.purple, CA.pink ] ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Highlight$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Bar) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Bar))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bars)\n    , CE.onMouseLeave (OnHover [])\n    , CA.padding { top = 10, bottom = 0, left = 0, right = 0 }\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.roundTop 0.2\n        , CA.margin 0.1\n        , CA.spacing 0.15\n        ]\n        [ C.bar .z [ CA.striped [], CA.borderWidth 1 ]\n            |> C.amongst model.hovering (\\_ -> [ CA.highlight 0.25 ])\n        , C.bar .v []\n            |> C.amongst model.hovering (\\_ -> [ CA.highlight 0.25 ])\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$BarCharts$Histogram$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Time\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.times Time.utc ]\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.x1 .start\n        , CA.x2 .end\n        , CA.margin 0.02\n        ]\n        [ C.bar .y [] ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Legends$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars [ CA.roundTop 0.3 ]\n        [ C.bar .z []\n            |> C.named "Cats"\n        , C.bar .y [ CA.striped [] ]\n            |> C.named "Fish"\n        ]\n        data\n    , C.legendsAt .max .max\n        [ CA.column\n        , CA.moveLeft 15\n        , CA.alignRight\n        , CA.spacing 5\n        ]\n        []\n    ]\n  ';
var $author$project$Examples$BarCharts$Margin$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.margin 0.4 ] -- Number is percentage of bin width\n        [ C.bar .y []\n        , C.bar .z []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Opacity$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        []\n        [ C.bar .y [ CA.opacity 0.5 ]\n        , C.bar .z []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Pattern$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .y [ CA.striped [ CA.spacing 6 ] ]\n        , C.bar .z [ CA.dotted [ CA.rotate 45 ] ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Spacing$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.spacing 0 ] -- Number is percentage of bin width\n        [ C.bar .y []\n        , C.bar .z []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Stacked$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.stacked\n            [ C.bar .y []\n            , C.bar .v []\n            ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Title$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n\n    , C.labelAt .max .max\n        [ CA.moveLeft 8, CA.moveDown 5, CA.alignRight ]\n        [ S.text "Quarterly revenue" ]\n\n    , C.labelAt CA.middle .min\n        [ CA.moveDown 18 ]\n        [ S.text "Quarter" ]\n\n    , C.labelAt .min CA.middle\n        [ CA.moveLeft 25, CA.rotate 90 ]\n        [ S.text "Revenue" ]\n\n    , C.bars []\n        [ C.bar .z []\n        , C.bar .y []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Tooltip$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Bar) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Bar))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bars)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.stacked\n            [ C.bar .z []\n            , C.bar .y []\n            ]\n        , C.bar .v []\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$BarCharts$TooltipBin$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.Many Datum CI.Any) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.Many Datum CI.Any))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bins)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .z []\n        , C.bar .y []\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$BarCharts$TooltipStack$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.Many Datum CI.Any) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.Many Datum CI.Any))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.stacks)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.stacked\n            [ C.bar .z []\n            , C.bar .y []\n            ]\n        , C.bar .v [ CA.color CA.purple, CA.striped [] ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$BarCharts$Ungroup$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.ungroup ]\n        [ C.bar .w []\n        , C.bar .z [ CA.striped [] ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$VariableWidth$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Time\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.x1 .start\n        , CA.x2 .end\n        , CA.margin 0\n        ]\n        [ C.bar .y [ CA.borderWidth 0.3, CA.opacity 0.5 ] ]\n        data\n    ]\n\n\ntype alias Datum =\n  { start : Float\n  , end : Float\n  , y : Float\n  }\n\n\ndata : List Datum\ndata =\n  [ Datum 1 2 2\n  , Datum 2 3 3\n  , Datum 3 6 4\n  , Datum 6 7 6\n  ]\n\n\n  ';
var $author$project$Examples$Frame$Amount$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks [ CA.amount 4 ]\n    , C.xLabels [ CA.amount 4 ]\n    ]\n  ';
var $author$project$Examples$Frame$Arbitrary$largeCode = '\nimport Html as H\nimport Html.Attributes as HA\nimport Svg as S\nimport Svg.Attributes as SA\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    , C.svg <| \\p ->\n        S.g [] [ star 200 40, star 250 50 ]\n\n    , C.svgAt (CA.percent 80) (CA.percent 20) 0 0\n        [ S.circle [ SA.r "10", SA.fill "blue" ] [] ]\n\n    , C.htmlAt .min CA.middle 30 0\n        [ HA.style "border" "1px solid gray"\n        , HA.style "padding" "5px"\n        , HA.style "background" "white"\n        ]\n        [ H.text "My arbitrary HTML" ]\n    ]\n\n\nstar : Float -> Float -> S.Svg msg\nstar x y =\n  S.polygon\n    [ SA.points "100,10 40,198 190,78 10,78 160,198"\n    , SA.fill CA.red\n    , SA.transform <|\n        String.concat\n          [ "translate("\n          , String.fromFloat x\n          , " "\n          , String.fromFloat y\n          , ") scale(0.1 0.1)"\n          ]\n    ]\n    []\n\n  ';
var $author$project$Examples$Frame$AxisLength$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.range\n        [ CA.lowest 0 CA.orLower\n        , CA.highest 100 CA.orHigher\n        ]\n    , CA.domain\n        [ CA.lowest 0 CA.orLower\n        , CA.highest 100 CA.orHigher\n        ]\n    ]\n    [ C.series .x\n        [ C.interpolated .y [  ] [] ]\n        [ { x = 10, y = 20 }\n        , { x = 85, y = 80 }\n        ]\n    , C.xAxis [ CA.noArrow, CA.limits [ CA.likeData ] ]\n    , C.xLabels [ CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$Background$largeCode = '\nimport Html as H\nimport Html.Attributes as HA\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.margin { top = 20, bottom = 30, left = 30, right = 20 }\n    , CA.htmlAttrs\n        [ HA.style "background" "#fcf9e9" ]\n    ]\n    [ C.grid [ CA.color "white" ]\n    , C.xAxis []\n    , C.yAxis []\n    , C.series .x\n        [ C.interpolated .y [  ] [] ]\n        [ { x = 0, y = 0 }\n        , { x = 10, y = 10 }\n        ]\n    , C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$Basic$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    ]\n  ';
var $author$project$Examples$Frame$Color$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis [ CA.color CA.pink ]\n    , C.yTicks [ CA.color CA.pink ]\n    , C.yLabels [ CA.color CA.pink ]\n    ]\n  ';
var $author$project$Examples$Frame$Coordinates$largeCode = '\nimport Html as H\nimport Html.Attributes as HA\nimport Svg as S\nimport Svg.Attributes as SA\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Svg as CS\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n\n    , C.svg <| \\p ->\n        let point = { x = 6, y = 4 }\n            pointSvg = CS.fromCartesian p point\n            color = if CS.fromSvg p pointSvg == point then "purple" else "blue"\n        in\n        S.g []\n          [ S.circle\n              [ SA.r "10"\n              , SA.fill color\n              , SA.cx (String.fromFloat pointSvg.x)\n              , SA.cy (String.fromFloat pointSvg.y)\n              ]\n              []\n          ]\n    ]\n  ';
var $author$project$Examples$Frame$CustomElements$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\nimport Chart.Svg as CS\n\n\ntype alias Model =\n  { hovering : List (CI.One { x : Float, y : Float } CI.Any) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One { x : Float, y : Float } CI.Any))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.any)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xTicks []\n    , C.xLabels []\n    , C.yTicks []\n    , C.yLabels []\n    , C.list <|\n        let heatmapItem index value =\n              let x = toFloat (remainderBy 5 index) * 2\n                  y = toFloat (index // 5) * 2\n                  color =\n                    if value > 8  then "#0E4D64" else\n                    if value > 6  then "#137177" else\n                    if value > 4  then "#188977" else\n                    if value > 2  then "#1D9A6C" else\n                    if value > 0  then "#74C67A" else\n                    if value == 0 then "#99D492" else\n                    "#0A2F51"\n              in\n              C.custom\n                { name = "Temperature"\n                , color = color\n                , position = { x1 = x, x2 = x + 2, y1 = y, y2 = y + 2 }\n                , format = \\coord -> String.fromFloat coord.y ++ " C°"\n                , data = { x = toFloat index, y = value }\n                , render = \\p ->\n                    CS.rect p\n                      [ CA.x1 x\n                      , CA.x2 (x + 2)\n                      , CA.y1 y\n                      , CA.y2 (y + 2)\n                      , CA.color color\n                      , CA.border "white"\n                      ]\n                }\n        in\n        List.indexedMap heatmapItem\n          [ 2, 5, 8, 5, 3\n          , 5, 7, 9, 0, 3\n          , 2, 4, 6, 3, 5\n          , 7, 9, 0, 3, 2\n          , 4, 6, 7, 8, 10\n          ]\n\n    , C.each model.hovering <| \\_ item ->\n        [ C.tooltip item [ CA.center, CA.offset 0, CA.onTopOrBottom ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Frame$CustomFormat$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xLabels [ CA.format (\\x -> String.fromFloat x ++ " C°"), CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$CustomLabels$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Svg as CS\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.generate 12 CS.ints .x [] <| \\p num ->\n        let isEven = remainderBy 2 num == 0 in\n        [ C.xLabel\n            [ CA.x (toFloat num)\n            , CA.withGrid\n            , if isEven then CA.noChange else CA.y p.y.max\n            , if isEven then CA.noChange else CA.moveUp 28\n            , if isEven then CA.noChange else CA.fontSize 10\n            , if isEven then CA.noChange else CA.color CA.blue\n            ]\n            [ S.text (String.fromInt num ++ "°") ]\n        ]\n    ]\n  ';
var $author$project$Examples$Frame$Dimensions$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.range\n        [ CA.lowest 5 CA.orLower\n        , CA.highest 90 CA.orHigher\n        ]\n    , CA.domain\n        [ CA.lowest 5 CA.orLower\n        , CA.highest 100 CA.orHigher\n        ]\n    ]\n    [ C.series .x\n        [ C.interpolated .y [  ] [] ]\n        [ { x = 10, y = 20 }\n        , { x = 80, y = 80 }\n        ]\n    , C.xLabels [ CA.amount 10, CA.withGrid ]\n    , C.yLabels [ CA.amount 10, CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$DotGrid$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.grid [ CA.dotGrid ]\n    , C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    ]\n  ';
var $author$project$Examples$Frame$Ellipsis$largeCode = '\nimport Html as H\nimport Html.Attributes as HA\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.margin { top = 10, left = 45, bottom = 30, right = 15 }\n    ]\n    [ C.yAxis [ CA.noArrow ]\n    , C.yTicks []\n    , C.yLabels\n        [ CA.format (\\y -> String.fromFloat y ++ " yyyyyyy")\n        , CA.ellipsis 35 20 -- width: 35, height: 10\n        ]\n\n    , C.xAxis [ CA.noArrow ]\n    , C.xTicks []\n    , C.xLabels\n        [ CA.format (\\x -> String.fromFloat x ++ " xxxxxxx")\n        , CA.ellipsis 35 20\n        ]\n    ]\n  ';
var $author$project$Examples$Frame$GridColor$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.grid [ CA.color CA.blue ]\n    , C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$GridFilter$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.xTicks [ CA.noGrid ]\n    , C.yLabels []\n    , C.yTicks [ CA.noGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$LabelWithLine$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 25, bottom = 0, left = 10, right = 10 }\n    , CA.range [ CA.lowest 0 CA.exactly, CA.highest 10 CA.exactly ]\n    , CA.domain [ CA.lowest 0 CA.exactly, CA.highest 10 CA.exactly ]\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    , C.series .age [ C.scatter .toys [] ] data\n\n    , C.label\n        [ CA.moveRight 14, CA.moveUp 8, CA.alignLeft ]\n        [ S.text "The dot in question" ]\n        { x = 5, y = 6 }\n    , C.line\n        [ CA.break\n        , CA.x1 5, CA.y1 6\n        , CA.x2Svg 10, CA.y2Svg 13\n        , CA.color CA.purple\n        ]\n    ]\n\n\ntype alias Datum =\n  { age : Float\n  , toys : Float\n  }\n\ndata : List Datum\ndata =\n  [ Datum 5 6\n  ]\n\n\n  ';
var $author$project$Examples$Frame$Legends$largeCode = '\nimport Html as H\nimport Html.Attributes as HA\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.margin { top = 30, bottom = 0, left = 0, right = 0 }\n    ]\n    [ C.xAxis []\n    , C.yLabels [ CA.withGrid, CA.pinned .min ]\n    , C.xLabels []\n\n    -- BAR CHART\n    , C.bars\n        [ CA.roundTop 0.3 ]\n        [ C.named "B1" <| C.bar .z []\n        , C.named "B2" <| C.bar .y [ CA.striped [] ]\n        ]\n        data\n\n    -- LINE CHART\n    , C.series .x\n        [ C.named "A1" <|\n            C.interpolated .p\n              [  ]\n              [ CA.cross, CA.borderWidth 2, CA.border "white" ]\n        , C.named "A2" <|\n            C.interpolated .q\n              [  ]\n              [ CA.cross, CA.borderWidth 2, CA.border "white" ]\n        ]\n        data\n\n    -- LEGENDS\n    , C.legendsAt .min .max\n        [ CA.row\n        , CA.moveRight 10\n        , CA.moveUp 25\n        , CA.spacing 15\n        ]\n        [ CA.width 20 ]\n    ]\n  ';
var $author$project$Examples$Frame$Lines$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    , C.withPlane <| \\p ->\n        [ C.line\n            [ CA.x1 p.x.min\n            , CA.y1 5\n            , CA.x2 p.x.max\n            , CA.dashed [ 5, 5 ]\n            , CA.color CA.red\n            ]\n        , C.line\n            [ CA.x1 3\n            , CA.y1 p.y.min\n            , CA.y2 p.y.max\n            , CA.dashed [ 5, 5 ]\n            , CA.color CA.blue\n            ]\n        ]\n    ]\n  ';
var $author$project$Examples$Frame$Margin$largeCode = '\nimport Html as H\nimport Html.Attributes as HA\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.margin { top = 20, bottom = 30, left = 30, right = 20 }\n    , CA.htmlAttrs\n        [ HA.style "border" "1px solid darkgray" ]\n    ]\n    [ C.xAxis []\n    , C.yAxis []\n    , C.series .x\n        [ C.interpolated .y [  ] [] ]\n        [ { x = 0, y = 0 }\n        , { x = 10, y = 10 }\n        ]\n    , C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$NoArrow$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis [ CA.noArrow ]\n    , C.xTicks []\n    , C.xLabels []\n    ]\n  ';
var $author$project$Examples$Frame$Offset$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.moveRight 5, CA.moveUp 20, CA.alignLeft, CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$OnlyInts$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.range\n        [ CA.highest 3 CA.exactly\n        , CA.lowest 0 CA.exactly\n        ]\n    ]\n    [ C.xAxis []\n    , C.xTicks [ CA.ints ]\n    , C.xLabels [ CA.ints ]\n    ]\n  ';
var $author$project$Examples$Frame$Padding$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 20, bottom = 20, left = 20, right = 20 }\n    ]\n    [ C.xAxis []\n    , C.yAxis []\n    , C.series .x\n        [ C.interpolated .y [  ] [] ]\n        [ { x = 0, y = 0 }\n        , { x = 10, y = 10 }\n        ]\n    , C.xLabels [ CA.pinned .min, CA.withGrid ]\n    , C.yLabels [ CA.pinned .min, CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$Position$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.yAxis [ CA.pinned .max ]\n    , C.yTicks [ CA.pinned .max, CA.flip ]\n    , C.yLabels [ CA.pinned .max, CA.flip ]\n    ]\n  ';
var $author$project$Examples$Frame$Rect$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    , C.withPlane <| \\p ->\n        [ C.rect\n            [ CA.x1 3\n            , CA.y1 3\n            , CA.x2 7\n            , CA.y2 9\n            , CA.color "rgb(210, 210, 210)"\n            , CA.opacity 0.3\n            ]\n        ]\n    ]\n  ';
var $author$project$Examples$Frame$Times$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Time\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 10, bottom = 0, left = 0, right = 25 }\n    , CA.range\n        [ CA.lowest 1591974241000 CA.exactly\n        , CA.highest 1623510241000 CA.exactly\n        ]\n    ]\n    [ C.xAxis []\n    , C.xTicks [ CA.times Time.utc ]\n    , C.xLabels [ CA.times Time.utc ]\n    ]\n  ';
var $author$project$Examples$Frame$Titles$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 25, bottom = 0, left = 0, right = 10 }\n    , CA.range [ CA.lowest 0 CA.exactly ]\n    ]\n    [ C.xAxis []\n    , C.xTicks [ CA.ints ]\n    , C.xLabels [ CA.ints ]\n    , C.yAxis []\n    , C.yTicks [ CA.ints ]\n    , C.yLabels [ CA.ints ]\n    , C.series .age\n        [ C.scatter .toys [ CA.opacity 0, CA.borderWidth 1 ]\n        ]\n        data\n\n    , C.labelAt .min CA.middle [ CA.moveLeft 35, CA.rotate 90 ]\n        [ S.text "Fruits" ]\n    , C.labelAt CA.middle .min [ CA.moveDown 30 ]\n        [ S.text "Age" ]\n    , C.labelAt CA.middle .max [ CA.fontSize 14 ]\n        [ S.text "How many fruits do children eat? (2021)" ]\n    , C.labelAt CA.middle .max [ CA.moveDown 15 ]\n        [ S.text "Data from fruits.com" ]\n    ]\n\n\ntype alias Datum =\n  { age : Float\n  , toys : Float\n  }\n\ndata : List Datum\ndata =\n  [ Datum 0.5 4\n  , Datum 0.8 5\n  , Datum 1.2 6\n  , Datum 1.4 6\n  , Datum 1.6 4\n  , Datum 3 8\n  , Datum 3 9\n  , Datum 3.2 10\n  , Datum 3.8 7\n  , Datum 6 12\n  , Datum 6.2 8\n  , Datum 6 10\n  , Datum 6 9\n  , Datum 9.1 8\n  , Datum 9.2 13\n  , Datum 9.8 10\n  , Datum 12 7\n  , Datum 12.5 5\n  , Datum 12.5 2\n  ]\n\n\n  ';
var $author$project$Examples$Frontpage$BasicArea$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.stacked\n            [ C.interpolated .y [ CA.opacity 0.2 ] []\n            , C.interpolated .z [ CA.opacity 1, CA.dotted [] ] []\n            ]\n        ]\n        [ { x = 1, y = 1, z = 3 }\n        , { x = 5, y = 2, z = 1 }\n        , { x = 10, y = 2, z = 4 }\n        ]\n    ]\n  ';
var $author$project$Examples$Frontpage$BasicBar$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid, CA.ints ]\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.x1 .x ]\n        [ C.bar .z [ CA.striped [] ]\n        , C.bar .y []\n        ]\n        [ { x = 1, y = 3, z = 1 }\n        , { x = 2, y = 2, z = 3 }\n        , { x = 3, y = 4, z = 2 }\n        ]\n    ]\n  ';
var $author$project$Examples$Frontpage$BasicBubble$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 30, bottom = 5, left = 40, right = 40 }\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.opacity 0.3, CA.borderWidth 1 ]\n            |> C.variation (\\_ data -> [ CA.size data.size ])\n        , C.scatter .z [ CA.opacity 0.3, CA.borderWidth 1 ]\n            |> C.variation (\\_ data -> [ CA.size data.size ])\n        ]\n        [ { x = 1, y = 2, z = 3, size = 450 }\n        , { x = 2, y = 3, z = 5, size = 350 }\n        , { x = 3, y = 4, z = 2, size = 150 }\n        , { x = 4, y = 1, z = 3, size = 550 }\n        , { x = 5, y = 4, z = 1, size = 450 }\n        ]\n    ]\n  ';
var $author$project$Examples$Frontpage$BasicLine$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 10, bottom = 5, left = 10, right = 10 }\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.monotone ] [ CA.circle ]\n        , C.interpolated .z [ CA.monotone ] [ CA.square ]\n        ]\n        [ { x = 1, y = 2, z = 3 }\n        , { x = 5, y = 4, z = 1 }\n        , { x = 10, y = 2, z = 4 }\n        ]\n    ]\n  ';
var $author$project$Examples$Frontpage$BasicNavigation$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    ]\n  ';
var $author$project$Examples$Frontpage$BasicScatter$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 5, left = 10, right = 10 }\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.circle ]\n        , C.scatter .z [ CA.square ]\n        ]\n        [ { x = 1, y = 2, z = 3 }\n        , { x = 2, y = 3, z = 5 }\n        , { x = 3, y = 4, z = 2 }\n        , { x = 4, y = 1, z = 3 }\n        , { x = 5, y = 4, z = 1 }\n        ]\n    ]\n  ';
var $author$project$Examples$Frontpage$Concise$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Svg as CS\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.Many Datum CI.Any) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.Many Datum CI.Any))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 500\n    , CA.margin { top = 10, left = 40, right = 0, bottom = 25 }\n    , CE.onMouseMove OnHover (CE.getNearest CI.stacks)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.yLabels [ CA.withGrid, CA.format (\\y -> String.fromFloat y ++ "M")]\n\n    , C.bars\n        [ CA.roundTop 0.2\n        , CA.roundBottom 0.2\n        , CA.margin 0.2\n        , CA.spacing 0.05\n        , CA.noGrid\n        ]\n        [ C.stacked\n            [ C.bar .cats\n                [ CA.gradient [ mint1, mint2 ] ]\n                |> C.named "Cats"\n            , C.bar .dogs\n                [ CA.gradient [ blue1, blue2 ] ]\n                |> C.named "Dogs"\n            ]\n        , C.bar .people\n            [ CA.gradient [ purple1, purple2 ] ]\n                |> C.named "People"\n        ]\n        data\n\n    , C.labelAt (CA.percent 30) .max\n        [ CA.moveDown 3, CA.fontSize 15 ]\n        [ S.text "Populations in Scandinavia" ]\n\n    , C.labelAt (CA.percent 30) .max\n        [ CA.moveDown 20, CA.fontSize 12 ]\n        [ S.text "Note: Based on made up data." ]\n\n    , C.binLabels .country [ CA.moveDown 18 ]\n    , C.barLabels [ CA.moveDown 18, CA.color weakWhite ]\n    , C.legendsAt .max .max [ CA.alignRight, CA.column, CA.spacing 7 ] []\n\n    , let\n        toBrightLabel =\n          C.productLabel [ CA.moveDown 18, CA.color white ]\n      in\n      C.each model.hovering <| \\p stack ->\n        List.map toBrightLabel (CI.getMembers stack)\n\n    , C.eachBin <| \\p bin ->\n        let bar = CI.getMember bin\n            datum = CI.getOneData bin\n            yPos = (CI.getTop p bin).y\n            xMid = (CI.getCenter p bin).x\n        in\n        if datum.country == "Finland" then\n          [ C.line\n              [ CA.x1 (CI.getX1 bar)\n              , CA.x2 (CI.getX2 bar)\n              , CA.y1 yPos\n              , CA.moveUp 15\n              , CA.tickLength 5\n              ]\n          , C.label\n              [ CA.moveUp 22, CA.fontSize 10 ]\n              [ S.text "Most pets per person"]\n              { x = xMid, y = yPos }\n          ]\n        else\n          []\n    ]\n\nmint1 = "#54c8ddD0"\nmint2 = "#54c8dd90"\nblue1 = "#0f9ff0D0"\nblue2 = "#0f9ff090"\npurple1 = "#653bf4B0"\npurple2 = "#653bf470"\nweakWhite = "rgba(255, 255, 255, 0.7)"\nwhite = "white"\n\n  ';
var $author$project$Examples$Frontpage$Familiar$largeCode = '\nimport Html exposing (Html)\nimport Chart exposing (..)\nimport Chart.Attributes as CA exposing (..)\nimport Time exposing (utc)\n\n\nviewChart : Html Msg\nviewChart =\n  chart\n    [ height 350\n    , width 570\n    , margin { top = 10, bottom = 30, left = 30, right = 10 }\n    ]\n    [ xLabels [ CA.times utc, amount 12 ]\n    , yLabels [ withGrid, amount 6 ]\n    , xAxis []\n    , yAxis []\n    , series .x\n        [ interpolated .y [ width 2 ] []\n        , interpolated .z [ width 2 ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$Interactivity$Background$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Bar) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Bar))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bars)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .y [ CA.opacity 0.3, CA.borderWidth 1 ]\n        , C.bar .z [ CA.opacity 0.3, CA.borderWidth 1, CA.striped [] ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [ CA.background "#fcf9e9" ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$BasicArea$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.Many Datum CI.Any) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.Many Datum CI.Any))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.stacks)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.stacked\n          [ C.interpolated .y\n              [ CA.monotone, CA.opacity 0.2 ]\n              [ CA.circle, CA.color "white", CA.borderWidth 1 ]\n          , C.interpolated .z\n              [ CA.monotone, CA.opacity 0, CA.color CA.purple ]\n              [ CA.circle, CA.color "white", CA.borderWidth 1 ]\n          ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$BasicBar$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Bar) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Bar))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bars)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.stacked\n            [ C.bar .z []\n            , C.bar .y []\n            ]\n        , C.bar .v [ CA.dotted [] ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$BasicBin$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.Many Datum CI.Any) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.Many Datum CI.Any))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bins)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .z []\n        , C.bar .y []\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$BasicLine$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Dot) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Dot))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [  ] [ CA.circle, CA.size 3 ]\n        , C.interpolated .z [  ] [ CA.circle, CA.size 3 ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$BasicStack$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.Many Datum CI.Any) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.Many Datum CI.Any))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.stacks)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.stacked\n            [ C.bar .z []\n            , C.bar .y []\n            ]\n        , C.bar .v [ CA.color CA.purple, CA.striped [] ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$Border$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Bar) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Bar))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bars)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .y [ CA.opacity 0.3, CA.borderWidth 1 ]\n        , C.bar .z [ CA.opacity 0.3, CA.borderWidth 1 ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [ CA.border CA.red ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$ChangeContent$largeCode = '\nimport Html as H\nimport Html.Attributes as HA\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Dot) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Dot))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .z [ CA.opacity 0.5, CA.borderWidth 1 ]\n        , C.scatter .y [ CA.opacity 0.5, CA.borderWidth 1 ]\n        , C.scatter .w [ CA.opacity 0.5, CA.borderWidth 1 ]\n        , C.scatter .p [ CA.opacity 0.5, CA.borderWidth 1 ]\n        ]\n        data\n    , C.each model.hovering <| \\p dot ->\n        let color = CI.getColor dot\n            x = CI.getX dot\n            y = CI.getY dot\n        in\n        [ C.tooltip dot []\n            [ HA.style "color" color ]\n            [ H.text "x: "\n            , H.text (String.fromFloat x)\n            , H.text " y: "\n            , H.text (String.fromFloat y)\n            ]\n        ]\n    ]\n  ';
var $author$project$Examples$Interactivity$ChangeDot$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Dot) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Dot))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.circle, CA.size 8 ]\n            |> C.amongst model.hovering (\\_ ->\n                [ CA.opacity 0, CA.borderWidth 2 ]\n              )\n        , C.scatter .z [ CA.circle, CA.size 8 ]\n            |> C.amongst model.hovering (\\_ ->\n                [ CA.opacity 0, CA.borderWidth 2 ]\n              )\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$ChangeName$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.Many Datum CI.Any) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.Many Datum CI.Any))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bins)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .z []\n            |> C.named "Cats"\n        , C.bar .y [ CA.striped [] ]\n            |> C.named "Fish"\n        , C.bar .v [ CA.dotted [] ]\n            |> C.named "Ants"\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$ChangeUnit$largeCode = '\nimport Html as H\nimport Html.Attributes as HA\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.Many Datum CI.Any) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.Many Datum CI.Any))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.stacks)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.stacked\n            [ C.bar .y [ CA.opacity 0.5, CA.borderWidth 1 ]\n                |> C.format (\\v -> String.fromFloat v ++ " m/s")\n            , C.bar .z [ CA.opacity 0.5, CA.borderWidth 1 ]\n                |> C.format (\\v -> String.fromFloat v ++ " m/s")\n            ]\n        ]\n        data\n    , C.each model.hovering <| \\p dot ->\n        [ C.tooltip dot [ CA.onLeftOrRight ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$Coordinates$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Svg as CS\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : Maybe CE.Point }\n\n\ninit : Model\ninit =\n  { hovering = Nothing }\n\n\ntype Msg\n  = OnHover (Maybe CE.Point)\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove (OnHover << Just) CE.getCoords\n    , CE.onMouseLeave (OnHover Nothing)\n    , CA.domain [ CA.lowest 0 CA.exactly, CA.highest 10 CA.exactly ]\n    , CA.range [ CA.lowest 0 CA.exactly, CA.highest 10 CA.exactly ]\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n\n    , case model.hovering of\n        Just coords ->\n          C.series .x\n            [ C.scatter .y\n                [ CA.cross\n                , CA.borderWidth 2\n                , CA.border "white"\n                , CA.size 12\n                ]\n            ]\n            [ coords ]\n\n        Nothing ->\n          C.none\n\n    , case model.hovering of\n        Just coords ->\n          C.labelAt CA.middle .max []\n            [ S.text ("x: " ++ String.fromFloat coords.x)\n            , S.text (" y: " ++ String.fromFloat coords.y)\n            ]\n\n        Nothing ->\n          C.none\n    ]\n  ';
var $author$project$Examples$Interactivity$Direction$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Dot) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Dot))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y []\n        , C.scatter .z []\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [ CA.onTopOrBottom ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$DoubleSearch$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hoveringDots : List (CI.One Datum CI.Dot)\n  , hoveringBars : List (CI.One Datum CI.Bar)\n  }\n\n\ninit : Model\ninit =\n  { hoveringDots = []\n  , hoveringBars = []\n  }\n\n\ntype Msg\n  = OnHover\n      (List (CI.One Datum CI.Dot))\n      (List (CI.One Datum CI.Bar))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hoveringDots hoveringBars ->\n      { model\n      | hoveringDots = hoveringDots\n      , hoveringBars = hoveringBars\n      }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.on "mousemove" <|\n        CE.map2 OnHover\n          (CE.getNearest CI.dots)\n          (CE.getNearest CI.bars)\n    , CE.onMouseLeave\n        (OnHover [] [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n\n    , C.series .x\n        [ C.stacked\n          [ C.interpolated .p [] [ CA.circle ]\n          , C.interpolated .q [] [ CA.circle ]\n          ]\n        ]\n        data\n\n    , C.bars\n        [ CA.x1 .x1\n        , CA.x2 .x2\n        ]\n        [ C.bar .z [ CA.color CA.purple, CA.striped [] ] ]\n        data\n\n    , C.each model.hoveringDots <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n\n    , C.each model.hoveringBars <| \\p item ->\n        [ C.label\n            [ CA.color CA.purple\n            , CA.moveUp 8\n            , CA.fontSize 14\n            ]\n            [ S.text (String.fromFloat (CI.getY item)) ]\n            (CI.getTop p item)\n        ]\n    ]\n  ';
var $author$project$Examples$Interactivity$FilterSearch$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.Many Datum CI.Dot) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.Many Datum CI.Dot))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 10, right = 10 }\n    , CI.dots\n        |> CI.andThen CI.stacks\n        |> CE.getNearest\n        |> CE.onMouseMove OnHover\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid, CA.pinned .min ]\n    , C.series .x\n        [ C.stacked\n          [ C.interpolated .p [  ] [ CA.circle ]\n          , C.interpolated .q [  ] [ CA.circle ]\n          ]\n        ]\n        data\n    , C.bars [ CA.x1 .x1, CA.x2 .x2 ]\n        [ C.bar .z [ CA.color CA.purple ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$Focal$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Bar) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Bar))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bars)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .y [ CA.opacity 0.6, CA.borderWidth 1, CA.color CA.green ]\n        , C.bar .z [ CA.opacity 0.6, CA.borderWidth 1, CA.color CA.blue ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [ CA.onLeftOrRight, CA.top ] [] []\n        ]\n    ]\n  ';
var $author$project$Examples$Interactivity$Multiple$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Any) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Any))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.any)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n\n    , C.bars\n        [ CA.x1 .x1\n        , CA.x2 .x2\n        ]\n        [ C.bar .z [ CA.opacity 0.3, CA.borderWidth 1 ]\n        ]\n        data\n\n    , C.series .x\n        [ C.interpolated .p [] []\n        , C.interpolated .q [] []\n        ]\n        data\n\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$NoArrow$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Dot) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Dot))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.color "white", CA.size 20, CA.borderWidth 2 ]\n        , C.scatter .z [ CA.color "white", CA.size 20, CA.borderWidth 2 ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [ CA.noArrow ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$Offset$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Dot) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Dot))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.size 60, CA.opacity 0.3, CA.borderWidth 1 ]\n        , C.scatter .z [ CA.size 50, CA.opacity 0.3, CA.borderWidth 1 ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [ CA.offset 0 ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$TrickyTooltip$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.Many Datum CI.Bar) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.Many Datum CI.Bar))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 10, right = 10 }\n    , CI.bars\n        |> CI.andThen CI.bins\n        |> CE.getNearest\n        |> CE.onMouseMove OnHover\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.yLabels [ CA.withGrid, CA.pinned .min ]\n    , C.xLabels []\n    , C.bars\n        []\n        [ C.bar .w []\n        , C.stacked\n            [ C.bar .p []\n            , C.bar .q []\n            ]\n        ]\n        data\n    , C.each model.hovering <| \\p bin ->\n        let stacks = CI.apply CI.stacks (CI.getMembers bin)\n            toTooltip stack = C.tooltip stack [ CA.onLeftOrRight ] [] []\n        in\n        List.map toTooltip stacks\n    ]\n  ';
var $author$project$Examples$Interactivity$Zoom$largeCode = '\nimport Html as H\nimport Html.Attributes as HA\nimport Html.Events as HE\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\nimport Data.Iris\n\n\ntype Model\n  = NoZoom\n  | Zooming CE.Point CE.Point\n  | ReZooming CE.Point CE.Point CE.Point CE.Point\n  | Zoomed CE.Point CE.Point\n\n\ngetNewSelection : Model -> Maybe ( CE.Point, CE.Point )\ngetNewSelection model =\n  case model of\n    NoZoom -> Nothing\n    Zooming start end -> Just ( start, end )\n    ReZooming _ _ start end -> Just ( start, end )\n    Zoomed _ _ -> Nothing\n\n\ngetCurrentWindow : Model -> Maybe ( CE.Point, CE.Point )\ngetCurrentWindow model =\n  case model of\n    NoZoom -> Nothing\n    Zooming _ _ -> Nothing\n    ReZooming start end _ _ -> Just ( start, end )\n    Zoomed start end -> Just ( start, end )\n\n\n\ninit : Model\ninit =\n  NoZoom\n\n\ntype Msg\n  = OnDown CE.Point\n  | OnMove CE.Point\n  | OnUp CE.Point\n  | OnReset\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnDown point ->\n      case model of\n        NoZoom ->\n          Zooming point point\n\n        Zoomed start end ->\n          ReZooming start end point point\n\n        _ -> model\n\n    OnMove point ->\n      case model of\n        Zooming start _ ->\n          Zooming start point\n\n        ReZooming startOld endOld start _ ->\n          ReZooming startOld endOld start point\n\n        _ ->\n          model\n\n    OnUp point ->\n      case model of\n        Zooming start _ ->\n          Zoomed\n            { x = min start.x point.x, y = min start.y point.y }\n            { x = max start.x point.x, y = max start.y point.y }\n\n        ReZooming _ _ start _ ->\n          Zoomed\n            { x = min start.x point.x, y = min start.y point.y }\n            { x = max start.x point.x, y = max start.y point.y }\n\n        _ ->\n          model\n\n    OnReset ->\n      NoZoom\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.htmlAttrs [ HA.style "cursor" "crosshair" ]\n\n    , CE.onMouseDown OnDown CE.getCoords\n    , CE.onMouseMove OnMove CE.getCoords\n    , CE.onMouseUp OnUp CE.getCoords\n\n    , case getCurrentWindow model of\n        Just ( start, end ) ->\n          CA.range\n            [ CA.lowest start.x CA.exactly\n            , CA.highest end.x CA.exactly\n            ]\n\n        Nothing ->\n          CA.range []\n\n    , case getCurrentWindow model of\n        Just ( start, end ) ->\n          CA.domain\n            [ CA.lowest start.y CA.exactly\n            , CA.highest end.y CA.exactly\n            ]\n\n        Nothing ->\n          CA.range []\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n\n    , C.series .sepalWidth\n        [ C.scatterMaybe (Data.Iris.only Data.Iris.Setosa .petalWidth)\n            [ CA.size 3, CA.color "white", CA.borderWidth 1, CA.circle ]\n        , C.scatterMaybe (Data.Iris.only Data.Iris.Versicolor .petalWidth)\n            [ CA.size 3, CA.color "white", CA.borderWidth 1, CA.square ]\n        , C.scatterMaybe (Data.Iris.only Data.Iris.Virginica .petalWidth)\n            [ CA.size 3, CA.color "white", CA.borderWidth 1, CA.diamond ]\n        ]\n        Data.Iris.data\n\n    , case getNewSelection model of\n        Just ( start, end ) ->\n          C.rect\n            [ CA.x1 start.x\n            , CA.x2 end.x\n            , CA.y1 start.y\n            , CA.y2 end.y\n            ]\n\n        Nothing ->\n          C.none\n\n    , case getCurrentWindow model of\n        Just ( start, end ) ->\n          C.htmlAt .max .max -10 -10\n            [ HA.style "transform" "translateX(-100%)"\n            ]\n            [ H.button\n                [ HE.onClick OnReset\n                , HA.style "border" "1px solid black"\n                , HA.style "border-radius" "5px"\n                , HA.style "padding" "2px 10px"\n                , HA.style "background" "white"\n                , HA.style "font-size" "14px"\n                ]\n                [ H.text "Reset" ]\n            ]\n\n        Nothing ->\n          C.none\n    ]\n  ';
var $author$project$Examples$Interactivity$ZoomAlt$largeCode = '\nimport Html as H exposing (Html)\nimport Html.Attributes as HA\nimport Html.Events as HE\nimport Svg as S\nimport Svg.Attributes as SA\n\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\nimport Chart.Svg as CS\n\n\n\ntype alias Model =\n  { center : CS.Point\n  , dragging : Dragging\n  , percentage : Float\n  }\n\n\ntype Dragging\n  = CouldStillBeClick CS.Point\n  | ForSureDragging CS.Point\n  | None\n\n\ninit : Model\ninit =\n  { center = { x = 0, y = 0 }\n  , dragging = None\n  , percentage = 100\n  }\n\n\ntype Msg\n  = OnMouseMove CS.Point\n  | OnMouseDown CS.Point\n  | OnMouseUp CS.Point CS.Point\n  | OnMouseLeave\n  | OnZoomIn\n  | OnZoomOut\n  | OnZoomReset\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnMouseDown offset ->\n      { model | dragging = CouldStillBeClick offset }\n\n    OnMouseMove offset ->\n      case model.dragging of\n        CouldStillBeClick prevOffset ->\n          if prevOffset == offset then\n            model\n          else\n            { model | center = updateCenter model.center prevOffset offset\n            , dragging = ForSureDragging offset\n            }\n\n        ForSureDragging prevOffset ->\n          { model | center = updateCenter model.center prevOffset offset\n          , dragging = ForSureDragging offset\n          }\n\n        None ->\n          model\n\n    OnMouseUp offset coord ->\n      case model.dragging of\n        CouldStillBeClick prevOffset ->\n          { model | center = coord, dragging = None }\n\n        ForSureDragging prevOffset ->\n          { model | center = updateCenter model.center prevOffset offset\n          , dragging = None\n          }\n\n        None ->\n          model\n\n    OnMouseLeave ->\n      { model | dragging = None }\n\n    OnZoomIn ->\n      { model | percentage = model.percentage + 20 }\n\n    OnZoomOut ->\n      { model | percentage = max 1 (model.percentage - 20) }\n\n    OnZoomReset ->\n      { model | percentage = 100, center = { x = 0, y = 0 } }\n\n\nupdateCenter : CS.Point -> CS.Point -> CS.Point -> CS.Point\nupdateCenter center prevOffset offset =\n  { x = center.x + (prevOffset.x - offset.x)\n  , y = center.y + (prevOffset.y - offset.y)\n  }\n\n\nview : Model -> Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.range [ CA.zoom model.percentage, CA.centerAt model.center.x ]\n    , CA.domain [ CA.zoom model.percentage, CA.centerAt model.center.y ]\n\n    , CE.onMouseDown OnMouseDown CE.getOffset\n    , CE.onMouseMove OnMouseMove CE.getOffset\n    , CE.on "mouseup" (CE.map2 OnMouseUp CE.getOffset CE.getCoords)\n    , CE.onMouseLeave OnMouseLeave\n\n    , CA.htmlAttrs\n        [ HA.style "user-select" "none"\n        , HA.style "cursor" <|\n            case model.dragging of\n              CouldStillBeClick _ -> "grabbing"\n              ForSureDragging _ -> "grabbing"\n              None -> "grab"\n        ]\n    ]\n    [ C.xLabels [ CA.withGrid, CA.amount 10, CA.ints, CA.fontSize 9 ]\n    , C.yLabels [ CA.withGrid, CA.amount 10, CA.ints, CA.fontSize 9 ]\n    , C.xTicks [ CA.amount 10, CA.ints ]\n    , C.yTicks [ CA.amount 10, CA.ints ]\n\n    , C.series .x\n        [ C.scatter .y [ CA.opacity 0.2, CA.borderWidth 1 ]\n            |> C.variation (\\_ d -> [ CA.size (d.s * model.percentage / 100), CA.hideOverflow ])\n        ]\n        [ { x = -100, y = -100, s = 40 }\n        , { x = -80, y = -30, s = 30 }\n        , { x = -60, y = 80, s = 60 }\n        , { x = -50, y = 50, s = 70 }\n        , { x = 20, y = 80, s = 40 }\n        , { x = 30, y = -20, s = 60 }\n        , { x = 40, y = 50, s = 80 }\n        , { x = 80, y = 20, s = 50 }\n        , { x = 100, y = 100, s = 40 }\n        ]\n\n    , C.withPlane <| \\p ->\n        [ C.line [ CA.color CA.darkGray, CA.dashed [ 6, 6 ], CA.y1 (CA.middle p.y) ]\n        , C.line [ CA.color CA.darkGray, CA.dashed [ 6, 6 ], CA.x1 (CA.middle p.x) ]\n        ]\n\n    , C.htmlAt .max .max 0 0\n        [ HA.style "transform" "translateX(-100%)" ]\n        [ H.span\n            [ HA.style "margin-right" "5px" ]\n            [ H.text (String.fromFloat model.percentage ++ "%") ]\n        , H.button\n            [ HE.onClick OnZoomIn\n            , HA.style "margin-right" "5px"\n            ]\n            [ H.text "+" ]\n        , H.button\n            [ HE.onClick OnZoomOut\n            , HA.style "margin-right" "5px"\n            ]\n            [ H.text "-" ]\n        , H.button\n            [ HE.onClick OnZoomReset ]\n            [ H.text "⨯" ]\n        ]\n    ]\n  ';
var $author$project$Examples$LineCharts$Area$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.opacity 0.2 ] []\n        , C.interpolated .z [ CA.opacity 0.2 ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Basic$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [  ] []\n        , C.interpolated .z [  ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Color$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.color CA.red ] []\n        , C.interpolated .z [ CA.color CA.orange ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Dashed$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.monotone, CA.dashed [ 1, 2 ] ] []\n        , C.interpolated .z [ CA.monotone, CA.dashed [ 10, 5 ] ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Dots$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [  ] [ CA.circle ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Gradient$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y\n            [ CA.opacity 0.6\n            , CA.gradient []\n            ]\n            []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Labels$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 15, right = 15 }\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.monotone ] [ CA.circle, CA.size 40 ]\n        ]\n        data\n\n    , C.dotLabels [ CA.moveDown 4, CA.color "white" ]\n    ]\n  ';
var $author$project$Examples$LineCharts$Legends$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [  ] [ CA.cross, CA.borderWidth 2, CA.border "white" ]\n            |> C.named "Cats"\n        , C.interpolated .z [  ] [ CA.cross, CA.borderWidth 2, CA.border "white" ]\n            |> C.named "Fish"\n        ]\n        data\n    , C.legendsAt .min .max\n        [ CA.column\n        , CA.moveRight 15\n        , CA.spacing 5\n        ]\n        [ CA.width 20 ]\n    ]\n  ';
var $author$project$Examples$LineCharts$Missing$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolatedMaybe .y [ CA.stepped ] []\n        ]\n        data\n    ]\n\n\ntype alias Datum =\n  { x : Float\n  , y : Maybe Float\n  , z : Maybe Float\n  }\n\ndata : List Datum\ndata =\n  [ Datum 1  (Just 2) (Just 1)\n  , Datum 2  (Just 3) (Just 2)\n  , Datum 3  (Just 4) (Just 3)\n  , Datum 4  Nothing (Just 4)\n  , Datum 5  (Just 2) (Just 3)\n  , Datum 6  (Just 4) (Just 1)\n  , Datum 7  (Just 5) (Just 2)\n  , Datum 8  (Just 6) Nothing\n  , Datum 9  (Just 5) (Just 4)\n  , Datum 10 (Just 4) (Just 3)\n  ]\n\n\n  ';
var $author$project$Examples$LineCharts$Montone$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.monotone ] []\n        , C.interpolated .z [ CA.monotone ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Pattern$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.stacked\n          [ C.interpolated .y [ CA.striped [ CA.width 3, CA.spacing 4, CA.rotate 90 ] ] []\n          , C.interpolated .z [ CA.dotted [ CA.width 3, CA.spacing 4 ] ] []\n          ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Stacked$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.stacked\n          [ C.interpolated .y [] []\n          , C.interpolated .z [] []\n          ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Stepped$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.stepped ] []\n        , C.interpolated .z [ CA.stepped ] []\n        ]\n        data\n    ]\n\n\ntype alias Datum =\n  { x : Float\n  , y : Float\n  , z : Float\n  }\n\ndata : List Datum\ndata =\n  [ Datum 1  2 1\n  , Datum 2  3 2\n  , Datum 3  4 3\n  , Datum 4  3 4\n  , Datum 5  2 3\n  , Datum 6  4 1\n  , Datum 7  5 2\n  , Datum 8  6 3\n  , Datum 9  5 4\n  , Datum 10 4 3\n  ]\n\n\n  ';
var $author$project$Examples$LineCharts$Tooltip$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Dot) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Dot))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [  ] [ CA.circle, CA.size 3 ]\n        , C.interpolated .z [  ] [ CA.circle, CA.size 3 ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$LineCharts$TooltipStack$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.Many Datum CI.Any) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.Many Datum CI.Any))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.stacks)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.stacked\n          [ C.interpolated .y\n              [ CA.monotone, CA.gradient [] ]\n              [ CA.circle, CA.color "white", CA.borderWidth 1 ]\n          , C.interpolated .z\n              [ CA.monotone, CA.gradient [] ]\n              [ CA.circle, CA.color "white", CA.borderWidth 1 ]\n          ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$LineCharts$Width$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.width 4 ] []\n        , C.interpolated .z [ CA.width 3 ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Basic$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y []\n        , C.scatter .z []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Borders$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y\n            [ CA.borderWidth 3\n            , CA.border CA.purple\n            , CA.size 18\n            , CA.opacity 0\n            ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Colors$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.color CA.red ]\n        , C.scatter .z [ CA.color CA.orange ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$DataDependent$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 10, right = 10 }\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .z [ CA.opacity 0.5, CA.borderWidth 1 ]\n            |> C.variation (\\i d -> [ CA.size (d.x * 20 + 2) ])\n        , C.scatter .y []\n            |> C.variation (\\i d -> [ CA.highlight (if d.x == 3 then 0.5 else 0) ])\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Highlight$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 15, right = 15 }\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y []\n        , C.scatter .z [ CA.highlight 0.4 ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Labels$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 30, right = 10 }\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.opacity 0.2, CA.borderWidth 1 ]\n            |> C.variation (\\i d -> [ CA.size (d.w * 30) ])\n        ]\n        data\n\n    , C.eachDot <| \\p dot ->\n        [ C.label\n            [ CA.moveDown 4, CA.color (CI.getColor dot) ]\n            [ S.text (String.fromFloat (CI.getData dot).w) ]\n            (CI.getCenter p dot)\n        ]\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Legends$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\nimport Svg as S\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y []\n        , C.scatter .z []\n        ]\n        data\n    , C.legendsAt .max .max\n        [ CA.column\n        , CA.moveLeft 2\n        , CA.spacing 0\n        , CA.alignRight\n        ]\n        [ CA.spacing 5\n        ]\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Opacity$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\nimport Svg as S\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.opacity 0.1, CA.borderWidth 1 ]\n        , C.scatter .z [ CA.opacity 0.1, CA.borderWidth 1 ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Shapes$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.plus ]\n        , C.scatter .z [ CA.square ]\n        , C.scatter .w [ CA.triangle ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Sizes$largeCode = '\nimport Html as H\nimport Chart as C\nimport Chart.Attributes as CA\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.size 14 ]\n        , C.scatter .z [ CA.size 3 ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Tooltip$largeCode = '\nimport Html as H\nimport Svg as S\nimport Chart as C\nimport Chart.Attributes as CA\nimport Chart.Events as CE\nimport Chart.Item as CI\n\n\ntype alias Model =\n  { hovering : List (CI.One Datum CI.Dot) }\n\n\ninit : Model\ninit =\n  { hovering = [] }\n\n\ntype Msg\n  = OnHover (List (CI.One Datum CI.Dot))\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnHover hovering ->\n      { model | hovering = hovering }\n\n\nview : Model -> H.Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 30, right = 15 }\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.opacity 0.2, CA.borderWidth 1 ]\n            |> C.variation (\\i d -> [ CA.size (d.q * 20) ])\n            |> C.amongst model.hovering (\\d -> [ CA.highlight 0.15 ])\n        , C.scatter .z [ CA.opacity 0.2, CA.borderWidth 1 ]\n            |> C.variation (\\i d -> [ CA.size (d.q * 20) ])\n            |> C.amongst model.hovering (\\d -> [ CA.highlight 0.15 ])\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$largeCode = function (chosen) {
	switch (chosen) {
		case 0:
			return $author$project$Examples$BarCharts$Gradient$largeCode;
		case 1:
			return $author$project$Examples$BarCharts$VariableWidth$largeCode;
		case 2:
			return $author$project$Examples$BarCharts$Title$largeCode;
		case 3:
			return $author$project$Examples$BarCharts$TooltipStack$largeCode;
		case 4:
			return $author$project$Examples$BarCharts$Tooltip$largeCode;
		case 5:
			return $author$project$Examples$BarCharts$BarLabels$largeCode;
		case 6:
			return $author$project$Examples$BarCharts$Pattern$largeCode;
		case 7:
			return $author$project$Examples$BarCharts$Histogram$largeCode;
		case 8:
			return $author$project$Examples$BarCharts$BinLabelsAdvanced$largeCode;
		case 9:
			return $author$project$Examples$BarCharts$Spacing$largeCode;
		case 10:
			return $author$project$Examples$BarCharts$Highlight$largeCode;
		case 11:
			return $author$project$Examples$BarCharts$DataDependent$largeCode;
		case 12:
			return $author$project$Examples$BarCharts$Color$largeCode;
		case 13:
			return $author$project$Examples$BarCharts$TooltipBin$largeCode;
		case 14:
			return $author$project$Examples$BarCharts$Corners$largeCode;
		case 15:
			return $author$project$Examples$BarCharts$Ungroup$largeCode;
		case 16:
			return $author$project$Examples$BarCharts$BinLabels$largeCode;
		case 17:
			return $author$project$Examples$BarCharts$Stacked$largeCode;
		case 18:
			return $author$project$Examples$BarCharts$Margin$largeCode;
		case 19:
			return $author$project$Examples$BarCharts$Borders$largeCode;
		case 20:
			return $author$project$Examples$BarCharts$Opacity$largeCode;
		case 21:
			return $author$project$Examples$BarCharts$Legends$largeCode;
		case 22:
			return $author$project$Examples$BarCharts$Basic$largeCode;
		case 23:
			return $author$project$Examples$Frame$Lines$largeCode;
		case 24:
			return $author$project$Examples$Frame$Position$largeCode;
		case 25:
			return $author$project$Examples$Frame$Coordinates$largeCode;
		case 26:
			return $author$project$Examples$Frame$GridFilter$largeCode;
		case 27:
			return $author$project$Examples$Frame$Dimensions$largeCode;
		case 28:
			return $author$project$Examples$Frame$CustomElements$largeCode;
		case 29:
			return $author$project$Examples$Frame$NoArrow$largeCode;
		case 30:
			return $author$project$Examples$Frame$Background$largeCode;
		case 31:
			return $author$project$Examples$Frame$Rect$largeCode;
		case 32:
			return $author$project$Examples$Frame$Padding$largeCode;
		case 33:
			return $author$project$Examples$Frame$Times$largeCode;
		case 34:
			return $author$project$Examples$Frame$OnlyInts$largeCode;
		case 35:
			return $author$project$Examples$Frame$GridColor$largeCode;
		case 36:
			return $author$project$Examples$Frame$Offset$largeCode;
		case 37:
			return $author$project$Examples$Frame$Ellipsis$largeCode;
		case 38:
			return $author$project$Examples$Frame$Color$largeCode;
		case 39:
			return $author$project$Examples$Frame$Amount$largeCode;
		case 40:
			return $author$project$Examples$Frame$Titles$largeCode;
		case 41:
			return $author$project$Examples$Frame$CustomLabels$largeCode;
		case 42:
			return $author$project$Examples$Frame$Margin$largeCode;
		case 43:
			return $author$project$Examples$Frame$LabelWithLine$largeCode;
		case 44:
			return $author$project$Examples$Frame$DotGrid$largeCode;
		case 45:
			return $author$project$Examples$Frame$CustomFormat$largeCode;
		case 46:
			return $author$project$Examples$Frame$AxisLength$largeCode;
		case 47:
			return $author$project$Examples$Frame$Arbitrary$largeCode;
		case 48:
			return $author$project$Examples$Frame$Legends$largeCode;
		case 49:
			return $author$project$Examples$Frame$Basic$largeCode;
		case 50:
			return $author$project$Examples$Interactivity$ChangeContent$largeCode;
		case 51:
			return $author$project$Examples$Interactivity$Direction$largeCode;
		case 52:
			return $author$project$Examples$Interactivity$ChangeDot$largeCode;
		case 53:
			return $author$project$Examples$Interactivity$Border$largeCode;
		case 54:
			return $author$project$Examples$Interactivity$Zoom$largeCode;
		case 55:
			return $author$project$Examples$Interactivity$BasicBin$largeCode;
		case 56:
			return $author$project$Examples$Interactivity$BasicStack$largeCode;
		case 57:
			return $author$project$Examples$Interactivity$Coordinates$largeCode;
		case 58:
			return $author$project$Examples$Interactivity$ChangeName$largeCode;
		case 59:
			return $author$project$Examples$Interactivity$NoArrow$largeCode;
		case 60:
			return $author$project$Examples$Interactivity$FilterSearch$largeCode;
		case 61:
			return $author$project$Examples$Interactivity$Background$largeCode;
		case 62:
			return $author$project$Examples$Interactivity$BasicBar$largeCode;
		case 63:
			return $author$project$Examples$Interactivity$BasicArea$largeCode;
		case 64:
			return $author$project$Examples$Interactivity$ZoomAlt$largeCode;
		case 65:
			return $author$project$Examples$Interactivity$TrickyTooltip$largeCode;
		case 66:
			return $author$project$Examples$Interactivity$Multiple$largeCode;
		case 67:
			return $author$project$Examples$Interactivity$BasicLine$largeCode;
		case 68:
			return $author$project$Examples$Interactivity$Offset$largeCode;
		case 69:
			return $author$project$Examples$Interactivity$DoubleSearch$largeCode;
		case 70:
			return $author$project$Examples$Interactivity$ChangeUnit$largeCode;
		case 71:
			return $author$project$Examples$Interactivity$Focal$largeCode;
		case 72:
			return $author$project$Examples$LineCharts$Area$largeCode;
		case 73:
			return $author$project$Examples$LineCharts$Gradient$largeCode;
		case 74:
			return $author$project$Examples$LineCharts$Width$largeCode;
		case 75:
			return $author$project$Examples$LineCharts$TooltipStack$largeCode;
		case 76:
			return $author$project$Examples$LineCharts$Tooltip$largeCode;
		case 77:
			return $author$project$Examples$LineCharts$Montone$largeCode;
		case 78:
			return $author$project$Examples$LineCharts$Pattern$largeCode;
		case 79:
			return $author$project$Examples$LineCharts$Dots$largeCode;
		case 80:
			return $author$project$Examples$LineCharts$Dashed$largeCode;
		case 81:
			return $author$project$Examples$LineCharts$Color$largeCode;
		case 82:
			return $author$project$Examples$LineCharts$Stepped$largeCode;
		case 83:
			return $author$project$Examples$LineCharts$Stacked$largeCode;
		case 84:
			return $author$project$Examples$LineCharts$Labels$largeCode;
		case 85:
			return $author$project$Examples$LineCharts$Missing$largeCode;
		case 86:
			return $author$project$Examples$LineCharts$Legends$largeCode;
		case 87:
			return $author$project$Examples$LineCharts$Basic$largeCode;
		case 88:
			return $author$project$Examples$Frontpage$BasicBubble$largeCode;
		case 89:
			return $author$project$Examples$Frontpage$BasicNavigation$largeCode;
		case 90:
			return $author$project$Examples$Frontpage$BasicBar$largeCode;
		case 91:
			return $author$project$Examples$Frontpage$BasicArea$largeCode;
		case 92:
			return $author$project$Examples$Frontpage$Concise$largeCode;
		case 93:
			return $author$project$Examples$Frontpage$BasicLine$largeCode;
		case 94:
			return $author$project$Examples$Frontpage$BasicScatter$largeCode;
		case 95:
			return $author$project$Examples$Frontpage$Familiar$largeCode;
		case 96:
			return $author$project$Examples$ScatterCharts$Colors$largeCode;
		case 97:
			return $author$project$Examples$ScatterCharts$Shapes$largeCode;
		case 98:
			return $author$project$Examples$ScatterCharts$Tooltip$largeCode;
		case 99:
			return $author$project$Examples$ScatterCharts$Highlight$largeCode;
		case 100:
			return $author$project$Examples$ScatterCharts$DataDependent$largeCode;
		case 101:
			return $author$project$Examples$ScatterCharts$Borders$largeCode;
		case 102:
			return $author$project$Examples$ScatterCharts$Labels$largeCode;
		case 103:
			return $author$project$Examples$ScatterCharts$Opacity$largeCode;
		case 104:
			return $author$project$Examples$ScatterCharts$Sizes$largeCode;
		case 105:
			return $author$project$Examples$ScatterCharts$Legends$largeCode;
		default:
			return $author$project$Examples$ScatterCharts$Basic$largeCode;
	}
};
var $author$project$Examples$BarCharts$BarLabels$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .q []\n        , C.bar .p []\n        ]\n        data\n\n    , C.barLabels [ CA.moveDown 15, CA.color "white" ]\n    ]\n  ';
var $author$project$Examples$BarCharts$Basic$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .z []\n        , C.bar .y []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$BinLabels$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.grid []\n\n    , C.yLabels [ CA.withGrid ]\n    , C.binLabels .label [ CA.moveDown 20 ]\n\n    , C.bars []\n        [ C.bar .q []\n        , C.bar .p []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$BinLabelsAdvanced$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.yLabels [ CA.withGrid ]\n\n    , C.eachBin <| \\p bin ->\n        let bar = CI.getMember bin\n            datum = CI.getOneData bin\n            isSpecial = datum.y + datum.z > 6\n\n            labelBasic =\n              String.fromFloat (CI.getX1 bar) ++ " - " ++\n              String.fromFloat (CI.getX2 bar)\n\n            label =\n              if isSpecial\n              then "→ " ++ labelBasic ++ " ←"\n              else labelBasic\n\n            color =\n              if isSpecial\n              then "blue"\n              else CA.labelGray\n        in\n        [ C.label\n            [ CA.color color, CA.moveDown 18 ]\n            [ S.text label ]\n            (CI.getBottom p bin)\n        ]\n\n    , C.bars\n        [ CA.x1 .x ]\n        [ C.bar .z []\n        , C.bar .y []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Borders$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        []\n        [ C.stacked\n            [ C.bar .z [ CA.borderWidth 2, CA.opacity 0.4 ]\n            , C.bar .y [ CA.borderWidth 2, CA.opacity 0.4 ]\n            ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Color$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        []\n        [ C.bar .y [ CA.color CA.blue ]\n        , C.bar .z [ CA.color CA.green ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Corners$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.roundTop 0.5 ]\n        [ C.bar .y []\n        , C.bar .z [ CA.roundBottom 0.5 ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$DataDependent$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        []\n        [ C.bar .y []\n            |> C.variation (\\_ d -> if d.x == 3 then [ CA.striped [] ] else [])\n        , C.bar .z []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Gradient$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        []\n        [ C.bar .y [ CA.gradient [ CA.purple, CA.pink ] ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Highlight$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bars)\n    , CE.onMouseLeave (OnHover [])\n    , CA.padding { top = 10, bottom = 0, left = 0, right = 0 }\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.roundTop 0.2\n        , CA.margin 0.1\n        , CA.spacing 0.15\n        ]\n        [ C.bar .z [ CA.striped [], CA.borderWidth 1 ]\n            |> C.amongst model.hovering (\\_ -> [ CA.highlight 0.25 ])\n        , C.bar .v []\n            |> C.amongst model.hovering (\\_ -> [ CA.highlight 0.25 ])\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$BarCharts$Histogram$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.times Time.utc ]\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.x1 .start\n        , CA.x2 .end\n        , CA.margin 0.02\n        ]\n        [ C.bar .y [] ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Legends$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars [ CA.roundTop 0.3 ]\n        [ C.bar .z []\n            |> C.named "Cats"\n        , C.bar .y [ CA.striped [] ]\n            |> C.named "Fish"\n        ]\n        data\n    , C.legendsAt .max .max\n        [ CA.column\n        , CA.moveLeft 15\n        , CA.alignRight\n        , CA.spacing 5\n        ]\n        []\n    ]\n  ';
var $author$project$Examples$BarCharts$Margin$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.margin 0.4 ] -- Number is percentage of bin width\n        [ C.bar .y []\n        , C.bar .z []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Opacity$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        []\n        [ C.bar .y [ CA.opacity 0.5 ]\n        , C.bar .z []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Pattern$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .y [ CA.striped [ CA.spacing 6 ] ]\n        , C.bar .z [ CA.dotted [ CA.rotate 45 ] ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Spacing$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.spacing 0 ] -- Number is percentage of bin width\n        [ C.bar .y []\n        , C.bar .z []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Stacked$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.stacked\n            [ C.bar .y []\n            , C.bar .v []\n            ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Title$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n\n    , C.labelAt .max .max\n        [ CA.moveLeft 8, CA.moveDown 5, CA.alignRight ]\n        [ S.text "Quarterly revenue" ]\n\n    , C.labelAt CA.middle .min\n        [ CA.moveDown 18 ]\n        [ S.text "Quarter" ]\n\n    , C.labelAt .min CA.middle\n        [ CA.moveLeft 25, CA.rotate 90 ]\n        [ S.text "Revenue" ]\n\n    , C.bars []\n        [ C.bar .z []\n        , C.bar .y []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$Tooltip$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bars)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.stacked\n            [ C.bar .z []\n            , C.bar .y []\n            ]\n        , C.bar .v []\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$BarCharts$TooltipBin$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bins)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .z []\n        , C.bar .y []\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$BarCharts$TooltipStack$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.stacks)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.stacked\n            [ C.bar .z []\n            , C.bar .y []\n            ]\n        , C.bar .v [ CA.color CA.purple, CA.striped [] ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$BarCharts$Ungroup$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.ungroup ]\n        [ C.bar .w []\n        , C.bar .z [ CA.striped [] ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$BarCharts$VariableWidth$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.x1 .start\n        , CA.x2 .end\n        , CA.margin 0\n        ]\n        [ C.bar .y [ CA.borderWidth 0.3, CA.opacity 0.5 ] ]\n        data\n    ]\n  ';
var $author$project$Examples$Frame$Amount$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks [ CA.amount 4 ]\n    , C.xLabels [ CA.amount 4 ]\n    ]\n  ';
var $author$project$Examples$Frame$Arbitrary$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    , C.svg <| \\p ->\n        S.g [] [ star 200 40, star 250 50 ]\n\n    , C.svgAt (CA.percent 80) (CA.percent 20) 0 0\n        [ S.circle [ SA.r "10", SA.fill "blue" ] [] ]\n\n    , C.htmlAt .min CA.middle 30 0\n        [ HA.style "border" "1px solid gray"\n        , HA.style "padding" "5px"\n        , HA.style "background" "white"\n        ]\n        [ H.text "My arbitrary HTML" ]\n    ]\n\n\nstar : Float -> Float -> S.Svg msg\nstar x y =\n  S.polygon\n    [ SA.points "100,10 40,198 190,78 10,78 160,198"\n    , SA.fill CA.red\n    , SA.transform <|\n        String.concat\n          [ "translate("\n          , String.fromFloat x\n          , " "\n          , String.fromFloat y\n          , ") scale(0.1 0.1)"\n          ]\n    ]\n    []\n\n  ';
var $author$project$Examples$Frame$AxisLength$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.range\n        [ CA.lowest 0 CA.orLower\n        , CA.highest 100 CA.orHigher\n        ]\n    , CA.domain\n        [ CA.lowest 0 CA.orLower\n        , CA.highest 100 CA.orHigher\n        ]\n    ]\n    [ C.series .x\n        [ C.interpolated .y [  ] [] ]\n        [ { x = 10, y = 20 }\n        , { x = 85, y = 80 }\n        ]\n    , C.xAxis [ CA.noArrow, CA.limits [ CA.likeData ] ]\n    , C.xLabels [ CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$Background$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.margin { top = 20, bottom = 30, left = 30, right = 20 }\n    , CA.htmlAttrs\n        [ HA.style "background" "#fcf9e9" ]\n    ]\n    [ C.grid [ CA.color "white" ]\n    , C.xAxis []\n    , C.yAxis []\n    , C.series .x\n        [ C.interpolated .y [  ] [] ]\n        [ { x = 0, y = 0 }\n        , { x = 10, y = 10 }\n        ]\n    , C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$Basic$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    ]\n  ';
var $author$project$Examples$Frame$Color$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis [ CA.color CA.pink ]\n    , C.yTicks [ CA.color CA.pink ]\n    , C.yLabels [ CA.color CA.pink ]\n    ]\n  ';
var $author$project$Examples$Frame$Coordinates$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n\n    , C.svg <| \\p ->\n        let point = { x = 6, y = 4 }\n            pointSvg = CS.fromCartesian p point\n            color = if CS.fromSvg p pointSvg == point then "purple" else "blue"\n        in\n        S.g []\n          [ S.circle\n              [ SA.r "10"\n              , SA.fill color\n              , SA.cx (String.fromFloat pointSvg.x)\n              , SA.cy (String.fromFloat pointSvg.y)\n              ]\n              []\n          ]\n    ]\n  ';
var $author$project$Examples$Frame$CustomElements$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.any)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xTicks []\n    , C.xLabels []\n    , C.yTicks []\n    , C.yLabels []\n    , C.list <|\n        let heatmapItem index value =\n              let x = toFloat (remainderBy 5 index) * 2\n                  y = toFloat (index // 5) * 2\n                  color =\n                    if value > 8  then "#0E4D64" else\n                    if value > 6  then "#137177" else\n                    if value > 4  then "#188977" else\n                    if value > 2  then "#1D9A6C" else\n                    if value > 0  then "#74C67A" else\n                    if value == 0 then "#99D492" else\n                    "#0A2F51"\n              in\n              C.custom\n                { name = "Temperature"\n                , color = color\n                , position = { x1 = x, x2 = x + 2, y1 = y, y2 = y + 2 }\n                , format = \\coord -> String.fromFloat coord.y ++ " C°"\n                , data = { x = toFloat index, y = value }\n                , render = \\p ->\n                    CS.rect p\n                      [ CA.x1 x\n                      , CA.x2 (x + 2)\n                      , CA.y1 y\n                      , CA.y2 (y + 2)\n                      , CA.color color\n                      , CA.border "white"\n                      ]\n                }\n        in\n        List.indexedMap heatmapItem\n          [ 2, 5, 8, 5, 3\n          , 5, 7, 9, 0, 3\n          , 2, 4, 6, 3, 5\n          , 7, 9, 0, 3, 2\n          , 4, 6, 7, 8, 10\n          ]\n\n    , C.each model.hovering <| \\_ item ->\n        [ C.tooltip item [ CA.center, CA.offset 0, CA.onTopOrBottom ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Frame$CustomFormat$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xLabels [ CA.format (\\x -> String.fromFloat x ++ " C°"), CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$CustomLabels$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.generate 12 CS.ints .x [] <| \\p num ->\n        let isEven = remainderBy 2 num == 0 in\n        [ C.xLabel\n            [ CA.x (toFloat num)\n            , CA.withGrid\n            , if isEven then CA.noChange else CA.y p.y.max\n            , if isEven then CA.noChange else CA.moveUp 28\n            , if isEven then CA.noChange else CA.fontSize 10\n            , if isEven then CA.noChange else CA.color CA.blue\n            ]\n            [ S.text (String.fromInt num ++ "°") ]\n        ]\n    ]\n  ';
var $author$project$Examples$Frame$Dimensions$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.range\n        [ CA.lowest 5 CA.orLower\n        , CA.highest 90 CA.orHigher\n        ]\n    , CA.domain\n        [ CA.lowest 5 CA.orLower\n        , CA.highest 100 CA.orHigher\n        ]\n    ]\n    [ C.series .x\n        [ C.interpolated .y [  ] [] ]\n        [ { x = 10, y = 20 }\n        , { x = 80, y = 80 }\n        ]\n    , C.xLabels [ CA.amount 10, CA.withGrid ]\n    , C.yLabels [ CA.amount 10, CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$DotGrid$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.grid [ CA.dotGrid ]\n    , C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    ]\n  ';
var $author$project$Examples$Frame$Ellipsis$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.margin { top = 10, left = 45, bottom = 30, right = 15 }\n    ]\n    [ C.yAxis [ CA.noArrow ]\n    , C.yTicks []\n    , C.yLabels\n        [ CA.format (\\y -> String.fromFloat y ++ " yyyyyyy")\n        , CA.ellipsis 35 20 -- width: 35, height: 10\n        ]\n\n    , C.xAxis [ CA.noArrow ]\n    , C.xTicks []\n    , C.xLabels\n        [ CA.format (\\x -> String.fromFloat x ++ " xxxxxxx")\n        , CA.ellipsis 35 20\n        ]\n    ]\n  ';
var $author$project$Examples$Frame$GridColor$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.grid [ CA.color CA.blue ]\n    , C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$GridFilter$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.xTicks [ CA.noGrid ]\n    , C.yLabels []\n    , C.yTicks [ CA.noGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$LabelWithLine$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 25, bottom = 0, left = 10, right = 10 }\n    , CA.range [ CA.lowest 0 CA.exactly, CA.highest 10 CA.exactly ]\n    , CA.domain [ CA.lowest 0 CA.exactly, CA.highest 10 CA.exactly ]\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    , C.series .age [ C.scatter .toys [] ] data\n\n    , C.label\n        [ CA.moveRight 14, CA.moveUp 8, CA.alignLeft ]\n        [ S.text "The dot in question" ]\n        { x = 5, y = 6 }\n    , C.line\n        [ CA.break\n        , CA.x1 5, CA.y1 6\n        , CA.x2Svg 10, CA.y2Svg 13\n        , CA.color CA.purple\n        ]\n    ]\n  ';
var $author$project$Examples$Frame$Legends$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.margin { top = 30, bottom = 0, left = 0, right = 0 }\n    ]\n    [ C.xAxis []\n    , C.yLabels [ CA.withGrid, CA.pinned .min ]\n    , C.xLabels []\n\n    -- BAR CHART\n    , C.bars\n        [ CA.roundTop 0.3 ]\n        [ C.named "B1" <| C.bar .z []\n        , C.named "B2" <| C.bar .y [ CA.striped [] ]\n        ]\n        data\n\n    -- LINE CHART\n    , C.series .x\n        [ C.named "A1" <|\n            C.interpolated .p\n              [  ]\n              [ CA.cross, CA.borderWidth 2, CA.border "white" ]\n        , C.named "A2" <|\n            C.interpolated .q\n              [  ]\n              [ CA.cross, CA.borderWidth 2, CA.border "white" ]\n        ]\n        data\n\n    -- LEGENDS\n    , C.legendsAt .min .max\n        [ CA.row\n        , CA.moveRight 10\n        , CA.moveUp 25\n        , CA.spacing 15\n        ]\n        [ CA.width 20 ]\n    ]\n  ';
var $author$project$Examples$Frame$Lines$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    , C.withPlane <| \\p ->\n        [ C.line\n            [ CA.x1 p.x.min\n            , CA.y1 5\n            , CA.x2 p.x.max\n            , CA.dashed [ 5, 5 ]\n            , CA.color CA.red\n            ]\n        , C.line\n            [ CA.x1 3\n            , CA.y1 p.y.min\n            , CA.y2 p.y.max\n            , CA.dashed [ 5, 5 ]\n            , CA.color CA.blue\n            ]\n        ]\n    ]\n  ';
var $author$project$Examples$Frame$Margin$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.margin { top = 20, bottom = 30, left = 30, right = 20 }\n    , CA.htmlAttrs\n        [ HA.style "border" "1px solid darkgray" ]\n    ]\n    [ C.xAxis []\n    , C.yAxis []\n    , C.series .x\n        [ C.interpolated .y [  ] [] ]\n        [ { x = 0, y = 0 }\n        , { x = 10, y = 10 }\n        ]\n    , C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$NoArrow$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis [ CA.noArrow ]\n    , C.xTicks []\n    , C.xLabels []\n    ]\n  ';
var $author$project$Examples$Frame$Offset$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.moveRight 5, CA.moveUp 20, CA.alignLeft, CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$OnlyInts$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.range\n        [ CA.highest 3 CA.exactly\n        , CA.lowest 0 CA.exactly\n        ]\n    ]\n    [ C.xAxis []\n    , C.xTicks [ CA.ints ]\n    , C.xLabels [ CA.ints ]\n    ]\n  ';
var $author$project$Examples$Frame$Padding$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 20, bottom = 20, left = 20, right = 20 }\n    ]\n    [ C.xAxis []\n    , C.yAxis []\n    , C.series .x\n        [ C.interpolated .y [  ] [] ]\n        [ { x = 0, y = 0 }\n        , { x = 10, y = 10 }\n        ]\n    , C.xLabels [ CA.pinned .min, CA.withGrid ]\n    , C.yLabels [ CA.pinned .min, CA.withGrid ]\n    ]\n  ';
var $author$project$Examples$Frame$Position$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.yAxis [ CA.pinned .max ]\n    , C.yTicks [ CA.pinned .max, CA.flip ]\n    , C.yLabels [ CA.pinned .max, CA.flip ]\n    ]\n  ';
var $author$project$Examples$Frame$Rect$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    , C.withPlane <| \\p ->\n        [ C.rect\n            [ CA.x1 3\n            , CA.y1 3\n            , CA.x2 7\n            , CA.y2 9\n            , CA.color "rgb(210, 210, 210)"\n            , CA.opacity 0.3\n            ]\n        ]\n    ]\n  ';
var $author$project$Examples$Frame$Times$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 10, bottom = 0, left = 0, right = 25 }\n    , CA.range\n        [ CA.lowest 1591974241000 CA.exactly\n        , CA.highest 1623510241000 CA.exactly\n        ]\n    ]\n    [ C.xAxis []\n    , C.xTicks [ CA.times Time.utc ]\n    , C.xLabels [ CA.times Time.utc ]\n    ]\n  ';
var $author$project$Examples$Frame$Titles$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 25, bottom = 0, left = 0, right = 10 }\n    , CA.range [ CA.lowest 0 CA.exactly ]\n    ]\n    [ C.xAxis []\n    , C.xTicks [ CA.ints ]\n    , C.xLabels [ CA.ints ]\n    , C.yAxis []\n    , C.yTicks [ CA.ints ]\n    , C.yLabels [ CA.ints ]\n    , C.series .age\n        [ C.scatter .toys [ CA.opacity 0, CA.borderWidth 1 ]\n        ]\n        data\n\n    , C.labelAt .min CA.middle [ CA.moveLeft 35, CA.rotate 90 ]\n        [ S.text "Fruits" ]\n    , C.labelAt CA.middle .min [ CA.moveDown 30 ]\n        [ S.text "Age" ]\n    , C.labelAt CA.middle .max [ CA.fontSize 14 ]\n        [ S.text "How many fruits do children eat? (2021)" ]\n    , C.labelAt CA.middle .max [ CA.moveDown 15 ]\n        [ S.text "Data from fruits.com" ]\n    ]\n  ';
var $author$project$Examples$Frontpage$BasicArea$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.stacked\n            [ C.interpolated .y [ CA.opacity 0.2 ] []\n            , C.interpolated .z [ CA.opacity 1, CA.dotted [] ] []\n            ]\n        ]\n        [ { x = 1, y = 1, z = 3 }\n        , { x = 5, y = 2, z = 1 }\n        , { x = 10, y = 2, z = 4 }\n        ]\n    ]\n  ';
var $author$project$Examples$Frontpage$BasicBar$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid, CA.ints ]\n    , C.yLabels [ CA.withGrid ]\n    , C.bars\n        [ CA.x1 .x ]\n        [ C.bar .z [ CA.striped [] ]\n        , C.bar .y []\n        ]\n        [ { x = 1, y = 3, z = 1 }\n        , { x = 2, y = 2, z = 3 }\n        , { x = 3, y = 4, z = 2 }\n        ]\n    ]\n  ';
var $author$project$Examples$Frontpage$BasicBubble$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 30, bottom = 5, left = 40, right = 40 }\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.opacity 0.3, CA.borderWidth 1 ]\n            |> C.variation (\\_ data -> [ CA.size data.size ])\n        , C.scatter .z [ CA.opacity 0.3, CA.borderWidth 1 ]\n            |> C.variation (\\_ data -> [ CA.size data.size ])\n        ]\n        [ { x = 1, y = 2, z = 3, size = 450 }\n        , { x = 2, y = 3, z = 5, size = 350 }\n        , { x = 3, y = 4, z = 2, size = 150 }\n        , { x = 4, y = 1, z = 3, size = 550 }\n        , { x = 5, y = 4, z = 1, size = 450 }\n        ]\n    ]\n  ';
var $author$project$Examples$Frontpage$BasicLine$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 10, bottom = 5, left = 10, right = 10 }\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.monotone ] [ CA.circle ]\n        , C.interpolated .z [ CA.monotone ] [ CA.square ]\n        ]\n        [ { x = 1, y = 2, z = 3 }\n        , { x = 5, y = 4, z = 1 }\n        , { x = 10, y = 2, z = 4 }\n        ]\n    ]\n  ';
var $author$project$Examples$Frontpage$BasicNavigation$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xAxis []\n    , C.xTicks []\n    , C.xLabels []\n    , C.yAxis []\n    , C.yTicks []\n    , C.yLabels []\n    ]\n  ';
var $author$project$Examples$Frontpage$BasicScatter$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 5, left = 10, right = 10 }\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.circle ]\n        , C.scatter .z [ CA.square ]\n        ]\n        [ { x = 1, y = 2, z = 3 }\n        , { x = 2, y = 3, z = 5 }\n        , { x = 3, y = 4, z = 2 }\n        , { x = 4, y = 1, z = 3 }\n        , { x = 5, y = 4, z = 1 }\n        ]\n    ]\n  ';
var $author$project$Examples$Frontpage$Concise$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 500\n    , CA.margin { top = 10, left = 40, right = 0, bottom = 25 }\n    , CE.onMouseMove OnHover (CE.getNearest CI.stacks)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.yLabels [ CA.withGrid, CA.format (\\y -> String.fromFloat y ++ "M")]\n\n    , C.bars\n        [ CA.roundTop 0.2\n        , CA.roundBottom 0.2\n        , CA.margin 0.2\n        , CA.spacing 0.05\n        , CA.noGrid\n        ]\n        [ C.stacked\n            [ C.bar .cats\n                [ CA.gradient [ mint1, mint2 ] ]\n                |> C.named "Cats"\n            , C.bar .dogs\n                [ CA.gradient [ blue1, blue2 ] ]\n                |> C.named "Dogs"\n            ]\n        , C.bar .people\n            [ CA.gradient [ purple1, purple2 ] ]\n                |> C.named "People"\n        ]\n        data\n\n    , C.labelAt (CA.percent 30) .max\n        [ CA.moveDown 3, CA.fontSize 15 ]\n        [ S.text "Populations in Scandinavia" ]\n\n    , C.labelAt (CA.percent 30) .max\n        [ CA.moveDown 20, CA.fontSize 12 ]\n        [ S.text "Note: Based on made up data." ]\n\n    , C.binLabels .country [ CA.moveDown 18 ]\n    , C.barLabels [ CA.moveDown 18, CA.color weakWhite ]\n    , C.legendsAt .max .max [ CA.alignRight, CA.column, CA.spacing 7 ] []\n\n    , let\n        toBrightLabel =\n          C.productLabel [ CA.moveDown 18, CA.color white ]\n      in\n      C.each model.hovering <| \\p stack ->\n        List.map toBrightLabel (CI.getMembers stack)\n\n    , C.eachBin <| \\p bin ->\n        let bar = CI.getMember bin\n            datum = CI.getOneData bin\n            yPos = (CI.getTop p bin).y\n            xMid = (CI.getCenter p bin).x\n        in\n        if datum.country == "Finland" then\n          [ C.line\n              [ CA.x1 (CI.getX1 bar)\n              , CA.x2 (CI.getX2 bar)\n              , CA.y1 yPos\n              , CA.moveUp 15\n              , CA.tickLength 5\n              ]\n          , C.label\n              [ CA.moveUp 22, CA.fontSize 10 ]\n              [ S.text "Most pets per person"]\n              { x = xMid, y = yPos }\n          ]\n        else\n          []\n    ]\n  ';
var $author$project$Examples$Frontpage$Familiar$smallCode = '\nimport Chart exposing (..)\nimport Chart.Attributes as CA exposing (..)\nimport Time exposing (utc)\n\n\nviewChart : Html Msg\nviewChart =\n  chart\n    [ height 350\n    , width 570\n    , margin { top = 10, bottom = 30, left = 30, right = 10 }\n    ]\n    [ xLabels [ CA.times utc, amount 12 ]\n    , yLabels [ withGrid, amount 6 ]\n    , xAxis []\n    , yAxis []\n    , series .x\n        [ interpolated .y [ width 2 ] []\n        , interpolated .z [ width 2 ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$Interactivity$Background$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bars)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .y [ CA.opacity 0.3, CA.borderWidth 1 ]\n        , C.bar .z [ CA.opacity 0.3, CA.borderWidth 1, CA.striped [] ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [ CA.background "#fcf9e9" ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$BasicArea$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.stacks)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.stacked\n          [ C.interpolated .y\n              [ CA.monotone, CA.opacity 0.2 ]\n              [ CA.circle, CA.color "white", CA.borderWidth 1 ]\n          , C.interpolated .z\n              [ CA.monotone, CA.opacity 0, CA.color CA.purple ]\n              [ CA.circle, CA.color "white", CA.borderWidth 1 ]\n          ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$BasicBar$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bars)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.stacked\n            [ C.bar .z []\n            , C.bar .y []\n            ]\n        , C.bar .v [ CA.dotted [] ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$BasicBin$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bins)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .z []\n        , C.bar .y []\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$BasicLine$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [  ] [ CA.circle, CA.size 3 ]\n        , C.interpolated .z [  ] [ CA.circle, CA.size 3 ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$BasicStack$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.stacks)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.stacked\n            [ C.bar .z []\n            , C.bar .y []\n            ]\n        , C.bar .v [ CA.color CA.purple, CA.striped [] ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$Border$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bars)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .y [ CA.opacity 0.3, CA.borderWidth 1 ]\n        , C.bar .z [ CA.opacity 0.3, CA.borderWidth 1 ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [ CA.border CA.red ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$ChangeContent$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .z [ CA.opacity 0.5, CA.borderWidth 1 ]\n        , C.scatter .y [ CA.opacity 0.5, CA.borderWidth 1 ]\n        , C.scatter .w [ CA.opacity 0.5, CA.borderWidth 1 ]\n        , C.scatter .p [ CA.opacity 0.5, CA.borderWidth 1 ]\n        ]\n        data\n    , C.each model.hovering <| \\p dot ->\n        let color = CI.getColor dot\n            x = CI.getX dot\n            y = CI.getY dot\n        in\n        [ C.tooltip dot []\n            [ HA.style "color" color ]\n            [ H.text "x: "\n            , H.text (String.fromFloat x)\n            , H.text " y: "\n            , H.text (String.fromFloat y)\n            ]\n        ]\n    ]\n  ';
var $author$project$Examples$Interactivity$ChangeDot$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.circle, CA.size 8 ]\n            |> C.amongst model.hovering (\\_ ->\n                [ CA.opacity 0, CA.borderWidth 2 ]\n              )\n        , C.scatter .z [ CA.circle, CA.size 8 ]\n            |> C.amongst model.hovering (\\_ ->\n                [ CA.opacity 0, CA.borderWidth 2 ]\n              )\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$ChangeName$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bins)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .z []\n            |> C.named "Cats"\n        , C.bar .y [ CA.striped [] ]\n            |> C.named "Fish"\n        , C.bar .v [ CA.dotted [] ]\n            |> C.named "Ants"\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$ChangeUnit$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.stacks)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.stacked\n            [ C.bar .y [ CA.opacity 0.5, CA.borderWidth 1 ]\n                |> C.format (\\v -> String.fromFloat v ++ " m/s")\n            , C.bar .z [ CA.opacity 0.5, CA.borderWidth 1 ]\n                |> C.format (\\v -> String.fromFloat v ++ " m/s")\n            ]\n        ]\n        data\n    , C.each model.hovering <| \\p dot ->\n        [ C.tooltip dot [ CA.onLeftOrRight ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$Coordinates$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove (OnHover << Just) CE.getCoords\n    , CE.onMouseLeave (OnHover Nothing)\n    , CA.domain [ CA.lowest 0 CA.exactly, CA.highest 10 CA.exactly ]\n    , CA.range [ CA.lowest 0 CA.exactly, CA.highest 10 CA.exactly ]\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n\n    , case model.hovering of\n        Just coords ->\n          C.series .x\n            [ C.scatter .y\n                [ CA.cross\n                , CA.borderWidth 2\n                , CA.border "white"\n                , CA.size 12\n                ]\n            ]\n            [ coords ]\n\n        Nothing ->\n          C.none\n\n    , case model.hovering of\n        Just coords ->\n          C.labelAt CA.middle .max []\n            [ S.text ("x: " ++ String.fromFloat coords.x)\n            , S.text (" y: " ++ String.fromFloat coords.y)\n            ]\n\n        Nothing ->\n          C.none\n    ]\n  ';
var $author$project$Examples$Interactivity$Direction$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y []\n        , C.scatter .z []\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [ CA.onTopOrBottom ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$DoubleSearch$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.on "mousemove" <|\n        CE.map2 OnHover\n          (CE.getNearest CI.dots)\n          (CE.getNearest CI.bars)\n    , CE.onMouseLeave\n        (OnHover [] [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n\n    , C.series .x\n        [ C.stacked\n          [ C.interpolated .p [] [ CA.circle ]\n          , C.interpolated .q [] [ CA.circle ]\n          ]\n        ]\n        data\n\n    , C.bars\n        [ CA.x1 .x1\n        , CA.x2 .x2\n        ]\n        [ C.bar .z [ CA.color CA.purple, CA.striped [] ] ]\n        data\n\n    , C.each model.hoveringDots <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n\n    , C.each model.hoveringBars <| \\p item ->\n        [ C.label\n            [ CA.color CA.purple\n            , CA.moveUp 8\n            , CA.fontSize 14\n            ]\n            [ S.text (String.fromFloat (CI.getY item)) ]\n            (CI.getTop p item)\n        ]\n    ]\n  ';
var $author$project$Examples$Interactivity$FilterSearch$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 10, right = 10 }\n    , CI.dots\n        |> CI.andThen CI.stacks\n        |> CE.getNearest\n        |> CE.onMouseMove OnHover\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid, CA.pinned .min ]\n    , C.series .x\n        [ C.stacked\n          [ C.interpolated .p [  ] [ CA.circle ]\n          , C.interpolated .q [  ] [ CA.circle ]\n          ]\n        ]\n        data\n    , C.bars [ CA.x1 .x1, CA.x2 .x2 ]\n        [ C.bar .z [ CA.color CA.purple ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$Focal$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.bars)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.bars []\n        [ C.bar .y [ CA.opacity 0.6, CA.borderWidth 1, CA.color CA.green ]\n        , C.bar .z [ CA.opacity 0.6, CA.borderWidth 1, CA.color CA.blue ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [ CA.onLeftOrRight, CA.top ] [] []\n        ]\n    ]\n  ';
var $author$project$Examples$Interactivity$Multiple$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.any)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n\n    , C.bars\n        [ CA.x1 .x1\n        , CA.x2 .x2\n        ]\n        [ C.bar .z [ CA.opacity 0.3, CA.borderWidth 1 ]\n        ]\n        data\n\n    , C.series .x\n        [ C.interpolated .p [] []\n        , C.interpolated .q [] []\n        ]\n        data\n\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$NoArrow$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.color "white", CA.size 20, CA.borderWidth 2 ]\n        , C.scatter .z [ CA.color "white", CA.size 20, CA.borderWidth 2 ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [ CA.noArrow ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$Offset$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.size 60, CA.opacity 0.3, CA.borderWidth 1 ]\n        , C.scatter .z [ CA.size 50, CA.opacity 0.3, CA.borderWidth 1 ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [ CA.offset 0 ] [] [] ]\n    ]\n  ';
var $author$project$Examples$Interactivity$TrickyTooltip$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 10, right = 10 }\n    , CI.bars\n        |> CI.andThen CI.bins\n        |> CE.getNearest\n        |> CE.onMouseMove OnHover\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.yLabels [ CA.withGrid, CA.pinned .min ]\n    , C.xLabels []\n    , C.bars\n        []\n        [ C.bar .w []\n        , C.stacked\n            [ C.bar .p []\n            , C.bar .q []\n            ]\n        ]\n        data\n    , C.each model.hovering <| \\p bin ->\n        let stacks = CI.apply CI.stacks (CI.getMembers bin)\n            toTooltip stack = C.tooltip stack [ CA.onLeftOrRight ] [] []\n        in\n        List.map toTooltip stacks\n    ]\n  ';
var $author$project$Examples$Interactivity$Zoom$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.htmlAttrs [ HA.style "cursor" "crosshair" ]\n\n    , CE.onMouseDown OnDown CE.getCoords\n    , CE.onMouseMove OnMove CE.getCoords\n    , CE.onMouseUp OnUp CE.getCoords\n\n    , case getCurrentWindow model of\n        Just ( start, end ) ->\n          CA.range\n            [ CA.lowest start.x CA.exactly\n            , CA.highest end.x CA.exactly\n            ]\n\n        Nothing ->\n          CA.range []\n\n    , case getCurrentWindow model of\n        Just ( start, end ) ->\n          CA.domain\n            [ CA.lowest start.y CA.exactly\n            , CA.highest end.y CA.exactly\n            ]\n\n        Nothing ->\n          CA.range []\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n\n    , C.series .sepalWidth\n        [ C.scatterMaybe (Data.Iris.only Data.Iris.Setosa .petalWidth)\n            [ CA.size 3, CA.color "white", CA.borderWidth 1, CA.circle ]\n        , C.scatterMaybe (Data.Iris.only Data.Iris.Versicolor .petalWidth)\n            [ CA.size 3, CA.color "white", CA.borderWidth 1, CA.square ]\n        , C.scatterMaybe (Data.Iris.only Data.Iris.Virginica .petalWidth)\n            [ CA.size 3, CA.color "white", CA.borderWidth 1, CA.diamond ]\n        ]\n        Data.Iris.data\n\n    , case getNewSelection model of\n        Just ( start, end ) ->\n          C.rect\n            [ CA.x1 start.x\n            , CA.x2 end.x\n            , CA.y1 start.y\n            , CA.y2 end.y\n            ]\n\n        Nothing ->\n          C.none\n\n    , case getCurrentWindow model of\n        Just ( start, end ) ->\n          C.htmlAt .max .max -10 -10\n            [ HA.style "transform" "translateX(-100%)"\n            ]\n            [ H.button\n                [ HE.onClick OnReset\n                , HA.style "border" "1px solid black"\n                , HA.style "border-radius" "5px"\n                , HA.style "padding" "2px 10px"\n                , HA.style "background" "white"\n                , HA.style "font-size" "14px"\n                ]\n                [ H.text "Reset" ]\n            ]\n\n        Nothing ->\n          C.none\n    ]\n  ';
var $author$project$Examples$Interactivity$ZoomAlt$smallCode = '\ntype alias Model =\n  { center : CS.Point\n  , dragging : Dragging\n  , percentage : Float\n  }\n\n\ntype Dragging\n  = CouldStillBeClick CS.Point\n  | ForSureDragging CS.Point\n  | None\n\n\ninit : Model\ninit =\n  { center = { x = 0, y = 0 }\n  , dragging = None\n  , percentage = 100\n  }\n\n\ntype Msg\n  = OnMouseMove CS.Point\n  | OnMouseDown CS.Point\n  | OnMouseUp CS.Point CS.Point\n  | OnMouseLeave\n  | OnZoomIn\n  | OnZoomOut\n  | OnZoomReset\n\n\nupdate : Msg -> Model -> Model\nupdate msg model =\n  case msg of\n    OnMouseDown offset ->\n      { model | dragging = CouldStillBeClick offset }\n\n    OnMouseMove offset ->\n      case model.dragging of\n        CouldStillBeClick prevOffset ->\n          if prevOffset == offset then\n            model\n          else\n            { model | center = updateCenter model.center prevOffset offset\n            , dragging = ForSureDragging offset\n            }\n\n        ForSureDragging prevOffset ->\n          { model | center = updateCenter model.center prevOffset offset\n          , dragging = ForSureDragging offset\n          }\n\n        None ->\n          model\n\n    OnMouseUp offset coord ->\n      case model.dragging of\n        CouldStillBeClick prevOffset ->\n          { model | center = coord, dragging = None }\n\n        ForSureDragging prevOffset ->\n          { model | center = updateCenter model.center prevOffset offset\n          , dragging = None\n          }\n\n        None ->\n          model\n\n    OnMouseLeave ->\n      { model | dragging = None }\n\n    OnZoomIn ->\n      { model | percentage = model.percentage + 20 }\n\n    OnZoomOut ->\n      { model | percentage = max 1 (model.percentage - 20) }\n\n    OnZoomReset ->\n      { model | percentage = 100, center = { x = 0, y = 0 } }\n\n\nupdateCenter : CS.Point -> CS.Point -> CS.Point -> CS.Point\nupdateCenter center prevOffset offset =\n  { x = center.x + (prevOffset.x - offset.x)\n  , y = center.y + (prevOffset.y - offset.y)\n  }\n\n\nview : Model -> Html Msg\nview model =\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.range [ CA.zoom model.percentage, CA.centerAt model.center.x ]\n    , CA.domain [ CA.zoom model.percentage, CA.centerAt model.center.y ]\n\n    , CE.onMouseDown OnMouseDown CE.getOffset\n    , CE.onMouseMove OnMouseMove CE.getOffset\n    , CE.on "mouseup" (CE.map2 OnMouseUp CE.getOffset CE.getCoords)\n    , CE.onMouseLeave OnMouseLeave\n\n    , CA.htmlAttrs\n        [ HA.style "user-select" "none"\n        , HA.style "cursor" <|\n            case model.dragging of\n              CouldStillBeClick _ -> "grabbing"\n              ForSureDragging _ -> "grabbing"\n              None -> "grab"\n        ]\n    ]\n    [ C.xLabels [ CA.withGrid, CA.amount 10, CA.ints, CA.fontSize 9 ]\n    , C.yLabels [ CA.withGrid, CA.amount 10, CA.ints, CA.fontSize 9 ]\n    , C.xTicks [ CA.amount 10, CA.ints ]\n    , C.yTicks [ CA.amount 10, CA.ints ]\n\n    , C.series .x\n        [ C.scatter .y [ CA.opacity 0.2, CA.borderWidth 1 ]\n            |> C.variation (\\_ d -> [ CA.size (d.s * model.percentage / 100), CA.hideOverflow ])\n        ]\n        [ { x = -100, y = -100, s = 40 }\n        , { x = -80, y = -30, s = 30 }\n        , { x = -60, y = 80, s = 60 }\n        , { x = -50, y = 50, s = 70 }\n        , { x = 20, y = 80, s = 40 }\n        , { x = 30, y = -20, s = 60 }\n        , { x = 40, y = 50, s = 80 }\n        , { x = 80, y = 20, s = 50 }\n        , { x = 100, y = 100, s = 40 }\n        ]\n\n    , C.withPlane <| \\p ->\n        [ C.line [ CA.color CA.darkGray, CA.dashed [ 6, 6 ], CA.y1 (CA.middle p.y) ]\n        , C.line [ CA.color CA.darkGray, CA.dashed [ 6, 6 ], CA.x1 (CA.middle p.x) ]\n        ]\n\n    , C.htmlAt .max .max 0 0\n        [ HA.style "transform" "translateX(-100%)" ]\n        [ H.span\n            [ HA.style "margin-right" "5px" ]\n            [ H.text (String.fromFloat model.percentage ++ "%") ]\n        , H.button\n            [ HE.onClick OnZoomIn\n            , HA.style "margin-right" "5px"\n            ]\n            [ H.text "+" ]\n        , H.button\n            [ HE.onClick OnZoomOut\n            , HA.style "margin-right" "5px"\n            ]\n            [ H.text "-" ]\n        , H.button\n            [ HE.onClick OnZoomReset ]\n            [ H.text "⨯" ]\n        ]\n    ]\n  ';
var $author$project$Examples$LineCharts$Area$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.opacity 0.2 ] []\n        , C.interpolated .z [ CA.opacity 0.2 ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Basic$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [  ] []\n        , C.interpolated .z [  ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Color$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.color CA.red ] []\n        , C.interpolated .z [ CA.color CA.orange ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Dashed$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.monotone, CA.dashed [ 1, 2 ] ] []\n        , C.interpolated .z [ CA.monotone, CA.dashed [ 10, 5 ] ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Dots$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [  ] [ CA.circle ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Gradient$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y\n            [ CA.opacity 0.6\n            , CA.gradient []\n            ]\n            []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Labels$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 15, right = 15 }\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.monotone ] [ CA.circle, CA.size 40 ]\n        ]\n        data\n\n    , C.dotLabels [ CA.moveDown 4, CA.color "white" ]\n    ]\n  ';
var $author$project$Examples$LineCharts$Legends$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [  ] [ CA.cross, CA.borderWidth 2, CA.border "white" ]\n            |> C.named "Cats"\n        , C.interpolated .z [  ] [ CA.cross, CA.borderWidth 2, CA.border "white" ]\n            |> C.named "Fish"\n        ]\n        data\n    , C.legendsAt .min .max\n        [ CA.column\n        , CA.moveRight 15\n        , CA.spacing 5\n        ]\n        [ CA.width 20 ]\n    ]\n  ';
var $author$project$Examples$LineCharts$Missing$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolatedMaybe .y [ CA.stepped ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Montone$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.monotone ] []\n        , C.interpolated .z [ CA.monotone ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Pattern$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.stacked\n          [ C.interpolated .y [ CA.striped [ CA.width 3, CA.spacing 4, CA.rotate 90 ] ] []\n          , C.interpolated .z [ CA.dotted [ CA.width 3, CA.spacing 4 ] ] []\n          ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Stacked$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.stacked\n          [ C.interpolated .y [] []\n          , C.interpolated .z [] []\n          ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Stepped$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.stepped ] []\n        , C.interpolated .z [ CA.stepped ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$LineCharts$Tooltip$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [  ] [ CA.circle, CA.size 3 ]\n        , C.interpolated .z [  ] [ CA.circle, CA.size 3 ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$LineCharts$TooltipStack$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CE.onMouseMove OnHover (CE.getNearest CI.stacks)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.stacked\n          [ C.interpolated .y\n              [ CA.monotone, CA.gradient [] ]\n              [ CA.circle, CA.color "white", CA.borderWidth 1 ]\n          , C.interpolated .z\n              [ CA.monotone, CA.gradient [] ]\n              [ CA.circle, CA.color "white", CA.borderWidth 1 ]\n          ]\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$LineCharts$Width$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n\n    ]\n    [ C.xLabels []\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.interpolated .y [ CA.width 4 ] []\n        , C.interpolated .z [ CA.width 3 ] []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Basic$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y []\n        , C.scatter .z []\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Borders$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y\n            [ CA.borderWidth 3\n            , CA.border CA.purple\n            , CA.size 18\n            , CA.opacity 0\n            ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Colors$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.color CA.red ]\n        , C.scatter .z [ CA.color CA.orange ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$DataDependent$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 10, right = 10 }\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .z [ CA.opacity 0.5, CA.borderWidth 1 ]\n            |> C.variation (\\i d -> [ CA.size (d.x * 20 + 2) ])\n        , C.scatter .y []\n            |> C.variation (\\i d -> [ CA.highlight (if d.x == 3 then 0.5 else 0) ])\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Highlight$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 15, right = 15 }\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y []\n        , C.scatter .z [ CA.highlight 0.4 ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Labels$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 30, right = 10 }\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.opacity 0.2, CA.borderWidth 1 ]\n            |> C.variation (\\i d -> [ CA.size (d.w * 30) ])\n        ]\n        data\n\n    , C.eachDot <| \\p dot ->\n        [ C.label\n            [ CA.moveDown 4, CA.color (CI.getColor dot) ]\n            [ S.text (String.fromFloat (CI.getData dot).w) ]\n            (CI.getCenter p dot)\n        ]\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Legends$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y []\n        , C.scatter .z []\n        ]\n        data\n    , C.legendsAt .max .max\n        [ CA.column\n        , CA.moveLeft 2\n        , CA.spacing 0\n        , CA.alignRight\n        ]\n        [ CA.spacing 5\n        ]\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Opacity$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.opacity 0.1, CA.borderWidth 1 ]\n        , C.scatter .z [ CA.opacity 0.1, CA.borderWidth 1 ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Shapes$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.plus ]\n        , C.scatter .z [ CA.square ]\n        , C.scatter .w [ CA.triangle ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Sizes$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.size 14 ]\n        , C.scatter .z [ CA.size 3 ]\n        ]\n        data\n    ]\n  ';
var $author$project$Examples$ScatterCharts$Tooltip$smallCode = '\n  C.chart\n    [ CA.height 300\n    , CA.width 300\n    , CA.padding { top = 0, bottom = 0, left = 30, right = 15 }\n    , CE.onMouseMove OnHover (CE.getNearest CI.dots)\n    , CE.onMouseLeave (OnHover [])\n    ]\n    [ C.xLabels [ CA.withGrid ]\n    , C.yLabels [ CA.withGrid ]\n    , C.series .x\n        [ C.scatter .y [ CA.opacity 0.2, CA.borderWidth 1 ]\n            |> C.variation (\\i d -> [ CA.size (d.q * 20) ])\n            |> C.amongst model.hovering (\\d -> [ CA.highlight 0.15 ])\n        , C.scatter .z [ CA.opacity 0.2, CA.borderWidth 1 ]\n            |> C.variation (\\i d -> [ CA.size (d.q * 20) ])\n            |> C.amongst model.hovering (\\d -> [ CA.highlight 0.15 ])\n        ]\n        data\n    , C.each model.hovering <| \\p item ->\n        [ C.tooltip item [] [] [] ]\n    ]\n  ';
var $author$project$Examples$smallCode = function (chosen) {
	switch (chosen) {
		case 0:
			return $author$project$Examples$BarCharts$Gradient$smallCode;
		case 1:
			return $author$project$Examples$BarCharts$VariableWidth$smallCode;
		case 2:
			return $author$project$Examples$BarCharts$Title$smallCode;
		case 3:
			return $author$project$Examples$BarCharts$TooltipStack$smallCode;
		case 4:
			return $author$project$Examples$BarCharts$Tooltip$smallCode;
		case 5:
			return $author$project$Examples$BarCharts$BarLabels$smallCode;
		case 6:
			return $author$project$Examples$BarCharts$Pattern$smallCode;
		case 7:
			return $author$project$Examples$BarCharts$Histogram$smallCode;
		case 8:
			return $author$project$Examples$BarCharts$BinLabelsAdvanced$smallCode;
		case 9:
			return $author$project$Examples$BarCharts$Spacing$smallCode;
		case 10:
			return $author$project$Examples$BarCharts$Highlight$smallCode;
		case 11:
			return $author$project$Examples$BarCharts$DataDependent$smallCode;
		case 12:
			return $author$project$Examples$BarCharts$Color$smallCode;
		case 13:
			return $author$project$Examples$BarCharts$TooltipBin$smallCode;
		case 14:
			return $author$project$Examples$BarCharts$Corners$smallCode;
		case 15:
			return $author$project$Examples$BarCharts$Ungroup$smallCode;
		case 16:
			return $author$project$Examples$BarCharts$BinLabels$smallCode;
		case 17:
			return $author$project$Examples$BarCharts$Stacked$smallCode;
		case 18:
			return $author$project$Examples$BarCharts$Margin$smallCode;
		case 19:
			return $author$project$Examples$BarCharts$Borders$smallCode;
		case 20:
			return $author$project$Examples$BarCharts$Opacity$smallCode;
		case 21:
			return $author$project$Examples$BarCharts$Legends$smallCode;
		case 22:
			return $author$project$Examples$BarCharts$Basic$smallCode;
		case 23:
			return $author$project$Examples$Frame$Lines$smallCode;
		case 24:
			return $author$project$Examples$Frame$Position$smallCode;
		case 25:
			return $author$project$Examples$Frame$Coordinates$smallCode;
		case 26:
			return $author$project$Examples$Frame$GridFilter$smallCode;
		case 27:
			return $author$project$Examples$Frame$Dimensions$smallCode;
		case 28:
			return $author$project$Examples$Frame$CustomElements$smallCode;
		case 29:
			return $author$project$Examples$Frame$NoArrow$smallCode;
		case 30:
			return $author$project$Examples$Frame$Background$smallCode;
		case 31:
			return $author$project$Examples$Frame$Rect$smallCode;
		case 32:
			return $author$project$Examples$Frame$Padding$smallCode;
		case 33:
			return $author$project$Examples$Frame$Times$smallCode;
		case 34:
			return $author$project$Examples$Frame$OnlyInts$smallCode;
		case 35:
			return $author$project$Examples$Frame$GridColor$smallCode;
		case 36:
			return $author$project$Examples$Frame$Offset$smallCode;
		case 37:
			return $author$project$Examples$Frame$Ellipsis$smallCode;
		case 38:
			return $author$project$Examples$Frame$Color$smallCode;
		case 39:
			return $author$project$Examples$Frame$Amount$smallCode;
		case 40:
			return $author$project$Examples$Frame$Titles$smallCode;
		case 41:
			return $author$project$Examples$Frame$CustomLabels$smallCode;
		case 42:
			return $author$project$Examples$Frame$Margin$smallCode;
		case 43:
			return $author$project$Examples$Frame$LabelWithLine$smallCode;
		case 44:
			return $author$project$Examples$Frame$DotGrid$smallCode;
		case 45:
			return $author$project$Examples$Frame$CustomFormat$smallCode;
		case 46:
			return $author$project$Examples$Frame$AxisLength$smallCode;
		case 47:
			return $author$project$Examples$Frame$Arbitrary$smallCode;
		case 48:
			return $author$project$Examples$Frame$Legends$smallCode;
		case 49:
			return $author$project$Examples$Frame$Basic$smallCode;
		case 50:
			return $author$project$Examples$Interactivity$ChangeContent$smallCode;
		case 51:
			return $author$project$Examples$Interactivity$Direction$smallCode;
		case 52:
			return $author$project$Examples$Interactivity$ChangeDot$smallCode;
		case 53:
			return $author$project$Examples$Interactivity$Border$smallCode;
		case 54:
			return $author$project$Examples$Interactivity$Zoom$smallCode;
		case 55:
			return $author$project$Examples$Interactivity$BasicBin$smallCode;
		case 56:
			return $author$project$Examples$Interactivity$BasicStack$smallCode;
		case 57:
			return $author$project$Examples$Interactivity$Coordinates$smallCode;
		case 58:
			return $author$project$Examples$Interactivity$ChangeName$smallCode;
		case 59:
			return $author$project$Examples$Interactivity$NoArrow$smallCode;
		case 60:
			return $author$project$Examples$Interactivity$FilterSearch$smallCode;
		case 61:
			return $author$project$Examples$Interactivity$Background$smallCode;
		case 62:
			return $author$project$Examples$Interactivity$BasicBar$smallCode;
		case 63:
			return $author$project$Examples$Interactivity$BasicArea$smallCode;
		case 64:
			return $author$project$Examples$Interactivity$ZoomAlt$smallCode;
		case 65:
			return $author$project$Examples$Interactivity$TrickyTooltip$smallCode;
		case 66:
			return $author$project$Examples$Interactivity$Multiple$smallCode;
		case 67:
			return $author$project$Examples$Interactivity$BasicLine$smallCode;
		case 68:
			return $author$project$Examples$Interactivity$Offset$smallCode;
		case 69:
			return $author$project$Examples$Interactivity$DoubleSearch$smallCode;
		case 70:
			return $author$project$Examples$Interactivity$ChangeUnit$smallCode;
		case 71:
			return $author$project$Examples$Interactivity$Focal$smallCode;
		case 72:
			return $author$project$Examples$LineCharts$Area$smallCode;
		case 73:
			return $author$project$Examples$LineCharts$Gradient$smallCode;
		case 74:
			return $author$project$Examples$LineCharts$Width$smallCode;
		case 75:
			return $author$project$Examples$LineCharts$TooltipStack$smallCode;
		case 76:
			return $author$project$Examples$LineCharts$Tooltip$smallCode;
		case 77:
			return $author$project$Examples$LineCharts$Montone$smallCode;
		case 78:
			return $author$project$Examples$LineCharts$Pattern$smallCode;
		case 79:
			return $author$project$Examples$LineCharts$Dots$smallCode;
		case 80:
			return $author$project$Examples$LineCharts$Dashed$smallCode;
		case 81:
			return $author$project$Examples$LineCharts$Color$smallCode;
		case 82:
			return $author$project$Examples$LineCharts$Stepped$smallCode;
		case 83:
			return $author$project$Examples$LineCharts$Stacked$smallCode;
		case 84:
			return $author$project$Examples$LineCharts$Labels$smallCode;
		case 85:
			return $author$project$Examples$LineCharts$Missing$smallCode;
		case 86:
			return $author$project$Examples$LineCharts$Legends$smallCode;
		case 87:
			return $author$project$Examples$LineCharts$Basic$smallCode;
		case 88:
			return $author$project$Examples$Frontpage$BasicBubble$smallCode;
		case 89:
			return $author$project$Examples$Frontpage$BasicNavigation$smallCode;
		case 90:
			return $author$project$Examples$Frontpage$BasicBar$smallCode;
		case 91:
			return $author$project$Examples$Frontpage$BasicArea$smallCode;
		case 92:
			return $author$project$Examples$Frontpage$Concise$smallCode;
		case 93:
			return $author$project$Examples$Frontpage$BasicLine$smallCode;
		case 94:
			return $author$project$Examples$Frontpage$BasicScatter$smallCode;
		case 95:
			return $author$project$Examples$Frontpage$Familiar$smallCode;
		case 96:
			return $author$project$Examples$ScatterCharts$Colors$smallCode;
		case 97:
			return $author$project$Examples$ScatterCharts$Shapes$smallCode;
		case 98:
			return $author$project$Examples$ScatterCharts$Tooltip$smallCode;
		case 99:
			return $author$project$Examples$ScatterCharts$Highlight$smallCode;
		case 100:
			return $author$project$Examples$ScatterCharts$DataDependent$smallCode;
		case 101:
			return $author$project$Examples$ScatterCharts$Borders$smallCode;
		case 102:
			return $author$project$Examples$ScatterCharts$Labels$smallCode;
		case 103:
			return $author$project$Examples$ScatterCharts$Opacity$smallCode;
		case 104:
			return $author$project$Examples$ScatterCharts$Sizes$smallCode;
		case 105:
			return $author$project$Examples$ScatterCharts$Legends$smallCode;
		default:
			return $author$project$Examples$ScatterCharts$Basic$smallCode;
	}
};
var $elm$virtual_dom$VirtualDom$lazy = _VirtualDom_lazy;
var $elm$html$Html$Lazy$lazy = $elm$virtual_dom$VirtualDom$lazy;
var $mdgriffith$elm_ui$Internal$Model$Monospace = {$: 2};
var $mdgriffith$elm_ui$Element$Font$monospace = $mdgriffith$elm_ui$Internal$Model$Monospace;
var $elm$html$Html$code = _VirtualDom_node('code');
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$HCode = $elm$core$Basics$identity;
var $elm$core$Result$map = F2(
	function (func, ra) {
		if (!ra.$) {
			var a = ra.a;
			return $elm$core$Result$Ok(
				func(a));
		} else {
			var e = ra.a;
			return $elm$core$Result$Err(e);
		}
	});
var $elm$parser$Parser$DeadEnd = F3(
	function (row, col, problem) {
		return {e3: col, fP: problem, aj: row};
	});
var $elm$parser$Parser$problemToDeadEnd = function (p) {
	return A3($elm$parser$Parser$DeadEnd, p.aj, p.e3, p.fP);
};
var $elm$parser$Parser$Advanced$bagToList = F2(
	function (bag, list) {
		bagToList:
		while (true) {
			switch (bag.$) {
				case 0:
					return list;
				case 1:
					var bag1 = bag.a;
					var x = bag.b;
					var $temp$bag = bag1,
						$temp$list = A2($elm$core$List$cons, x, list);
					bag = $temp$bag;
					list = $temp$list;
					continue bagToList;
				default:
					var bag1 = bag.a;
					var bag2 = bag.b;
					var $temp$bag = bag1,
						$temp$list = A2($elm$parser$Parser$Advanced$bagToList, bag2, list);
					bag = $temp$bag;
					list = $temp$list;
					continue bagToList;
			}
		}
	});
var $elm$parser$Parser$Advanced$run = F2(
	function (_v0, src) {
		var parse = _v0;
		var _v1 = parse(
			{e3: 1, f: _List_Nil, g: 1, h8: 0, aj: 1, c: src});
		if (!_v1.$) {
			var value = _v1.b;
			return $elm$core$Result$Ok(value);
		} else {
			var bag = _v1.b;
			return $elm$core$Result$Err(
				A2($elm$parser$Parser$Advanced$bagToList, bag, _List_Nil));
		}
	});
var $elm$parser$Parser$run = F2(
	function (parser, source) {
		var _v0 = A2($elm$parser$Parser$Advanced$run, parser, source);
		if (!_v0.$) {
			var a = _v0.a;
			return $elm$core$Result$Ok(a);
		} else {
			var problems = _v0.a;
			return $elm$core$Result$Err(
				A2($elm$core$List$map, $elm$parser$Parser$problemToDeadEnd, problems));
		}
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Style1 = 2;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Style2 = 3;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Style3 = 4;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Style4 = 5;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Style5 = 6;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Style6 = 7;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$syntaxToStyle = function (syntax) {
	switch (syntax) {
		case 0:
			return _Utils_Tuple2(3, 'elm-s');
		case 1:
			return _Utils_Tuple2(4, 'elm-bs');
		case 2:
			return _Utils_Tuple2(5, 'elm-gs');
		case 3:
			return _Utils_Tuple2(7, 'elm-c');
		case 4:
			return _Utils_Tuple2(4, 'elm-k');
		case 5:
			return _Utils_Tuple2(6, 'elm-f');
		case 6:
			return _Utils_Tuple2(5, 'elm-ts');
		default:
			return _Utils_Tuple2(2, 'elm-n');
	}
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Helpers$newLine = function (fragments) {
	return {hA: fragments, hE: $elm$core$Maybe$Nothing};
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$LineBreak = {$: 2};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Comment = 1;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Default = 0;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Helpers$toFragment = F2(
	function (toStyle, _v0) {
		var syntax = _v0.a;
		var text = _v0.b;
		switch (syntax.$) {
			case 0:
				return {gD: '', il: 0, V: text};
			case 1:
				return {gD: '', il: 1, V: text};
			case 2:
				return {gD: '', il: 0, V: text};
			default:
				var c = syntax.a;
				var _v2 = toStyle(c);
				var requiredStyle = _v2.a;
				var additionalClass = _v2.b;
				return {gD: additionalClass, il: requiredStyle, V: text};
		}
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Helpers$toLinesHelp = F3(
	function (toStyle, _v0, _v1) {
		var syntax = _v0.a;
		var text = _v0.b;
		var lines = _v1.a;
		var fragments = _v1.b;
		var maybeLastSyntax = _v1.c;
		if (_Utils_eq(syntax, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$LineBreak)) {
			return _Utils_Tuple3(
				A2(
					$elm$core$List$cons,
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Helpers$newLine(fragments),
					lines),
				_List_fromArray(
					[
						A2(
						$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Helpers$toFragment,
						toStyle,
						_Utils_Tuple2(syntax, text))
					]),
				$elm$core$Maybe$Nothing);
		} else {
			if (_Utils_eq(
				$elm$core$Maybe$Just(syntax),
				maybeLastSyntax)) {
				if (fragments.b) {
					var headFrag = fragments.a;
					var tailFrags = fragments.b;
					return _Utils_Tuple3(
						lines,
						A2(
							$elm$core$List$cons,
							_Utils_update(
								headFrag,
								{
									V: _Utils_ap(text, headFrag.V)
								}),
							tailFrags),
						maybeLastSyntax);
				} else {
					return _Utils_Tuple3(
						lines,
						A2(
							$elm$core$List$cons,
							A2(
								$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Helpers$toFragment,
								toStyle,
								_Utils_Tuple2(syntax, text)),
							fragments),
						maybeLastSyntax);
				}
			} else {
				return _Utils_Tuple3(
					lines,
					A2(
						$elm$core$List$cons,
						A2(
							$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Helpers$toFragment,
							toStyle,
							_Utils_Tuple2(syntax, text)),
						fragments),
					$elm$core$Maybe$Just(syntax));
			}
		}
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Helpers$toLines = F2(
	function (toStyle, revTokens) {
		return function (_v0) {
			var lines = _v0.a;
			var frags = _v0.b;
			return A2(
				$elm$core$List$cons,
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Helpers$newLine(frags),
				lines);
		}(
			A3(
				$elm$core$List$foldl,
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Helpers$toLinesHelp(toStyle),
				_Utils_Tuple3(_List_Nil, _List_Nil, $elm$core$Maybe$Nothing),
				revTokens));
	});
var $elm$parser$Parser$Advanced$Parser = $elm$core$Basics$identity;
var $elm$parser$Parser$Advanced$Bad = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$Good = F3(
	function (a, b, c) {
		return {$: 0, a: a, b: b, c: c};
	});
var $elm$parser$Parser$Advanced$loopHelp = F4(
	function (p, state, callback, s0) {
		loopHelp:
		while (true) {
			var _v0 = callback(state);
			var parse = _v0;
			var _v1 = parse(s0);
			if (!_v1.$) {
				var p1 = _v1.a;
				var step = _v1.b;
				var s1 = _v1.c;
				if (!step.$) {
					var newState = step.a;
					var $temp$p = p || p1,
						$temp$state = newState,
						$temp$callback = callback,
						$temp$s0 = s1;
					p = $temp$p;
					state = $temp$state;
					callback = $temp$callback;
					s0 = $temp$s0;
					continue loopHelp;
				} else {
					var result = step.a;
					return A3($elm$parser$Parser$Advanced$Good, p || p1, result, s1);
				}
			} else {
				var p1 = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p || p1, x);
			}
		}
	});
var $elm$parser$Parser$Advanced$loop = F2(
	function (state, callback) {
		return function (s) {
			return A4($elm$parser$Parser$Advanced$loopHelp, false, state, callback, s);
		};
	});
var $elm$parser$Parser$Advanced$map = F2(
	function (func, _v0) {
		var parse = _v0;
		return function (s0) {
			var _v1 = parse(s0);
			if (!_v1.$) {
				var p = _v1.a;
				var a = _v1.b;
				var s1 = _v1.c;
				return A3(
					$elm$parser$Parser$Advanced$Good,
					p,
					func(a),
					s1);
			} else {
				var p = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			}
		};
	});
var $elm$parser$Parser$map = $elm$parser$Parser$Advanced$map;
var $elm$parser$Parser$Advanced$Done = function (a) {
	return {$: 1, a: a};
};
var $elm$parser$Parser$Advanced$Loop = function (a) {
	return {$: 0, a: a};
};
var $elm$parser$Parser$toAdvancedStep = function (step) {
	if (!step.$) {
		var s = step.a;
		return $elm$parser$Parser$Advanced$Loop(s);
	} else {
		var a = step.a;
		return $elm$parser$Parser$Advanced$Done(a);
	}
};
var $elm$parser$Parser$loop = F2(
	function (state, callback) {
		return A2(
			$elm$parser$Parser$Advanced$loop,
			state,
			function (s) {
				return A2(
					$elm$parser$Parser$map,
					$elm$parser$Parser$toAdvancedStep,
					callback(s));
			});
	});
var $elm$parser$Parser$Done = function (a) {
	return {$: 1, a: a};
};
var $elm$parser$Parser$Loop = function (a) {
	return {$: 0, a: a};
};
var $elm$parser$Parser$Advanced$andThen = F2(
	function (callback, _v0) {
		var parseA = _v0;
		return function (s0) {
			var _v1 = parseA(s0);
			if (_v1.$ === 1) {
				var p = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			} else {
				var p1 = _v1.a;
				var a = _v1.b;
				var s1 = _v1.c;
				var _v2 = callback(a);
				var parseB = _v2;
				var _v3 = parseB(s1);
				if (_v3.$ === 1) {
					var p2 = _v3.a;
					var x = _v3.b;
					return A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);
				} else {
					var p2 = _v3.a;
					var b = _v3.b;
					var s2 = _v3.c;
					return A3($elm$parser$Parser$Advanced$Good, p1 || p2, b, s2);
				}
			}
		};
	});
var $elm$parser$Parser$andThen = $elm$parser$Parser$Advanced$andThen;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Comment = {$: 1};
var $elm$parser$Parser$Advanced$mapChompedString = F2(
	function (func, _v0) {
		var parse = _v0;
		return function (s0) {
			var _v1 = parse(s0);
			if (_v1.$ === 1) {
				var p = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			} else {
				var p = _v1.a;
				var a = _v1.b;
				var s1 = _v1.c;
				return A3(
					$elm$parser$Parser$Advanced$Good,
					p,
					A2(
						func,
						A3($elm$core$String$slice, s0.h8, s1.h8, s0.c),
						a),
					s1);
			}
		};
	});
var $elm$parser$Parser$Advanced$getChompedString = function (parser) {
	return A2($elm$parser$Parser$Advanced$mapChompedString, $elm$core$Basics$always, parser);
};
var $elm$parser$Parser$getChompedString = $elm$parser$Parser$Advanced$getChompedString;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isLineBreak = function (c) {
	return c === '\n';
};
var $elm$parser$Parser$ExpectingSymbol = function (a) {
	return {$: 8, a: a};
};
var $elm$parser$Parser$Advanced$Token = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$AddRight = F2(
	function (a, b) {
		return {$: 1, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$DeadEnd = F4(
	function (row, col, problem, contextStack) {
		return {e3: col, hf: contextStack, fP: problem, aj: row};
	});
var $elm$parser$Parser$Advanced$Empty = {$: 0};
var $elm$parser$Parser$Advanced$fromState = F2(
	function (s, x) {
		return A2(
			$elm$parser$Parser$Advanced$AddRight,
			$elm$parser$Parser$Advanced$Empty,
			A4($elm$parser$Parser$Advanced$DeadEnd, s.aj, s.e3, x, s.f));
	});
var $elm$parser$Parser$Advanced$isSubString = _Parser_isSubString;
var $elm$parser$Parser$Advanced$token = function (_v0) {
	var str = _v0.a;
	var expecting = _v0.b;
	var progress = !$elm$core$String$isEmpty(str);
	return function (s) {
		var _v1 = A5($elm$parser$Parser$Advanced$isSubString, str, s.h8, s.aj, s.e3, s.c);
		var newOffset = _v1.a;
		var newRow = _v1.b;
		var newCol = _v1.c;
		return _Utils_eq(newOffset, -1) ? A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : A3(
			$elm$parser$Parser$Advanced$Good,
			progress,
			0,
			{e3: newCol, f: s.f, g: s.g, h8: newOffset, aj: newRow, c: s.c});
	};
};
var $elm$parser$Parser$Advanced$symbol = $elm$parser$Parser$Advanced$token;
var $elm$parser$Parser$symbol = function (str) {
	return $elm$parser$Parser$Advanced$symbol(
		A2(
			$elm$parser$Parser$Advanced$Token,
			str,
			$elm$parser$Parser$ExpectingSymbol(str)));
};
var $elm$parser$Parser$Advanced$isSubChar = _Parser_isSubChar;
var $elm$parser$Parser$Advanced$chompWhileHelp = F5(
	function (isGood, offset, row, col, s0) {
		chompWhileHelp:
		while (true) {
			var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, offset, s0.c);
			if (_Utils_eq(newOffset, -1)) {
				return A3(
					$elm$parser$Parser$Advanced$Good,
					_Utils_cmp(s0.h8, offset) < 0,
					0,
					{e3: col, f: s0.f, g: s0.g, h8: offset, aj: row, c: s0.c});
			} else {
				if (_Utils_eq(newOffset, -2)) {
					var $temp$isGood = isGood,
						$temp$offset = offset + 1,
						$temp$row = row + 1,
						$temp$col = 1,
						$temp$s0 = s0;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					s0 = $temp$s0;
					continue chompWhileHelp;
				} else {
					var $temp$isGood = isGood,
						$temp$offset = newOffset,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$s0 = s0;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					s0 = $temp$s0;
					continue chompWhileHelp;
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$chompWhile = function (isGood) {
	return function (s) {
		return A5($elm$parser$Parser$Advanced$chompWhileHelp, isGood, s.h8, s.aj, s.e3, s);
	};
};
var $elm$parser$Parser$chompWhile = $elm$parser$Parser$Advanced$chompWhile;
var $elm$parser$Parser$Advanced$map2 = F3(
	function (func, _v0, _v1) {
		var parseA = _v0;
		var parseB = _v1;
		return function (s0) {
			var _v2 = parseA(s0);
			if (_v2.$ === 1) {
				var p = _v2.a;
				var x = _v2.b;
				return A2($elm$parser$Parser$Advanced$Bad, p, x);
			} else {
				var p1 = _v2.a;
				var a = _v2.b;
				var s1 = _v2.c;
				var _v3 = parseB(s1);
				if (_v3.$ === 1) {
					var p2 = _v3.a;
					var x = _v3.b;
					return A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);
				} else {
					var p2 = _v3.a;
					var b = _v3.b;
					var s2 = _v3.c;
					return A3(
						$elm$parser$Parser$Advanced$Good,
						p1 || p2,
						A2(func, a, b),
						s2);
				}
			}
		};
	});
var $elm$parser$Parser$Advanced$ignorer = F2(
	function (keepParser, ignoreParser) {
		return A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$always, keepParser, ignoreParser);
	});
var $elm$parser$Parser$ignorer = $elm$parser$Parser$Advanced$ignorer;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$thenChompWhile = F2(
	function (isNotRelevant, previousParser) {
		return A2(
			$elm$parser$Parser$ignorer,
			previousParser,
			$elm$parser$Parser$chompWhile(isNotRelevant));
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$inlineComment = A2(
	$elm$parser$Parser$map,
	function (b) {
		return _List_fromArray(
			[
				_Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Comment, b)
			]);
	},
	$elm$parser$Parser$getChompedString(
		A2(
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$thenChompWhile,
			A2($elm$core$Basics$composeL, $elm$core$Basics$not, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isLineBreak),
			$elm$parser$Parser$symbol('--'))));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$addThen = F3(
	function (f, list, plist) {
		return A2(
			$elm$parser$Parser$andThen,
			function (n) {
				return f(
					_Utils_ap(n, list));
			},
			plist);
	});
var $elm$parser$Parser$UnexpectedChar = {$: 11};
var $elm$parser$Parser$Advanced$chompIf = F2(
	function (isGood, expecting) {
		return function (s) {
			var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, s.h8, s.c);
			return _Utils_eq(newOffset, -1) ? A2(
				$elm$parser$Parser$Advanced$Bad,
				false,
				A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : (_Utils_eq(newOffset, -2) ? A3(
				$elm$parser$Parser$Advanced$Good,
				true,
				0,
				{e3: 1, f: s.f, g: s.g, h8: s.h8 + 1, aj: s.aj + 1, c: s.c}) : A3(
				$elm$parser$Parser$Advanced$Good,
				true,
				0,
				{e3: s.e3 + 1, f: s.f, g: s.g, h8: newOffset, aj: s.aj, c: s.c}));
		};
	});
var $elm$parser$Parser$chompIf = function (isGood) {
	return A2($elm$parser$Parser$Advanced$chompIf, isGood, $elm$parser$Parser$UnexpectedChar);
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$consThen = F3(
	function (f, list, pn) {
		return A2(
			$elm$parser$Parser$andThen,
			function (n) {
				return f(
					A2($elm$core$List$cons, n, list));
			},
			pn);
	});
var $elm$parser$Parser$ExpectingEnd = {$: 10};
var $elm$parser$Parser$Advanced$end = function (x) {
	return function (s) {
		return _Utils_eq(
			$elm$core$String$length(s.c),
			s.h8) ? A3($elm$parser$Parser$Advanced$Good, false, 0, s) : A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, x));
	};
};
var $elm$parser$Parser$end = $elm$parser$Parser$Advanced$end($elm$parser$Parser$ExpectingEnd);
var $elm$parser$Parser$Advanced$Append = F2(
	function (a, b) {
		return {$: 2, a: a, b: b};
	});
var $elm$parser$Parser$Advanced$oneOfHelp = F3(
	function (s0, bag, parsers) {
		oneOfHelp:
		while (true) {
			if (!parsers.b) {
				return A2($elm$parser$Parser$Advanced$Bad, false, bag);
			} else {
				var parse = parsers.a;
				var remainingParsers = parsers.b;
				var _v1 = parse(s0);
				if (!_v1.$) {
					var step = _v1;
					return step;
				} else {
					var step = _v1;
					var p = step.a;
					var x = step.b;
					if (p) {
						return step;
					} else {
						var $temp$s0 = s0,
							$temp$bag = A2($elm$parser$Parser$Advanced$Append, bag, x),
							$temp$parsers = remainingParsers;
						s0 = $temp$s0;
						bag = $temp$bag;
						parsers = $temp$parsers;
						continue oneOfHelp;
					}
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$oneOf = function (parsers) {
	return function (s) {
		return A3($elm$parser$Parser$Advanced$oneOfHelp, s, $elm$parser$Parser$Advanced$Empty, parsers);
	};
};
var $elm$parser$Parser$oneOf = $elm$parser$Parser$Advanced$oneOf;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimitedUnnestable = F2(
	function (options, revAList) {
		var defaultMap = options.e7;
		var isNotRelevant = options.fw;
		var end = options.fb;
		var innerParsers = options.fs;
		return $elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$parser$Parser$map,
					$elm$core$Basics$always(
						A2(
							$elm$core$List$cons,
							defaultMap(end),
							revAList)),
					$elm$parser$Parser$symbol(end)),
					A2(
					$elm$parser$Parser$map,
					$elm$core$Basics$always(revAList),
					$elm$parser$Parser$end),
					A3(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$addThen,
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimitedUnnestable(options),
					revAList,
					$elm$parser$Parser$oneOf(innerParsers)),
					A3(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$consThen,
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimitedUnnestable(options),
					revAList,
					A2(
						$elm$parser$Parser$map,
						defaultMap,
						$elm$parser$Parser$getChompedString(
							A2(
								$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$thenChompWhile,
								isNotRelevant,
								$elm$parser$Parser$chompIf(
									$elm$core$Basics$always(true))))))
				]));
	});
var $elm$parser$Parser$Advanced$succeed = function (a) {
	return function (s) {
		return A3($elm$parser$Parser$Advanced$Good, false, a, s);
	};
};
var $elm$parser$Parser$succeed = $elm$parser$Parser$Advanced$succeed;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimitedNestable = F3(
	function (nestLevel, options, revAList) {
		var defaultMap = options.e7;
		var isNotRelevant = options.fw;
		var start = options.f3;
		var end = options.fb;
		var innerParsers = options.fs;
		return $elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$parser$Parser$andThen,
					function (n) {
						return (nestLevel === 1) ? $elm$parser$Parser$succeed(n) : A3($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimitedNestable, nestLevel - 1, options, n);
					},
					A2(
						$elm$parser$Parser$map,
						$elm$core$Basics$always(
							A2(
								$elm$core$List$cons,
								defaultMap(end),
								revAList)),
						$elm$parser$Parser$symbol(end))),
					A3(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$consThen,
					A2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimitedNestable, nestLevel + 1, options),
					revAList,
					A2(
						$elm$parser$Parser$map,
						defaultMap,
						$elm$parser$Parser$getChompedString(
							A2(
								$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$thenChompWhile,
								isNotRelevant,
								$elm$parser$Parser$symbol(start))))),
					A3(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$addThen,
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimitedUnnestable(options),
					revAList,
					$elm$parser$Parser$oneOf(innerParsers)),
					A2(
					$elm$parser$Parser$map,
					$elm$core$Basics$always(revAList),
					$elm$parser$Parser$end),
					A3(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$consThen,
					A2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimitedNestable, nestLevel, options),
					revAList,
					A2(
						$elm$parser$Parser$map,
						defaultMap,
						$elm$parser$Parser$getChompedString(
							A2(
								$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$thenChompWhile,
								isNotRelevant,
								$elm$parser$Parser$chompIf(
									$elm$core$Basics$always(true))))))
				]));
	});
var $elm$parser$Parser$Problem = function (a) {
	return {$: 12, a: a};
};
var $elm$parser$Parser$Advanced$problem = function (x) {
	return function (s) {
		return A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, x));
	};
};
var $elm$parser$Parser$problem = function (msg) {
	return $elm$parser$Parser$Advanced$problem(
		$elm$parser$Parser$Problem(msg));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimitedHelp = F2(
	function (options, revAList) {
		var start = options.f3;
		var end = options.fb;
		var isNotRelevant = options.fw;
		var _v0 = _Utils_Tuple2(
			$elm$core$String$uncons(options.f3),
			$elm$core$String$uncons(options.fb));
		if (_v0.a.$ === 1) {
			var _v1 = _v0.a;
			return $elm$parser$Parser$problem('Trying to parse a delimited helper, but the start token cannot be an empty string!');
		} else {
			if (_v0.b.$ === 1) {
				var _v2 = _v0.b;
				return $elm$parser$Parser$problem('Trying to parse a delimited helper, but the end token cannot be an empty string!');
			} else {
				var _v3 = _v0.a.a;
				var startChar = _v3.a;
				var _v4 = _v0.b.a;
				var endChar = _v4.a;
				return options.fv ? A3(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimitedNestable,
					1,
					_Utils_update(
						options,
						{
							fw: function (c) {
								return isNotRelevant(c) && ((!_Utils_eq(c, startChar)) && (!_Utils_eq(c, endChar)));
							}
						}),
					revAList) : A2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimitedUnnestable,
					_Utils_update(
						options,
						{
							fw: function (c) {
								return isNotRelevant(c) && (!_Utils_eq(c, endChar));
							}
						}),
					revAList);
			}
		}
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimited = function (options) {
	var start = options.f3;
	var isNotRelevant = options.fw;
	var defaultMap = options.e7;
	return A2(
		$elm$parser$Parser$andThen,
		function (n) {
			return A2(
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimitedHelp,
				options,
				_List_fromArray(
					[n]));
		},
		A2(
			$elm$parser$Parser$map,
			$elm$core$Basics$always(
				defaultMap(start)),
			$elm$parser$Parser$symbol(start)));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$lineBreakList = A2(
	$elm$parser$Parser$map,
	function (_v0) {
		return _List_fromArray(
			[
				_Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$LineBreak, '\n')
			]);
	},
	$elm$parser$Parser$symbol('\n'));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$multilineComment = $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimited(
	{
		e7: function (b) {
			return _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Comment, b);
		},
		fb: '-}',
		fs: _List_fromArray(
			[$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$lineBreakList]),
		fv: true,
		fw: function (c) {
			return !$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isLineBreak(c);
		},
		f3: '{-'
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$comment = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$inlineComment, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$multilineComment]));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$BasicSymbol = 1;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C = function (a) {
	return {$: 3, a: a};
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$Capitalized = 3;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$GroupSymbol = 2;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$Keyword = 4;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal = {$: 0};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$Number = 7;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$chompIfThenWhile = function (isNotRelevant) {
	return A2(
		$elm$parser$Parser$ignorer,
		A2(
			$elm$parser$Parser$ignorer,
			$elm$parser$Parser$succeed(0),
			$elm$parser$Parser$chompIf(isNotRelevant)),
		$elm$parser$Parser$chompWhile(isNotRelevant));
};
var $elm$core$Set$fromList = function (list) {
	return A3($elm$core$List$foldl, $elm$core$Set$insert, $elm$core$Set$empty, list);
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$basicSymbols = $elm$core$Set$fromList(
	_List_fromArray(
		['|', '.', '=', '\\', '/', '(', ')', '-', '>', '<', ':', '+', '!', '$', '%', '&', '*']));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isBasicSymbol = function (c) {
	return A2($elm$core$Set$member, c, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$basicSymbols);
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$basicSymbol = $elm$parser$Parser$getChompedString(
	$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$chompIfThenWhile($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isBasicSymbol));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$groupSymbols = $elm$core$Set$fromList(
	_List_fromArray(
		[',', '[', ']', '{', '}']));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isGroupSymbol = function (c) {
	return A2($elm$core$Set$member, c, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$groupSymbols);
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isStringLiteralChar = function (c) {
	return (c === '\"') || (c === '\'');
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isSpace = function (c) {
	return (c === ' ') || (c === '\t');
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isWhitespace = function (c) {
	return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isSpace(c) || $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isLineBreak(c);
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isVariableChar = function (c) {
	return !($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isWhitespace(c) || ($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isBasicSymbol(c) || ($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isGroupSymbol(c) || $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isStringLiteralChar(c))));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$capitalized = $elm$parser$Parser$getChompedString(
	A2(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$thenChompWhile,
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isVariableChar,
		$elm$parser$Parser$chompIf($elm$core$Char$isUpper)));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$groupSymbol = $elm$parser$Parser$getChompedString(
	$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$chompIfThenWhile($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isGroupSymbol));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$Function = 5;
var $elm$parser$Parser$Advanced$backtrackable = function (_v0) {
	var parse = _v0;
	return function (s0) {
		var _v1 = parse(s0);
		if (_v1.$ === 1) {
			var x = _v1.b;
			return A2($elm$parser$Parser$Advanced$Bad, false, x);
		} else {
			var a = _v1.b;
			var s1 = _v1.c;
			return A3($elm$parser$Parser$Advanced$Good, false, a, s1);
		}
	};
};
var $elm$parser$Parser$backtrackable = $elm$parser$Parser$Advanced$backtrackable;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$infixSet = $elm$core$Set$fromList(
	_List_fromArray(
		['+', '-', '/', '*', '=', '.', '$', '<', '>', ':', '&', '|', '^', '?', '%', '#', '@', '~', '!', ',']));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isInfixChar = function (c) {
	return A2($elm$core$Set$member, c, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$infixSet);
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$infixParser = A2(
	$elm$parser$Parser$map,
	function (b) {
		return _Utils_Tuple2(
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(5),
			b);
	},
	$elm$parser$Parser$getChompedString(
		A2(
			$elm$parser$Parser$ignorer,
			A2(
				$elm$parser$Parser$ignorer,
				A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$succeed(0),
					$elm$parser$Parser$backtrackable(
						$elm$parser$Parser$symbol('('))),
				$elm$parser$Parser$backtrackable(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$chompIfThenWhile($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isInfixChar))),
			$elm$parser$Parser$backtrackable(
				$elm$parser$Parser$symbol(')')))));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$keywordSet = $elm$core$Set$fromList(
	_List_fromArray(
		['as', 'where', 'let', 'in', 'if', 'else', 'then', 'case', 'of', 'type', 'alias']));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isKeyword = function (str) {
	return A2($elm$core$Set$member, str, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$keywordSet);
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isNumber = function (c) {
	return $elm$core$Char$isDigit(c) || (c === '.');
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$positiveNumber = A2(
	$elm$parser$Parser$ignorer,
	A2(
		$elm$parser$Parser$ignorer,
		$elm$parser$Parser$succeed(0),
		$elm$parser$Parser$chompIf($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isNumber)),
	$elm$parser$Parser$chompWhile($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isNumber));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$negativeNumber = A2(
	$elm$parser$Parser$ignorer,
	A2(
		$elm$parser$Parser$ignorer,
		$elm$parser$Parser$succeed(0),
		$elm$parser$Parser$backtrackable(
			$elm$parser$Parser$symbol('-'))),
	$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$positiveNumber);
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$number = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$positiveNumber, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$negativeNumber]));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$variable = $elm$parser$Parser$getChompedString(
	A2(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$thenChompWhile,
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isVariableChar,
		$elm$parser$Parser$chompIf($elm$core$Char$isLower)));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$weirdText = $elm$parser$Parser$getChompedString(
	$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$chompIfThenWhile($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isVariableChar));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$functionBodyContent = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$parser$Parser$map,
			function (b) {
				return _Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(7),
					b);
			},
			$elm$parser$Parser$getChompedString($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$number)),
			A2(
			$elm$parser$Parser$map,
			$elm$core$Basics$always(
				_Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(3),
					'()')),
			$elm$parser$Parser$symbol('()')),
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$infixParser,
			A2(
			$elm$parser$Parser$map,
			function (b) {
				return _Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(1),
					b);
			},
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$basicSymbol),
			A2(
			$elm$parser$Parser$map,
			function (b) {
				return _Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(2),
					b);
			},
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$groupSymbol),
			A2(
			$elm$parser$Parser$map,
			function (b) {
				return _Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(3),
					b);
			},
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$capitalized),
			A2(
			$elm$parser$Parser$map,
			function (n) {
				return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isKeyword(n) ? _Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(4),
					n) : _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, n);
			},
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$variable),
			A2(
			$elm$parser$Parser$map,
			function (b) {
				return _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, b);
			},
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$weirdText)
		]));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$String = 0;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$escapableSet = $elm$core$Set$fromList(
	_List_fromArray(
		['\'', '\"', '\\', 'n', 'r', 't', 'b', 'f', 'v']));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isEscapableChar = function (c) {
	return A2($elm$core$Set$member, c, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$escapableSet);
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$escapable = A2(
	$elm$parser$Parser$ignorer,
	A2(
		$elm$parser$Parser$ignorer,
		$elm$parser$Parser$succeed(0),
		$elm$parser$Parser$backtrackable(
			$elm$parser$Parser$symbol('\\'))),
	$elm$parser$Parser$chompIf($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isEscapableChar));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$elmEscapable = A2(
	$elm$parser$Parser$map,
	function (b) {
		return _List_fromArray(
			[
				_Utils_Tuple2(
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(3),
				b)
			]);
	},
	$elm$parser$Parser$getChompedString($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$escapable));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isEscapable = function (c) {
	return c === '\\';
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$stringDelimiter = {
	e7: function (b) {
		return _Utils_Tuple2(
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(0),
			b);
	},
	fb: '\"',
	fs: _List_fromArray(
		[$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$lineBreakList, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$elmEscapable]),
	fv: false,
	fw: function (c) {
		return !($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isLineBreak(c) || $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isEscapable(c));
	},
	f3: '\"'
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$doubleQuote = $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimited($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$stringDelimiter);
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$quote = $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimited(
	_Utils_update(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$stringDelimiter,
		{fb: '\'', f3: '\''}));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$tripleDoubleQuote = $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$delimited(
	_Utils_update(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$stringDelimiter,
		{fb: '\"\"\"', f3: '\"\"\"'}));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$stringLiteral = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$tripleDoubleQuote, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$doubleQuote, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$quote]));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$lineBreak = A2(
	$elm$parser$Parser$map,
	function (_v0) {
		return _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$LineBreak, '\n');
	},
	$elm$parser$Parser$symbol('\n'));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$space = A2(
	$elm$parser$Parser$map,
	function (b) {
		return _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, b);
	},
	$elm$parser$Parser$getChompedString(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$chompIfThenWhile($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isSpace)));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$checkContext = function (revTokens) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$whitespaceOrCommentStep(revTokens),
				$elm$parser$Parser$succeed(
				$elm$parser$Parser$Done(revTokens))
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$whitespaceOrCommentStep = function (revTokens) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$parser$Parser$map,
				function (n) {
					return $elm$parser$Parser$Loop(
						A2($elm$core$List$cons, n, revTokens));
				},
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$space),
				A2(
				$elm$parser$Parser$andThen,
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$checkContext,
				A2(
					$elm$parser$Parser$map,
					function (n) {
						return A2($elm$core$List$cons, n, revTokens);
					},
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$lineBreak)),
				A2(
				$elm$parser$Parser$map,
				function (n) {
					return $elm$parser$Parser$Loop(
						_Utils_ap(n, revTokens));
				},
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$comment)
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$functionBody = function (revTokens) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$whitespaceOrCommentStep(revTokens),
				A2(
				$elm$parser$Parser$map,
				function (ns) {
					return $elm$parser$Parser$Loop(
						_Utils_ap(ns, revTokens));
				},
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$stringLiteral),
				A2(
				$elm$parser$Parser$map,
				function (n) {
					return $elm$parser$Parser$Loop(
						A2($elm$core$List$cons, n, revTokens));
				},
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$functionBodyContent),
				$elm$parser$Parser$succeed(
				$elm$parser$Parser$Done(revTokens))
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$TypeSignature = 6;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$fnSigIsNotRelevant = function (c) {
	return !($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isWhitespace(c) || ((c === '(') || ((c === ')') || ((c === '-') || (c === ',')))));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$fnSigContentHelp = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$parser$Parser$map,
			$elm$core$Basics$always(
				_Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(6),
					'()')),
			$elm$parser$Parser$symbol('()')),
			A2(
			$elm$parser$Parser$map,
			$elm$core$Basics$always(
				_Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(1),
					'->')),
			$elm$parser$Parser$symbol('->')),
			A2(
			$elm$parser$Parser$map,
			function (b) {
				return _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, b);
			},
			$elm$parser$Parser$getChompedString(
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$chompIfThenWhile(
					function (c) {
						return (c === '(') || ((c === ')') || ((c === '-') || (c === ',')));
					}))),
			A2(
			$elm$parser$Parser$map,
			function (b) {
				return _Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(6),
					b);
			},
			$elm$parser$Parser$getChompedString(
				A2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$thenChompWhile,
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$fnSigIsNotRelevant,
					$elm$parser$Parser$chompIf($elm$core$Char$isUpper)))),
			A2(
			$elm$parser$Parser$map,
			function (b) {
				return _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, b);
			},
			$elm$parser$Parser$getChompedString(
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$chompIfThenWhile($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$fnSigIsNotRelevant)))
		]));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$fnSigContent = function (revTokens) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$whitespaceOrCommentStep(revTokens),
				A2(
				$elm$parser$Parser$map,
				function (n) {
					return $elm$parser$Parser$Loop(
						A2($elm$core$List$cons, n, revTokens));
				},
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$fnSigContentHelp),
				$elm$parser$Parser$succeed(
				$elm$parser$Parser$Done(revTokens))
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$functionSignature = function (revTokens) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$parser$Parser$map,
				$elm$parser$Parser$Done,
				A2(
					$elm$parser$Parser$andThen,
					function (ns) {
						return A2($elm$parser$Parser$loop, ns, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$fnSigContent);
					},
					A2(
						$elm$parser$Parser$map,
						$elm$core$Basics$always(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(1),
									':'),
								revTokens)),
						$elm$parser$Parser$symbol(':')))),
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$whitespaceOrCommentStep(revTokens),
				A2(
				$elm$parser$Parser$map,
				$elm$parser$Parser$Done,
				A2($elm$parser$Parser$loop, revTokens, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$functionBody)),
				$elm$parser$Parser$succeed(
				$elm$parser$Parser$Done(revTokens))
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isCommentChar = function (c) {
	return (c === '-') || (c === '{');
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$commentChar = $elm$parser$Parser$getChompedString(
	$elm$parser$Parser$chompIf($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isCommentChar));
var $elm$parser$Parser$ExpectingKeyword = function (a) {
	return {$: 9, a: a};
};
var $elm$parser$Parser$Advanced$keyword = function (_v0) {
	var kwd = _v0.a;
	var expecting = _v0.b;
	var progress = !$elm$core$String$isEmpty(kwd);
	return function (s) {
		var _v1 = A5($elm$parser$Parser$Advanced$isSubString, kwd, s.h8, s.aj, s.e3, s.c);
		var newOffset = _v1.a;
		var newRow = _v1.b;
		var newCol = _v1.c;
		return (_Utils_eq(newOffset, -1) || (0 <= A3(
			$elm$parser$Parser$Advanced$isSubChar,
			function (c) {
				return $elm$core$Char$isAlphaNum(c) || (c === '_');
			},
			newOffset,
			s.c))) ? A2(
			$elm$parser$Parser$Advanced$Bad,
			false,
			A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : A3(
			$elm$parser$Parser$Advanced$Good,
			progress,
			0,
			{e3: newCol, f: s.f, g: s.g, h8: newOffset, aj: newRow, c: s.c});
	};
};
var $elm$parser$Parser$keyword = function (kwd) {
	return $elm$parser$Parser$Advanced$keyword(
		A2(
			$elm$parser$Parser$Advanced$Token,
			kwd,
			$elm$parser$Parser$ExpectingKeyword(kwd)));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$modDecIsNotRelevant = function (c) {
	return !($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isWhitespace(c) || ($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isCommentChar(c) || (c === '(')));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$mdpIsNotRelevant = function (c) {
	return !($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isWhitespace(c) || ($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isCommentChar(c) || ((c === '(') || ((c === ')') || ((c === ',') || (c === '.'))))));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$mdpnIsSpecialChar = function (c) {
	return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$isLineBreak(c) || ($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isCommentChar(c) || ((c === '(') || (c === ')')));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$checkContextNested = function (_v1) {
	var nestLevel = _v1.a;
	var revTokens = _v1.b;
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$whitespaceOrCommentStepNested(
				_Utils_Tuple2(nestLevel, revTokens)),
				$elm$parser$Parser$succeed(
				$elm$parser$Parser$Done(revTokens))
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$whitespaceOrCommentStepNested = function (_v0) {
	var nestLevel = _v0.a;
	var revTokens = _v0.b;
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$parser$Parser$map,
				function (n) {
					return $elm$parser$Parser$Loop(
						_Utils_Tuple2(
							nestLevel,
							A2($elm$core$List$cons, n, revTokens)));
				},
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$space),
				A2(
				$elm$parser$Parser$andThen,
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$checkContextNested,
				A2(
					$elm$parser$Parser$map,
					function (n) {
						return _Utils_Tuple2(
							nestLevel,
							A2($elm$core$List$cons, n, revTokens));
					},
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$lineBreak)),
				A2(
				$elm$parser$Parser$map,
				function (n) {
					return $elm$parser$Parser$Loop(
						_Utils_Tuple2(
							nestLevel,
							_Utils_ap(n, revTokens)));
				},
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$comment)
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$modDecParNest = function (_v0) {
	var nestLevel = _v0.a;
	var revTokens = _v0.b;
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$whitespaceOrCommentStepNested(
				_Utils_Tuple2(nestLevel, revTokens)),
				A2(
				$elm$parser$Parser$map,
				function (ns) {
					return $elm$parser$Parser$Loop(
						_Utils_Tuple2(nestLevel + 1, ns));
				},
				A2(
					$elm$parser$Parser$map,
					$elm$core$Basics$always(
						A2(
							$elm$core$List$cons,
							_Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, '('),
							revTokens)),
					$elm$parser$Parser$symbol('('))),
				A2(
				$elm$parser$Parser$map,
				function (ns) {
					return (!nestLevel) ? $elm$parser$Parser$Done(ns) : $elm$parser$Parser$Loop(
						_Utils_Tuple2(nestLevel - 1, ns));
				},
				A2(
					$elm$parser$Parser$map,
					$elm$core$Basics$always(
						A2(
							$elm$core$List$cons,
							_Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, ')'),
							revTokens)),
					$elm$parser$Parser$symbol(')'))),
				A2(
				$elm$parser$Parser$map,
				function (n) {
					return $elm$parser$Parser$Loop(
						_Utils_Tuple2(
							nestLevel,
							A2($elm$core$List$cons, n, revTokens)));
				},
				$elm$parser$Parser$oneOf(
					_List_fromArray(
						[
							A2(
							$elm$parser$Parser$map,
							function (b) {
								return _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, b);
							},
							$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$commentChar),
							A2(
							$elm$parser$Parser$map,
							function (s) {
								return _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, s);
							},
							$elm$parser$Parser$getChompedString(
								$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$chompIfThenWhile(
									A2($elm$core$Basics$composeL, $elm$core$Basics$not, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$mdpnIsSpecialChar))))
						]))),
				$elm$parser$Parser$succeed(
				$elm$parser$Parser$Done(revTokens))
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$modDecParentheses = function (revTokens) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$whitespaceOrCommentStep(revTokens),
				A2(
				$elm$parser$Parser$map,
				$elm$parser$Parser$Done,
				A2(
					$elm$parser$Parser$map,
					$elm$core$Basics$always(
						A2(
							$elm$core$List$cons,
							_Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, ')'),
							revTokens)),
					$elm$parser$Parser$symbol(')'))),
				A2(
				$elm$parser$Parser$map,
				function (n) {
					return $elm$parser$Parser$Loop(
						A2($elm$core$List$cons, n, revTokens));
				},
				$elm$parser$Parser$oneOf(
					_List_fromArray(
						[
							$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$infixParser,
							A2(
							$elm$parser$Parser$map,
							function (b) {
								return _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, b);
							},
							$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$commentChar),
							A2(
							$elm$parser$Parser$map,
							function (b) {
								return _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, b);
							},
							$elm$parser$Parser$getChompedString(
								$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$chompIfThenWhile(
									function (c) {
										return (c === ',') || (c === '.');
									}))),
							A2(
							$elm$parser$Parser$map,
							function (b) {
								return _Utils_Tuple2(
									$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(6),
									b);
							},
							$elm$parser$Parser$getChompedString(
								A2(
									$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$thenChompWhile,
									$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$mdpIsNotRelevant,
									$elm$parser$Parser$chompIf($elm$core$Char$isUpper)))),
							A2(
							$elm$parser$Parser$map,
							function (b) {
								return _Utils_Tuple2(
									$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(5),
									b);
							},
							$elm$parser$Parser$getChompedString(
								$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$chompIfThenWhile($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$mdpIsNotRelevant)))
						]))),
				A2(
				$elm$parser$Parser$map,
				$elm$parser$Parser$Loop,
				A2(
					$elm$parser$Parser$andThen,
					function (n) {
						return A2(
							$elm$parser$Parser$loop,
							_Utils_Tuple2(0, n),
							$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$modDecParNest);
					},
					A2(
						$elm$parser$Parser$map,
						$elm$core$Basics$always(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, '('),
								revTokens)),
						$elm$parser$Parser$symbol('(')))),
				$elm$parser$Parser$succeed(
				$elm$parser$Parser$Done(revTokens))
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$moduleDeclaration = function (revTokens) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$whitespaceOrCommentStep(revTokens),
				A2(
				$elm$parser$Parser$map,
				$elm$parser$Parser$Loop,
				A2(
					$elm$parser$Parser$andThen,
					function (n) {
						return A2($elm$parser$Parser$loop, n, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$modDecParentheses);
					},
					A2(
						$elm$parser$Parser$map,
						$elm$core$Basics$always(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, '('),
								revTokens)),
						$elm$parser$Parser$symbol('(')))),
				A2(
				$elm$parser$Parser$map,
				function (n) {
					return $elm$parser$Parser$Loop(
						A2($elm$core$List$cons, n, revTokens));
				},
				$elm$parser$Parser$oneOf(
					_List_fromArray(
						[
							A2(
							$elm$parser$Parser$map,
							function (b) {
								return _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, b);
							},
							$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$commentChar),
							A2(
							$elm$parser$Parser$map,
							$elm$core$Basics$always(
								_Utils_Tuple2(
									$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(4),
									'exposing')),
							$elm$parser$Parser$keyword('exposing')),
							A2(
							$elm$parser$Parser$map,
							$elm$core$Basics$always(
								_Utils_Tuple2(
									$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(4),
									'as')),
							$elm$parser$Parser$keyword('as')),
							A2(
							$elm$parser$Parser$map,
							function (b) {
								return _Utils_Tuple2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$Normal, b);
							},
							$elm$parser$Parser$getChompedString(
								$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Helpers$chompIfThenWhile($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$modDecIsNotRelevant)))
						]))),
				$elm$parser$Parser$succeed(
				$elm$parser$Parser$Done(revTokens))
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$portDeclarationHelp = F2(
	function (revTokens, str) {
		return (str === 'module') ? A2(
			$elm$parser$Parser$loop,
			A2(
				$elm$core$List$cons,
				_Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(4),
					str),
				revTokens),
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$moduleDeclaration) : A2(
			$elm$parser$Parser$loop,
			A2(
				$elm$core$List$cons,
				_Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(5),
					str),
				revTokens),
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$functionSignature);
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$portDeclaration = function (revTokens) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$whitespaceOrCommentStep(revTokens),
				A2(
				$elm$parser$Parser$map,
				$elm$parser$Parser$Done,
				A2(
					$elm$parser$Parser$andThen,
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$portDeclarationHelp(revTokens),
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$variable)),
				A2(
				$elm$parser$Parser$map,
				$elm$parser$Parser$Done,
				A2($elm$parser$Parser$loop, revTokens, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$functionBody)),
				$elm$parser$Parser$succeed(
				$elm$parser$Parser$Done(revTokens))
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$lineStartVariable = F2(
	function (revTokens, n) {
		return ((n === 'module') || (n === 'import')) ? A2(
			$elm$parser$Parser$loop,
			A2(
				$elm$core$List$cons,
				_Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(4),
					n),
				revTokens),
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$moduleDeclaration) : ((n === 'port') ? A2(
			$elm$parser$Parser$loop,
			A2(
				$elm$core$List$cons,
				_Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(4),
					n),
				revTokens),
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$portDeclaration) : ($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$isKeyword(n) ? A2(
			$elm$parser$Parser$loop,
			A2(
				$elm$core$List$cons,
				_Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(4),
					n),
				revTokens),
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$functionBody) : A2(
			$elm$parser$Parser$loop,
			A2(
				$elm$core$List$cons,
				_Utils_Tuple2(
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Type$C(5),
					n),
				revTokens),
			$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$functionSignature)));
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$mainLoop = function (revTokens) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$parser$Parser$map,
				function (n) {
					return $elm$parser$Parser$Loop(
						A2($elm$core$List$cons, n, revTokens));
				},
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$space),
				A2(
				$elm$parser$Parser$map,
				function (n) {
					return $elm$parser$Parser$Loop(
						A2($elm$core$List$cons, n, revTokens));
				},
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$lineBreak),
				A2(
				$elm$parser$Parser$map,
				function (n) {
					return $elm$parser$Parser$Loop(
						_Utils_ap(n, revTokens));
				},
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$comment),
				A2(
				$elm$parser$Parser$map,
				$elm$parser$Parser$Loop,
				A2(
					$elm$parser$Parser$andThen,
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$lineStartVariable(revTokens),
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$variable)),
				A2(
				$elm$parser$Parser$map,
				$elm$parser$Parser$Loop,
				A2(
					$elm$parser$Parser$andThen,
					function (s) {
						return A2(
							$elm$parser$Parser$loop,
							_Utils_ap(s, revTokens),
							$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$functionBody);
					},
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$stringLiteral)),
				A2(
				$elm$parser$Parser$map,
				$elm$parser$Parser$Loop,
				A2(
					$elm$parser$Parser$andThen,
					function (s) {
						return A2(
							$elm$parser$Parser$loop,
							A2($elm$core$List$cons, s, revTokens),
							$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$functionBody);
					},
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$functionBodyContent)),
				$elm$parser$Parser$succeed(
				$elm$parser$Parser$Done(revTokens))
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$toRevTokens = A2($elm$parser$Parser$loop, _List_Nil, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$mainLoop);
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$toLines = A2(
	$elm$core$Basics$composeR,
	$elm$parser$Parser$run($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$toRevTokens),
	$elm$core$Result$map(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Helpers$toLines($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$syntaxToStyle)));
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$elm = A2(
	$elm$core$Basics$composeR,
	$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$toLines,
	$elm$core$Result$map($elm$core$Basics$identity));
var $elm$core$String$lines = _String_lines;
var $elm$core$String$trimLeft = _String_trimLeft;
var $author$project$Ui$Code$fixIndent = function (code) {
	return function (xs) {
		var smallest = A2(
			$elm$core$Maybe$withDefault,
			0,
			$elm$core$List$minimum(
				A2($elm$core$List$filterMap, $elm$core$Tuple$first, xs)));
		return A2(
			$elm$core$String$join,
			'\n',
			A2(
				$elm$core$List$map,
				function (_v0) {
					var x = _v0.b;
					return A2($elm$core$String$dropLeft, smallest, x);
				},
				xs));
	}(
		A2(
			$elm$core$List$map,
			function (x) {
				var trimmed = $elm$core$String$trimLeft(x);
				var indent = $elm$core$String$length(x) - $elm$core$String$length(trimmed);
				return _Utils_Tuple2(
					(!$elm$core$String$length(trimmed)) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(indent),
					x);
			},
			A2(
				$elm$core$List$drop,
				1,
				$elm$core$String$lines(code))));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme = $elm$core$Basics$identity;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex = function (a) {
	return {$: 1, a: a};
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$DefaultColor = {$: 0};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$backgroundColor = function (background) {
	return {gT: background, aR: false, aS: false, c1: false, V: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$DefaultColor};
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$noEmphasis = F2(
	function (text, background) {
		return {gT: background, aR: false, aS: false, c1: false, V: text};
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$textColor = function (text) {
	return {gT: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$DefaultColor, aR: false, aS: false, c1: false, V: text};
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$GitHub$requiredStyles = {
	a2: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$backgroundColor(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#eaffea')),
	a7: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$textColor(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#969896')),
	be: A2(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$noEmphasis,
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#24292e'),
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#ffffff')),
	bf: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$backgroundColor(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#ffecec')),
	hE: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$backgroundColor(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#fffbdd')),
	c7: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$textColor(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#005cc5')),
	c8: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$textColor(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#df5000')),
	c9: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$textColor(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#d73a49')),
	da: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$textColor(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#0086b3')),
	db: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$textColor(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#63a35c')),
	dc: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$textColor(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#005cc5')),
	dd: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$textColor(
		$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Hex('#795da3'))
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$GitHub$theme = {hi: _List_Nil, im: $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$GitHub$requiredStyles};
var $elm$core$List$intersperse = F2(
	function (sep, xs) {
		if (!xs.b) {
			return _List_Nil;
		} else {
			var hd = xs.a;
			var tl = xs.b;
			var step = F2(
				function (x, rest) {
					return A2(
						$elm$core$List$cons,
						sep,
						A2($elm$core$List$cons, x, rest));
				});
			var spersed = A3($elm$core$List$foldr, step, _List_Nil, tl);
			return A2($elm$core$List$cons, hd, spersed);
		}
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Css$atRuleToFragment = function (a) {
	switch (a) {
		case 0:
			return _Utils_Tuple2(4, 'css-ar-i');
		case 1:
			return _Utils_Tuple2(6, 'css-ar-p');
		case 2:
			return _Utils_Tuple2(4, 'css-ar-k');
		default:
			return _Utils_Tuple2(5, 'css-ar-v');
	}
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$Style7 = 8;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Css$attributeSelectorToFragment = function (att) {
	switch (att) {
		case 0:
			return _Utils_Tuple2(6, 'css-s-a-an');
		case 1:
			return _Utils_Tuple2(3, 'css-s-a-av');
		default:
			return _Utils_Tuple2(4, 'css-s-a-o');
	}
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Css$selectorToFragment = function (s) {
	switch (s.$) {
		case 0:
			return _Utils_Tuple2(4, 'css-s-e');
		case 1:
			return _Utils_Tuple2(6, 'css-s-i');
		case 2:
			return _Utils_Tuple2(6, 'css-s-cl');
		case 3:
			return _Utils_Tuple2(8, 'css-s-c');
		case 4:
			return _Utils_Tuple2(4, 'css-s-u');
		case 5:
			var att = s.a;
			return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Css$attributeSelectorToFragment(att);
		case 6:
			return _Utils_Tuple2(0, 'css-s-pe');
		default:
			return _Utils_Tuple2(0, 'css-s-pc');
	}
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Css$syntaxToStyle = function (syntax) {
	switch (syntax.$) {
		case 0:
			return _Utils_Tuple2(3, 'css-s');
		case 1:
			var a = syntax.a;
			return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Css$atRuleToFragment(a);
		case 2:
			var s = syntax.a;
			return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Css$selectorToFragment(s);
		case 3:
			return _Utils_Tuple2(5, 'css-p');
		case 4:
			return _Utils_Tuple2(5, 'css-pv');
		case 5:
			return _Utils_Tuple2(2, 'css-n');
		default:
			return _Utils_Tuple2(4, 'css-u');
	}
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Javascript$syntaxToStyle = function (syntax) {
	switch (syntax) {
		case 0:
			return _Utils_Tuple2(2, 'js-n');
		case 1:
			return _Utils_Tuple2(3, 'js-s');
		case 2:
			return _Utils_Tuple2(4, 'js-k');
		case 3:
			return _Utils_Tuple2(5, 'js-dk');
		case 4:
			return _Utils_Tuple2(5, 'js-fe');
		case 5:
			return _Utils_Tuple2(6, 'js-f');
		case 6:
			return _Utils_Tuple2(7, 'js-lk');
		case 7:
			return _Utils_Tuple2(8, 'js-p');
		default:
			return _Utils_Tuple2(6, 'js-ce');
	}
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$NoLang$syntaxToStyle = function (syntax) {
	return _Utils_Tuple2(0, 'nolang');
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Python$syntaxToStyle = function (syntax) {
	switch (syntax) {
		case 0:
			return _Utils_Tuple2(2, 'py-n');
		case 1:
			return _Utils_Tuple2(3, 'py-s');
		case 2:
			return _Utils_Tuple2(4, 'py-k');
		case 3:
			return _Utils_Tuple2(5, 'py-dk');
		case 5:
			return _Utils_Tuple2(6, 'py-f');
		case 6:
			return _Utils_Tuple2(7, 'py-lk');
		case 7:
			return _Utils_Tuple2(8, 'py-p');
		default:
			return _Utils_Tuple2(0, 'py-fe');
	}
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Sql$syntaxToStyle = function (syntax) {
	switch (syntax) {
		case 0:
			return _Utils_Tuple2(2, 'sql-n');
		case 1:
			return _Utils_Tuple2(3, 'sql-s');
		case 2:
			return _Utils_Tuple2(4, 'sql-k');
		case 3:
			return _Utils_Tuple2(5, 'sql-o');
		case 4:
			return _Utils_Tuple2(6, 'sql-f');
		case 5:
			return _Utils_Tuple2(7, 'sql-p');
		default:
			return _Utils_Tuple2(8, 'sql-l');
	}
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Xml$syntaxToStyle = function (syntax) {
	switch (syntax) {
		case 0:
			return _Utils_Tuple2(4, 'xml-t');
		case 1:
			return _Utils_Tuple2(6, 'xml-a');
		default:
			return _Utils_Tuple2(3, 'xlm-av');
	}
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$Type$syntaxToSelector = function (syntax) {
	switch (syntax.$) {
		case 0:
			var elmSyntax = syntax.a;
			return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Elm$syntaxToStyle(elmSyntax).b;
		case 1:
			var xmlSyntax = syntax.a;
			return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Xml$syntaxToStyle(xmlSyntax).b;
		case 2:
			var jsSyntax = syntax.a;
			return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Javascript$syntaxToStyle(jsSyntax).b;
		case 3:
			var cssSyntax = syntax.a;
			return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Css$syntaxToStyle(cssSyntax).b;
		case 4:
			var pythonSyntax = syntax.a;
			return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Python$syntaxToStyle(pythonSyntax).b;
		case 5:
			var sqlSyntax = syntax.a;
			return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$Sql$syntaxToStyle(sqlSyntax).b;
		default:
			var noLangSyntax = syntax.a;
			return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Language$NoLang$syntaxToStyle(noLangSyntax).b;
	}
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$Type$syntaxesToSelectors = function (syntaxes) {
	return $elm$core$String$concat(
		A2(
			$elm$core$List$intersperse,
			', ',
			A2(
				$elm$core$List$map,
				$elm$core$Basics$append('.elmsh-'),
				A2($elm$core$List$map, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$Type$syntaxToSelector, syntaxes))));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$colorToCss = F2(
	function (property, color) {
		switch (color.$) {
			case 0:
				return '';
			case 1:
				var hex = color.a;
				return property + (hex + ';');
			case 2:
				var r = color.a;
				var g = color.b;
				var b = color.c;
				return $elm$core$String$concat(
					_List_fromArray(
						[
							property,
							'rgb(',
							$elm$core$String$fromInt(r),
							', ',
							$elm$core$String$fromInt(g),
							',',
							$elm$core$String$fromInt(b),
							');'
						]));
			default:
				var r = color.a;
				var g = color.b;
				var b = color.c;
				var a = color.d;
				return $elm$core$String$concat(
					_List_fromArray(
						[
							property,
							'rgba(',
							$elm$core$String$fromInt(r),
							', ',
							$elm$core$String$fromInt(g),
							',',
							$elm$core$String$fromInt(b),
							', ',
							$elm$core$String$fromFloat(a),
							');'
						]));
		}
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$emptyIfFalse = F2(
	function (bool, str) {
		return bool ? str : '';
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$styleToCss = function (_v0) {
	var isBold = _v0.aR;
	var isItalic = _v0.aS;
	var isUnderline = _v0.c1;
	var text = _v0.V;
	var background = _v0.gT;
	return $elm$core$String$concat(
		_List_fromArray(
			[
				A2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$emptyIfFalse, isBold, 'font-weight: bold;'),
				A2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$emptyIfFalse, isItalic, 'font-style: italic;'),
				A2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$emptyIfFalse, isUnderline, 'text-decoration: underline;'),
				A2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$colorToCss, 'color: ', text),
				A2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$colorToCss, 'background: ', background)
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$toCssClass = function (_v0) {
	var selectors = _v0.a;
	var style = _v0.b;
	return $elm$core$String$isEmpty(selectors) ? '' : (selectors + (' {' + ($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$styleToCss(style) + '}')));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$toCss = function (classes) {
	return $elm$core$String$concat(
		A2($elm$core$List$map, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$toCssClass, classes));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$Type$toCss = function (_v0) {
	var requiredStyles = _v0.im;
	var customStyles = _v0.hi;
	return $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Style$toCss(
		_Utils_ap(
			_List_fromArray(
				[
					_Utils_Tuple2('.elmsh', requiredStyles.be),
					_Utils_Tuple2('.elmsh-hl', requiredStyles.hE),
					_Utils_Tuple2('.elmsh-add', requiredStyles.a2),
					_Utils_Tuple2('.elmsh-del', requiredStyles.bf),
					_Utils_Tuple2('.elmsh-comm', requiredStyles.a7),
					_Utils_Tuple2('.elmsh1', requiredStyles.c7),
					_Utils_Tuple2('.elmsh2', requiredStyles.c8),
					_Utils_Tuple2('.elmsh3', requiredStyles.c9),
					_Utils_Tuple2('.elmsh4', requiredStyles.da),
					_Utils_Tuple2('.elmsh5', requiredStyles.db),
					_Utils_Tuple2('.elmsh6', requiredStyles.dc),
					_Utils_Tuple2('.elmsh7', requiredStyles.dd)
				]),
			A2(
				$elm$core$List$map,
				$elm$core$Tuple$mapFirst($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$Type$syntaxesToSelectors),
				customStyles)));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$GitHub$css = $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$Type$toCss($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$GitHub$theme);
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$gitHub = $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$GitHub$css;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$gitHub = $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Theme$gitHub;
var $elm$html$Html$pre = _VirtualDom_node('pre');
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Add = 1;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Del = 2;
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$Line$Normal = 0;
var $elm$html$Html$Attributes$classList = function (classes) {
	return $elm$html$Html$Attributes$class(
		A2(
			$elm$core$String$join,
			' ',
			A2(
				$elm$core$List$map,
				$elm$core$Tuple$first,
				A2($elm$core$List$filter, $elm$core$Tuple$second, classes))));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$View$requiredStyleToString = function (required) {
	return 'elmsh' + function () {
		switch (required) {
			case 0:
				return '0';
			case 1:
				return '-comm';
			case 2:
				return '1';
			case 3:
				return '2';
			case 4:
				return '3';
			case 5:
				return '4';
			case 6:
				return '5';
			case 7:
				return '6';
			default:
				return '7';
		}
	}();
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$View$fragmentView = function (_v0) {
	var text = _v0.V;
	var requiredStyle = _v0.il;
	var additionalClass = _v0.gD;
	return ((!requiredStyle) && $elm$core$String$isEmpty(additionalClass)) ? $elm$html$Html$text(text) : A2(
		$elm$html$Html$span,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$classList(
				_List_fromArray(
					[
						_Utils_Tuple2(
						$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$View$requiredStyleToString(requiredStyle),
						!(!requiredStyle)),
						_Utils_Tuple2('elmsh-' + additionalClass, additionalClass !== '')
					]))
			]),
		_List_fromArray(
			[
				$elm$html$Html$text(text)
			]));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$View$lineView = F3(
	function (start, index, _v0) {
		var fragments = _v0.hA;
		var highlight = _v0.hE;
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$classList(
					_List_fromArray(
						[
							_Utils_Tuple2('elmsh-line', true),
							_Utils_Tuple2(
							'elmsh-hl',
							_Utils_eq(
								highlight,
								$elm$core$Maybe$Just(0))),
							_Utils_Tuple2(
							'elmsh-add',
							_Utils_eq(
								highlight,
								$elm$core$Maybe$Just(1))),
							_Utils_Tuple2(
							'elmsh-del',
							_Utils_eq(
								highlight,
								$elm$core$Maybe$Just(2)))
						])),
					A2(
					$elm$html$Html$Attributes$attribute,
					'data-elmsh-lc',
					$elm$core$String$fromInt(start + index))
				]),
			A2($elm$core$List$map, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$View$fragmentView, fragments));
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$View$toInlineHtml = function (lines) {
	return A2(
		$elm$html$Html$code,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class('elmsh')
			]),
		$elm$core$List$concat(
			A2(
				$elm$core$List$map,
				function (_v0) {
					var highlight = _v0.hE;
					var fragments = _v0.hA;
					return _Utils_eq(highlight, $elm$core$Maybe$Nothing) ? A2($elm$core$List$map, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$View$fragmentView, fragments) : _List_fromArray(
						[
							A2(
							$elm$html$Html$span,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$classList(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'elmsh-hl',
											_Utils_eq(
												highlight,
												$elm$core$Maybe$Just(0))),
											_Utils_Tuple2(
											'elmsh-add',
											_Utils_eq(
												highlight,
												$elm$core$Maybe$Just(1))),
											_Utils_Tuple2(
											'elmsh-del',
											_Utils_eq(
												highlight,
												$elm$core$Maybe$Just(2)))
										]))
								]),
							A2($elm$core$List$map, $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$View$fragmentView, fragments))
						]);
				},
				lines)));
};
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$View$toBlockHtml = F2(
	function (maybeStart, lines) {
		if (maybeStart.$ === 1) {
			return A2(
				$elm$html$Html$pre,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('elmsh')
					]),
				_List_fromArray(
					[
						$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$View$toInlineHtml(lines)
					]));
		} else {
			var start = maybeStart.a;
			return A2(
				$elm$html$Html$pre,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('elmsh')
					]),
				$elm$core$List$singleton(
					A2(
						$elm$html$Html$code,
						_List_Nil,
						A2(
							$elm$core$List$indexedMap,
							$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$View$lineView(start),
							lines))));
		}
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$toBlockHtml = F2(
	function (maybeStart, _v0) {
		var lines = _v0;
		return A2($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$View$toBlockHtml, maybeStart, lines);
	});
var $pablohirafuji$elm_syntax_highlight$SyntaxHighlight$useTheme = function (_v0) {
	var theme = _v0;
	return A3(
		$elm$html$Html$node,
		'style',
		_List_Nil,
		_List_fromArray(
			[
				$elm$html$Html$text(theme)
			]));
};
var $elm$core$Result$withDefault = F2(
	function (def, result) {
		if (!result.$) {
			var a = result.a;
			return a;
		} else {
			return def;
		}
	});
var $author$project$Ui$Code$viewCode = function (code) {
	return A2(
		$elm$html$Html$div,
		_List_Nil,
		_List_fromArray(
			[
				$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$useTheme($pablohirafuji$elm_syntax_highlight$SyntaxHighlight$gitHub),
				A2(
				$elm$core$Result$withDefault,
				A2(
					$elm$html$Html$pre,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$code,
							_List_Nil,
							_List_fromArray(
								[
									$elm$html$Html$text(code)
								]))
						])),
				A2(
					$elm$core$Result$map,
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$toBlockHtml(
						$elm$core$Maybe$Just(1)),
					$pablohirafuji$elm_syntax_highlight$SyntaxHighlight$elm(
						$author$project$Ui$Code$fixIndent(code))))
			]));
};
var $author$project$Ui$Code$view = function (code) {
	return A2(
		$mdgriffith$elm_ui$Element$el,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$htmlAttribute(
				A2($elm$html$Html$Attributes$style, 'white-space', 'pre')),
				$mdgriffith$elm_ui$Element$htmlAttribute(
				A2($elm$html$Html$Attributes$style, 'padding', '0 20px')),
				$mdgriffith$elm_ui$Element$htmlAttribute(
				A2($elm$html$Html$Attributes$style, 'line-height', '1.3')),
				$mdgriffith$elm_ui$Element$scrollbarX,
				$mdgriffith$elm_ui$Element$Font$size(14),
				$mdgriffith$elm_ui$Element$Font$family(
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Font$typeface('Source Code Pro'),
						$mdgriffith$elm_ui$Element$Font$monospace
					])),
				$mdgriffith$elm_ui$Element$alignTop,
				$mdgriffith$elm_ui$Element$Background$color(
				A3($mdgriffith$elm_ui$Element$rgb255, 250, 250, 250))
			]),
		$mdgriffith$elm_ui$Element$html(
			A2($elm$html$Html$Lazy$lazy, $author$project$Ui$Code$viewCode, code)));
};
var $author$project$Page$Example$viewContent = function (model) {
	var viewToggler = A2(
		$mdgriffith$elm_ui$Element$Input$button,
		_List_fromArray(
			[$mdgriffith$elm_ui$Element$alignRight]),
		{
			dL: $mdgriffith$elm_ui$Element$text(
				model.aX ? 'Show essence' : 'Show full code'),
			ia: $elm$core$Maybe$Just($author$project$Page$Example$OnToggleCode)
		});
	var currentId = A2(
		$elm$core$Maybe$withDefault,
		$author$project$Examples$first,
		A2(
			$elm$core$Dict$get,
			_Utils_Tuple2(model.dU, model.eB),
			$elm$core$Dict$fromList(
				A2(
					$elm$core$List$map,
					function (id) {
						return _Utils_Tuple2(
							_Utils_Tuple2(
								$author$project$Ui$Thumbnail$urlify(
									$author$project$Examples$meta(id).g8),
								$author$project$Ui$Thumbnail$urlify(
									$author$project$Examples$meta(id).dO)),
							id);
					},
					$author$project$Examples$all))));
	var meta = $author$project$Examples$meta(currentId);
	var viewText = A2(
		$mdgriffith$elm_ui$Element$textColumn,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$spacing(20)
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$paragraph,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Font$size(28)
					]),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text(meta.dO)
					])),
				A2(
				$mdgriffith$elm_ui$Element$paragraph,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Font$size(14)
					]),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text(meta.ho)
					]))
			]));
	var viewChart = function (isCenter) {
		return A2(
			$mdgriffith$elm_ui$Element$el,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width(
					A2(
						$mdgriffith$elm_ui$Element$minimum,
						300,
						A2($mdgriffith$elm_ui$Element$maximum, 320, $mdgriffith$elm_ui$Element$fill))),
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
					isCenter ? $mdgriffith$elm_ui$Element$centerX : $mdgriffith$elm_ui$Element$alignTop,
					$mdgriffith$elm_ui$Element$alignTop,
					$mdgriffith$elm_ui$Element$paddingEach(
					{a4: 40, c2: 0, c5: 0, di: 0})
				]),
			A2(
				$mdgriffith$elm_ui$Element$map,
				$author$project$Page$Example$OnExampleMsg,
				$mdgriffith$elm_ui$Element$html(
					A2($author$project$Examples$view, model.cY, currentId))));
	};
	var viewCode = $author$project$Ui$Code$view(
		model.aX ? $author$project$Examples$largeCode(currentId) : $author$project$Examples$smallCode(currentId));
	var _v0 = $author$project$Ui$Layout$screen(model.a$);
	switch (_v0) {
		case 2:
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$paddingEach(
						{a4: 0, c2: 0, c5: 0, di: 20}),
						$mdgriffith$elm_ui$Element$spacing(30)
					]),
				_List_fromArray(
					[
						viewText,
						viewToggler,
						A2(
						$mdgriffith$elm_ui$Element$row,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$spacing(50),
								$mdgriffith$elm_ui$Element$alignTop
							]),
						_List_fromArray(
							[
								viewChart(false),
								viewCode
							]))
					]));
		case 1:
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$paddingEach(
						{a4: 0, c2: 0, c5: 0, di: 20}),
						$mdgriffith$elm_ui$Element$spacing(30)
					]),
				_List_fromArray(
					[
						viewText,
						viewChart(true),
						viewToggler,
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
							]),
						viewCode)
					]));
		default:
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$paddingEach(
						{a4: 0, c2: 0, c5: 0, di: 20}),
						$mdgriffith$elm_ui$Element$spacing(30)
					]),
				_List_fromArray(
					[
						viewText,
						viewChart(true),
						viewToggler,
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
							]),
						viewCode)
					]));
	}
};
var $author$project$Page$Example$view = function (model) {
	return {
		dr: A2(
			$author$project$Ui$Layout$view,
			model.a$,
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$map,
					$author$project$Page$Example$MenuMsg,
					A2($author$project$Ui$Menu$small, model.a$, model.c4)),
					A2($author$project$Ui$Layout$heading, model.a$, 'Documentation'),
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							A2($mdgriffith$elm_ui$Element$paddingXY, 0, 20),
							$mdgriffith$elm_ui$Element$Font$size(14),
							$mdgriffith$elm_ui$Element$width(
							A2($mdgriffith$elm_ui$Element$maximum, 600, $mdgriffith$elm_ui$Element$fill))
						]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('This catalog is meant to document through example. For documentation of exact interface, see the '),
							A2(
							$mdgriffith$elm_ui$Element$link,
							_List_fromArray(
								[$mdgriffith$elm_ui$Element$Font$underline]),
							{
								dL: $mdgriffith$elm_ui$Element$text('official Elm documentation'),
								jq: 'https://package.elm-lang.org/packages/terezka/elm-charts/latest'
							}),
							$mdgriffith$elm_ui$Element$text('.')
						])),
					A2(
					$author$project$Ui$Tabs$view,
					model.a$,
					{
						gN: $author$project$Ui$Thumbnail$groups,
						iy: $author$project$Route$documentation + ('/' + model.dU),
						je: function ($) {
							return $.i5;
						},
						jf: A2(
							$elm$core$Basics$composeL,
							$author$project$Ui$Thumbnail$toUrlGroup,
							function ($) {
								return $.i5;
							})
					}),
					$author$project$Page$Example$viewContent(model)
				])),
		i5: 'elm-charts | Documentation'
	};
};
var $author$project$Page$GettingStarted$MenuMsg = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$GettingStarted$None = {$: 2};
var $mdgriffith$elm_ui$Internal$Flag$fontAlignment = $mdgriffith$elm_ui$Internal$Flag$flag(12);
var $mdgriffith$elm_ui$Element$Font$center = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontAlignment, $mdgriffith$elm_ui$Internal$Style$classes.iQ);
var $author$project$Page$GettingStarted$view = function (model) {
	return {
		dr: A2(
			$author$project$Ui$Layout$view,
			model.a$,
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$map,
					$author$project$Page$GettingStarted$MenuMsg,
					A2($author$project$Ui$Menu$small, model.a$, model.c4)),
					A2($author$project$Ui$Layout$heading, model.a$, 'Getting started'),
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$size(14),
							$mdgriffith$elm_ui$Element$width(
							A2($mdgriffith$elm_ui$Element$maximum, 600, $mdgriffith$elm_ui$Element$fill)),
							A2($mdgriffith$elm_ui$Element$paddingXY, 0, 20)
						]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('Here\'s how to make basic charts. If your needs exceed these, check out '),
							$mdgriffith$elm_ui$Element$text('the '),
							A2(
							$mdgriffith$elm_ui$Element$link,
							_List_fromArray(
								[$mdgriffith$elm_ui$Element$Font$underline]),
							{
								dL: $mdgriffith$elm_ui$Element$text('many other examples'),
								jq: $author$project$Route$documentation
							}),
							$mdgriffith$elm_ui$Element$text(' or the '),
							A2(
							$mdgriffith$elm_ui$Element$link,
							_List_fromArray(
								[$mdgriffith$elm_ui$Element$Font$underline]),
							{
								dL: $mdgriffith$elm_ui$Element$text('official Elm documentation'),
								jq: 'https://package.elm-lang.org/packages/terezka/elm-charts/latest'
							}),
							$mdgriffith$elm_ui$Element$text('. Install by running the following command in your project directory:')
						])),
					A2(
					$mdgriffith$elm_ui$Element$el,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$paddingEach(
							{a4: 50, c2: 0, c5: 0, di: 0})
						]),
					A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$Background$color(
								A3($mdgriffith$elm_ui$Element$rgb255, 250, 250, 250)),
								A2($mdgriffith$elm_ui$Element$paddingXY, 15, 10),
								$mdgriffith$elm_ui$Element$Font$family(
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$Font$typeface('Source Code Pro'),
										$mdgriffith$elm_ui$Element$Font$monospace
									]))
							]),
						$mdgriffith$elm_ui$Element$text('elm install terezka/elm-charts'))),
					function () {
					var viewTitle = function (title) {
						return A2(
							$mdgriffith$elm_ui$Element$paragraph,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$Font$size(24)
								]),
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$text(title)
								]));
					};
					var frame = F3(
						function (title, attr, els) {
							var _v7 = $author$project$Ui$Layout$screen(model.a$);
							switch (_v7) {
								case 2:
									return A2(
										$mdgriffith$elm_ui$Element$column,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
												$mdgriffith$elm_ui$Element$spacing(40)
											]),
										_List_fromArray(
											[
												viewTitle(title),
												A2($mdgriffith$elm_ui$Element$row, attr, els)
											]));
								case 1:
									return A2(
										$mdgriffith$elm_ui$Element$column,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
												$mdgriffith$elm_ui$Element$spacing(40)
											]),
										_List_fromArray(
											[
												viewTitle(title),
												A2($mdgriffith$elm_ui$Element$row, attr, els)
											]));
								default:
									return A2(
										$mdgriffith$elm_ui$Element$column,
										attr,
										A2(
											$elm$core$List$cons,
											viewTitle(title),
											els));
							}
						});
					var viewExample = function (_v6) {
						var chart = _v6.a;
						var title = _v6.b;
						var code = _v6.c;
						return A3(
							frame,
							title,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
									$mdgriffith$elm_ui$Element$spacing(50)
								]),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Element$el,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$width(
											A2($mdgriffith$elm_ui$Element$maximum, 320, $mdgriffith$elm_ui$Element$fill)),
											A2($mdgriffith$elm_ui$Element$paddingXY, 15, 0),
											$mdgriffith$elm_ui$Element$alignTop,
											$mdgriffith$elm_ui$Element$Font$size(12)
										]),
									$mdgriffith$elm_ui$Element$html(chart)),
									A2(
									$mdgriffith$elm_ui$Element$el,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$alignTop,
											$mdgriffith$elm_ui$Element$Font$size(12),
											$mdgriffith$elm_ui$Element$Background$color(
											A3($mdgriffith$elm_ui$Element$rgb255, 250, 250, 250))
										]),
									$author$project$Ui$Code$view(code))
								]));
					};
					return A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$spacing(90),
								$mdgriffith$elm_ui$Element$paddingEach(
								{a4: 50, c2: 0, c5: 0, di: 0})
							]),
						A2(
							$elm$core$List$map,
							viewExample,
							_List_fromArray(
								[
									_Utils_Tuple3(
									A2(
										$elm$html$Html$map,
										function (_v0) {
											return $author$project$Page$GettingStarted$None;
										},
										$author$project$Examples$Frontpage$BasicNavigation$view(0)),
									$author$project$Examples$Frontpage$BasicNavigation$meta.dO,
									$author$project$Examples$Frontpage$BasicNavigation$smallCode),
									_Utils_Tuple3(
									A2(
										$elm$html$Html$map,
										function (_v1) {
											return $author$project$Page$GettingStarted$None;
										},
										$author$project$Examples$Frontpage$BasicArea$view(0)),
									$author$project$Examples$Frontpage$BasicArea$meta.dO,
									$author$project$Examples$Frontpage$BasicArea$smallCode),
									_Utils_Tuple3(
									A2(
										$elm$html$Html$map,
										function (_v2) {
											return $author$project$Page$GettingStarted$None;
										},
										$author$project$Examples$Frontpage$BasicBar$view(0)),
									$author$project$Examples$Frontpage$BasicBar$meta.dO,
									$author$project$Examples$Frontpage$BasicBar$smallCode),
									_Utils_Tuple3(
									A2(
										$elm$html$Html$map,
										function (_v3) {
											return $author$project$Page$GettingStarted$None;
										},
										$author$project$Examples$Frontpage$BasicLine$view(0)),
									$author$project$Examples$Frontpage$BasicLine$meta.dO,
									$author$project$Examples$Frontpage$BasicLine$smallCode),
									_Utils_Tuple3(
									A2(
										$elm$html$Html$map,
										function (_v4) {
											return $author$project$Page$GettingStarted$None;
										},
										$author$project$Examples$Frontpage$BasicScatter$view(0)),
									$author$project$Examples$Frontpage$BasicScatter$meta.dO,
									$author$project$Examples$Frontpage$BasicScatter$smallCode),
									_Utils_Tuple3(
									A2(
										$elm$html$Html$map,
										function (_v5) {
											return $author$project$Page$GettingStarted$None;
										},
										$author$project$Examples$Frontpage$BasicBubble$view(0)),
									$author$project$Examples$Frontpage$BasicBubble$meta.dO,
									$author$project$Examples$Frontpage$BasicBubble$smallCode)
								])));
				}(),
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$underline,
							$mdgriffith$elm_ui$Element$Font$size(18),
							$mdgriffith$elm_ui$Element$Font$center,
							A2($mdgriffith$elm_ui$Element$paddingXY, 0, 20)
						]),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Element$link,
							_List_Nil,
							{
								dL: $mdgriffith$elm_ui$Element$text('See more examples →'),
								jq: $author$project$Route$documentation
							})
						]))
				])),
		i5: 'elm-charts | Getting started'
	};
};
var $author$project$Page$Home$MenuMsg = function (a) {
	return {$: 1, a: a};
};
var $author$project$Page$Home$ConciseMsg = function (a) {
	return {$: 3, a: a};
};
var $author$project$Page$Home$FamiliarToggle = {$: 4};
var $author$project$Page$Home$None = {$: 6};
var $mdgriffith$elm_ui$Internal$Flag$fontWeight = $mdgriffith$elm_ui$Internal$Flag$flag(13);
var $mdgriffith$elm_ui$Element$Font$bold = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontWeight, $mdgriffith$elm_ui$Internal$Style$classes.g_);
var $author$project$Page$Home$features = function (model) {
	return _List_fromArray(
		[
			{
			dr: _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('The interface of elm-charts mirrors the element and attribute pattern which '),
					$mdgriffith$elm_ui$Element$text('you already know from regular HTML. '),
					A2($author$project$Ui$Layout$link, $author$project$Route$gettingStarted, 'Get started'),
					$mdgriffith$elm_ui$Element$text(' composing your chart in minutes, then learn and add features gradually.')
				]),
			a5: $mdgriffith$elm_ui$Element$html(
				A2(
					$elm$html$Html$map,
					function (_v0) {
						return $author$project$Page$Home$None;
					},
					$author$project$Examples$Frontpage$Familiar$view(0))),
			a6: $author$project$Examples$Frontpage$Familiar$smallCode,
			c_: false,
			i5: 'Intuitive',
			dh: $elm$core$Maybe$Just(
				_Utils_Tuple2($author$project$Page$Home$FamiliarToggle, model.cZ))
		},
			{
			dr: _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('No clutter, even with tricky requirements. Great support for '),
					$mdgriffith$elm_ui$Element$text('interactivity, advanced labeling, guidence lines, and '),
					$mdgriffith$elm_ui$Element$text('irregular details.')
				]),
			a5: $mdgriffith$elm_ui$Element$html(
				A2(
					$elm$html$Html$map,
					$author$project$Page$Home$ConciseMsg,
					$author$project$Examples$Frontpage$Concise$view(model.a8))),
			a6: $author$project$Examples$Frontpage$Concise$smallCode,
			c_: true,
			i5: 'Flexible, yet concise',
			dh: $elm$core$Maybe$Nothing
		},
			{
			dr: _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Outside the regular elm documentation of the API, '),
					$mdgriffith$elm_ui$Element$text('there are '),
					A2(
					$mdgriffith$elm_ui$Element$el,
					_List_fromArray(
						[$mdgriffith$elm_ui$Element$Font$bold]),
					$mdgriffith$elm_ui$Element$text('more than 100 examples ')),
					$mdgriffith$elm_ui$Element$text('on this site to help you '),
					$mdgriffith$elm_ui$Element$text('compose your exact chart. '),
					A2(
					$mdgriffith$elm_ui$Element$link,
					_List_fromArray(
						[$mdgriffith$elm_ui$Element$Font$underline]),
					{
						dL: $mdgriffith$elm_ui$Element$text('Explore the catalog'),
						jq: $author$project$Route$documentation
					}),
					$mdgriffith$elm_ui$Element$text('.')
				]),
			a5: function () {
				var viewOne = function () {
					var _v2 = $author$project$Ui$Layout$screen(model.a$);
					switch (_v2) {
						case 2:
							return $mdgriffith$elm_ui$Element$link(
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width(
										$mdgriffith$elm_ui$Element$px(90)),
										$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
									]));
						case 1:
							return $mdgriffith$elm_ui$Element$link(
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width(
										$mdgriffith$elm_ui$Element$px(90)),
										$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
									]));
						default:
							return $mdgriffith$elm_ui$Element$link(
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width(
										$mdgriffith$elm_ui$Element$px(50)),
										$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
									]));
					}
				}();
				return A2(
					$mdgriffith$elm_ui$Element$map,
					function (_v1) {
						return $author$project$Page$Home$None;
					},
					A2(
						$mdgriffith$elm_ui$Element$wrappedRow,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$spacing(30),
								$mdgriffith$elm_ui$Element$alignTop,
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
							]),
						A2(
							$elm$core$List$map,
							viewOne,
							A2(
								$elm$core$List$map,
								function (id) {
									return {
										dL: A2(
											$mdgriffith$elm_ui$Element$el,
											_List_fromArray(
												[
													$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
												]),
											$mdgriffith$elm_ui$Element$html(
												A2($author$project$Examples$view, $author$project$Examples$init, id))),
										jq: $author$project$Ui$Thumbnail$toUrl(id)
									};
								},
								_List_fromArray(
									[7, 3, 54, 40, 82, 102, 100, 75, 84, 5, 18, 97])))));
			}(),
			a6: '',
			c_: false,
			i5: 'Learn by example',
			dh: $elm$core$Maybe$Nothing
		}
		]);
};
var $author$project$Ui$Layout$title = F2(
	function (window, config) {
		return A2(
			$mdgriffith$elm_ui$Element$textColumn,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$Font$center,
					A2($mdgriffith$elm_ui$Element$paddingXY, 0, config.ai),
					$mdgriffith$elm_ui$Element$spacing(10)
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$size(
							function () {
								var _v0 = $author$project$Ui$Layout$screen(window);
								switch (_v0) {
									case 2:
										return 120;
									case 1:
										return 80;
									default:
										return 52;
								}
							}())
						]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text(config.i5)
						])),
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$size(
							function () {
								var _v1 = $author$project$Ui$Layout$screen(window);
								switch (_v1) {
									case 2:
										return 28;
									case 1:
										return 28;
									default:
										return 20;
								}
							}())
						]),
					config.iP)
				]));
	});
var $author$project$Page$Home$viewFeature = F2(
	function (window, config) {
		var viewToggler = F2(
			function (onToggle, isToggled) {
				return A2(
					$mdgriffith$elm_ui$Element$Input$button,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$alignRight,
							$mdgriffith$elm_ui$Element$Font$size(14)
						]),
					{
						dL: $mdgriffith$elm_ui$Element$text(
							isToggled ? 'Show chart' : 'Show code'),
						ia: $elm$core$Maybe$Just(onToggle)
					});
			});
		var viewText = A2(
			$mdgriffith$elm_ui$Element$textColumn,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$alignTop,
					$mdgriffith$elm_ui$Element$alignLeft,
					$mdgriffith$elm_ui$Element$spacing(10)
				]),
			_List_fromArray(
				[
					A2($author$project$Ui$Layout$heading, window, config.i5),
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$size(16),
							$mdgriffith$elm_ui$Element$Font$color(
							A3($mdgriffith$elm_ui$Element$rgb255, 100, 100, 100)),
							A2($mdgriffith$elm_ui$Element$paddingXY, 0, 10),
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
						]),
					config.dr)
				]));
		var viewCode = A2(
			$mdgriffith$elm_ui$Element$el,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width(
					A2($mdgriffith$elm_ui$Element$maximum, 600, $mdgriffith$elm_ui$Element$fill)),
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$Background$color(
					A3($mdgriffith$elm_ui$Element$rgb255, 250, 250, 250))
				]),
			$author$project$Ui$Code$view(config.a6));
		var viewChart = A2(
			$mdgriffith$elm_ui$Element$el,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$centerX,
					$mdgriffith$elm_ui$Element$alignTop
				]),
			config.a5);
		var viewImage = function () {
			var _v1 = config.dh;
			if (_v1.$ === 1) {
				return viewChart;
			} else {
				var _v2 = _v1.a;
				var onToggle = _v2.a;
				var isToggled = _v2.b;
				return A2(
					$mdgriffith$elm_ui$Element$column,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$alignTop,
							$mdgriffith$elm_ui$Element$centerX,
							$mdgriffith$elm_ui$Element$spacing(20)
						]),
					_List_fromArray(
						[
							A2(viewToggler, onToggle, isToggled),
							isToggled ? viewCode : viewChart
						]));
			}
		}();
		var _v0 = $author$project$Ui$Layout$screen(window);
		switch (_v0) {
			case 2:
				return A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$spacing(60)
						]),
					config.c_ ? _List_fromArray(
						[viewImage, viewText]) : _List_fromArray(
						[viewText, viewImage]));
			case 1:
				return A2(
					$mdgriffith$elm_ui$Element$column,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width(
							A2($mdgriffith$elm_ui$Element$maximum, 550, $mdgriffith$elm_ui$Element$fill)),
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$spacing(30),
							$mdgriffith$elm_ui$Element$centerX
						]),
					_List_fromArray(
						[viewText, viewImage]));
			default:
				return A2(
					$mdgriffith$elm_ui$Element$column,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$spacing(20)
						]),
					_List_fromArray(
						[viewText, viewImage]));
		}
	});
var $author$project$Page$Home$Dashboard1Msg = function (a) {
	return {$: 7, a: a};
};
var $author$project$Page$Home$Dashboard2Msg = function (a) {
	return {$: 8, a: a};
};
var $author$project$Page$Home$Dashboard3Msg = function (a) {
	return {$: 9, a: a};
};
var $author$project$Page$Home$Dashboard4Msg = function (a) {
	return {$: 10, a: a};
};
var $author$project$Charts$Dashboard1$Bar = function (a) {
	return {$: 0, a: a};
};
var $author$project$Charts$Dashboard1$Dot = function (a) {
	return {$: 1, a: a};
};
var $author$project$Charts$Dashboard1$OnHover = F2(
	function (a, b) {
		return {$: 0, a: a, b: b};
	});
var $author$project$Charts$Dashboard1$BarDatum = F3(
	function (x, y, z) {
		return {b: x, a: y, gA: z};
	});
var $author$project$Charts$Dashboard1$barData = _List_fromArray(
	[
		A3(
		$author$project$Charts$Dashboard1$BarDatum,
		1612440000000,
		$elm$core$Maybe$Just(100342),
		$elm$core$Maybe$Just(20231)),
		A3(
		$author$project$Charts$Dashboard1$BarDatum,
		1612440300000,
		$elm$core$Maybe$Just(124731),
		$elm$core$Maybe$Just(13802)),
		A3(
		$author$project$Charts$Dashboard1$BarDatum,
		1612440600000,
		$elm$core$Maybe$Just(151421),
		$elm$core$Maybe$Just(23038)),
		A3(
		$author$project$Charts$Dashboard1$BarDatum,
		1612440900000,
		$elm$core$Maybe$Just(92132),
		$elm$core$Maybe$Just(14047)),
		A3(
		$author$project$Charts$Dashboard1$BarDatum,
		1612441200000,
		$elm$core$Maybe$Just(53970),
		$elm$core$Maybe$Just(13406)),
		A3(
		$author$project$Charts$Dashboard1$BarDatum,
		1612441500000,
		$elm$core$Maybe$Just(30122),
		$elm$core$Maybe$Just(0)),
		A3(
		$author$project$Charts$Dashboard1$BarDatum,
		1612441800000,
		$elm$core$Maybe$Just(66130),
		$elm$core$Maybe$Just(23094)),
		A3(
		$author$project$Charts$Dashboard1$BarDatum,
		1612442100000,
		$elm$core$Maybe$Just(87002),
		$elm$core$Maybe$Just(18120)),
		A3($author$project$Charts$Dashboard1$BarDatum, 1612442400000, $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing),
		A3(
		$author$project$Charts$Dashboard1$BarDatum,
		1612442700000,
		$elm$core$Maybe$Just(102032),
		$elm$core$Maybe$Just(30379)),
		A3(
		$author$project$Charts$Dashboard1$BarDatum,
		1612443000000,
		$elm$core$Maybe$Just(122101),
		$elm$core$Maybe$Just(34092))
	]);
var $author$project$Chart$barMaybe = function (y) {
	return A2($author$project$Internal$Property$notStacked, y, _List_Nil);
};
var $author$project$Internal$Item$filterMap = function (func) {
	return $elm$core$List$filterMap(
		function (_v0) {
			var meta = _v0.a;
			var item = _v0.b;
			var _v1 = func(meta.hl);
			if (!_v1.$) {
				var b = _v1.a;
				return $elm$core$Maybe$Just(
					A2(
						$author$project$Internal$Item$Rendered,
						{d: meta.d, hl: b, hJ: meta.hJ, hW: meta.hW, dO: meta.dO, ij: meta.ij, i7: meta.i7, jj: meta.jj, a1: meta.a1, dm: meta.dm, a: meta.a},
						item));
			} else {
				return $elm$core$Maybe$Nothing;
			}
		});
};
var $author$project$Chart$Item$filter = $author$project$Internal$Item$filterMap;
var $ryannhg$date_format$DateFormat$DayOfMonthSuffix = {$: 6};
var $ryannhg$date_format$DateFormat$dayOfMonthSuffix = $ryannhg$date_format$DateFormat$DayOfMonthSuffix;
var $ryannhg$date_format$DateFormat$MonthNameFull = {$: 4};
var $ryannhg$date_format$DateFormat$monthNameFull = $ryannhg$date_format$DateFormat$MonthNameFull;
var $author$project$Charts$Dashboard1$formatFullTime = $ryannhg$date_format$DateFormat$format(
	_List_fromArray(
		[
			$ryannhg$date_format$DateFormat$monthNameFull,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$dayOfMonthSuffix,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$yearNumber,
			$ryannhg$date_format$DateFormat$text(' '),
			$ryannhg$date_format$DateFormat$hourMilitaryFixed,
			$ryannhg$date_format$DateFormat$text(':'),
			$ryannhg$date_format$DateFormat$minuteFixed
		]));
var $author$project$Internal$Svg$getNearestXHelp = F4(
	function (toPosition, items, plane, searched) {
		var toPoint = function (i) {
			return A2(
				$author$project$Internal$Svg$closestPoint,
				toPosition(i),
				searched);
		};
		var distanceX_ = A2($author$project$Internal$Svg$distanceX, plane, searched);
		var getClosest = F2(
			function (item, allClosest) {
				var _v0 = $elm$core$List$head(allClosest);
				if (!_v0.$) {
					var closest = _v0.a;
					return _Utils_eq(
						toPoint(closest).b,
						toPoint(item).b) ? A2($elm$core$List$cons, item, allClosest) : ((_Utils_cmp(
						distanceX_(
							toPoint(closest)),
						distanceX_(
							toPoint(item))) > 0) ? _List_fromArray(
						[item]) : allClosest);
				} else {
					return _List_fromArray(
						[item]);
				}
			});
		return A2(
			$author$project$Internal$Svg$keepOne,
			toPosition,
			A3($elm$core$List$foldl, getClosest, _List_Nil, items));
	});
var $author$project$Internal$Svg$getNearestX = F4(
	function (toPosition, items, plane, searched) {
		return A4($author$project$Internal$Svg$getNearestXHelp, toPosition, items, plane, searched);
	});
var $author$project$Internal$Events$getNearestX = function (grouping) {
	var toPos = grouping.a;
	return F2(
		function (items, plane) {
			var groups = A2($author$project$Internal$Many$apply, grouping, items);
			return A3(
				$author$project$Internal$Svg$getNearestX,
				toPos(plane),
				groups,
				plane);
		});
};
var $author$project$Chart$Events$getNearestX = $author$project$Internal$Events$getNearestX;
var $author$project$Chart$Item$getTooltip = $author$project$Internal$Item$tooltip;
var $author$project$Internal$Svg$withinRadiusX = F4(
	function (plane, radius, searched, point) {
		return _Utils_cmp(
			A3($author$project$Internal$Svg$distanceX, plane, searched, point),
			radius) < 1;
	});
var $author$project$Internal$Svg$getWithinX = F5(
	function (radius, toPosition, items, plane, searched) {
		var toPoint = function (i) {
			return A2(
				$author$project$Internal$Svg$closestPoint,
				toPosition(i),
				searched);
		};
		var keepIfEligible = A2(
			$elm$core$Basics$composeL,
			A3($author$project$Internal$Svg$withinRadiusX, plane, radius, searched),
			toPoint);
		return A2(
			$elm$core$List$filter,
			keepIfEligible,
			A4($author$project$Internal$Svg$getNearestXHelp, toPosition, items, plane, searched));
	});
var $author$project$Internal$Events$getWithinX = F2(
	function (radius, grouping) {
		var toPos = grouping.a;
		return F2(
			function (items, plane) {
				var groups = A2($author$project$Internal$Many$apply, grouping, items);
				return A4(
					$author$project$Internal$Svg$getWithinX,
					radius,
					toPos(plane),
					groups,
					plane);
			});
	});
var $author$project$Chart$Events$getWithinX = $author$project$Internal$Events$getWithinX;
var $author$project$Chart$Item$isReal = $author$project$Internal$Item$isReal;
var $author$project$Charts$Dashboard1$justDot = function (datum) {
	if (!datum.$) {
		return $elm$core$Maybe$Nothing;
	} else {
		var dot = datum.a;
		return $elm$core$Maybe$Just(dot);
	}
};
var $author$project$Charts$Dashboard1$DotDatum = F2(
	function (x, y) {
		return {b: x, a: y};
	});
var $author$project$Charts$Dashboard1$lineData = _List_fromArray(
	[
		A2($author$project$Charts$Dashboard1$DotDatum, 1612440000000, 140000),
		A2($author$project$Charts$Dashboard1$DotDatum, 1612440300000, 135000),
		A2($author$project$Charts$Dashboard1$DotDatum, 1612440600000, 160000),
		A2($author$project$Charts$Dashboard1$DotDatum, 1612440900000, 95000),
		A2($author$project$Charts$Dashboard1$DotDatum, 1612441200000, 74000),
		A2($author$project$Charts$Dashboard1$DotDatum, 1612441500000, 32000),
		A2($author$project$Charts$Dashboard1$DotDatum, 1612441800000, 86000),
		A2($author$project$Charts$Dashboard1$DotDatum, 1612442100000, 83000),
		A2($author$project$Charts$Dashboard1$DotDatum, 1612442400000, 60000),
		A2($author$project$Charts$Dashboard1$DotDatum, 1612442700000, 92000),
		A2($author$project$Charts$Dashboard1$DotDatum, 1612443000000, 72000),
		A2($author$project$Charts$Dashboard1$DotDatum, 1612443300000, 52000),
		A2($author$project$Charts$Dashboard1$DotDatum, 1612443600000, 62000)
	]);
var $author$project$Charts$Dashboard1$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(300),
				$author$project$Chart$Attributes$width(490),
				$author$project$Chart$Attributes$margin(
				{a4: 18, c2: 10, c5: 0, di: 0}),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 0, c5: 35, di: 10}),
				A2(
				$author$project$Chart$Events$on,
				'mousemove',
				A3(
					$author$project$Chart$Events$map2,
					$author$project$Charts$Dashboard1$OnHover,
					$author$project$Chart$Events$getNearestX($author$project$Chart$Item$dots),
					A2(
						$author$project$Chart$Events$getWithinX,
						8,
						A2($author$project$Chart$Item$andThen, $author$project$Chart$Item$bins, $author$project$Chart$Item$bars)))),
				$author$project$Chart$Events$onMouseLeave(
				A2($author$project$Charts$Dashboard1$OnHover, _List_Nil, _List_Nil))
			]),
		_List_fromArray(
			[
				$author$project$Chart$grid(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$dashed(
						_List_fromArray(
							[3, 2]))
					])),
				$author$project$Chart$xLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$withGrid,
						$author$project$Chart$Attributes$times($elm$time$Time$utc),
						$author$project$Chart$Attributes$amount(20),
						$author$project$Chart$Attributes$fontSize(10)
					])),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$withGrid,
						$author$project$Chart$Attributes$pinned(
						function ($) {
							return $.J;
						}),
						$author$project$Chart$Attributes$moveUp(7),
						$author$project$Chart$Attributes$moveRight(10),
						$author$project$Chart$Attributes$fontSize(10),
						$author$project$Chart$Attributes$format(
						function (i) {
							return $elm$core$String$fromFloat(i / 1000) + 'k';
						})
					])),
				A4(
				$author$project$Chart$barsMap,
				$author$project$Charts$Dashboard1$Bar,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$x1(
						function (d) {
							return d.b + 150000;
						}),
						$author$project$Chart$Attributes$noGrid,
						$author$project$Chart$Attributes$roundTop(0.2),
						$author$project$Chart$Attributes$ungroup
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$named,
						'Requests',
						A2(
							$author$project$Chart$barMaybe,
							function ($) {
								return $.a;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$color('#7b4dffAF'),
									$author$project$Chart$Attributes$gradient(
									_List_fromArray(
										['#7b4dff6F', '#7b4dff1F']))
								]))),
						A2(
						$author$project$Chart$named,
						'Sales',
						A2(
							$author$project$Chart$barMaybe,
							function ($) {
								return $.gA;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$color('#666'),
									$author$project$Chart$Attributes$gradient(
									_List_fromArray(
										['#bfc2c9', '#bfc2c96F']))
								])))
					]),
				$author$project$Charts$Dashboard1$barData),
				A4(
				$author$project$Chart$seriesMap,
				$author$project$Charts$Dashboard1$Dot,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$amongst,
						A2($author$project$Chart$Item$filter, $author$project$Charts$Dashboard1$justDot, model.c$),
						function (_v0) {
							return _List_fromArray(
								[
									$author$project$Chart$Attributes$color('#7b4dff'),
									$author$project$Chart$Attributes$border('white')
								]);
						},
						A2(
							$author$project$Chart$named,
							'Customers',
							A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.a;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$monotone,
										$author$project$Chart$Attributes$color('#7b4dff'),
										$author$project$Chart$Attributes$width(1.5),
										$author$project$Chart$Attributes$opacity(0.2)
									]),
								_List_fromArray(
									[
										$author$project$Chart$Attributes$color('white'),
										$author$project$Chart$Attributes$borderWidth(1.5),
										$author$project$Chart$Attributes$circle
									]))))
					]),
				$author$project$Charts$Dashboard1$lineData),
				A2(
				$author$project$Chart$each,
				model.c0,
				F2(
					function (p, stack) {
						var eachBar = function (bar) {
							return $author$project$Chart$Item$isReal(bar) ? A3(
								$author$project$Chart$label,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$moveDown(16),
										$author$project$Chart$Attributes$fontSize(10),
										$author$project$Chart$Attributes$color('rgba(255, 255, 255, 0.4)')
									]),
								_List_fromArray(
									[
										$elm$svg$Svg$text(
										$elm$core$String$fromInt(
											$elm$core$Basics$round(
												$author$project$Chart$Item$getY(bar) / 1000)) + 'k')
									]),
								A2($author$project$Chart$Item$getTop, p, bar)) : A3(
								$author$project$Chart$label,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$moveUp(15),
										$author$project$Chart$Attributes$fontSize(10),
										$author$project$Chart$Attributes$color('rgb(120, 120, 120)')
									]),
								_List_fromArray(
									[
										$elm$svg$Svg$text('No data')
									]),
								A2($author$project$Chart$Item$getTop, p, bar));
						};
						return A2(
							$elm$core$List$map,
							eachBar,
							$author$project$Chart$Item$getMembers(stack));
					})),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, dot) {
						var xValue = $elm$time$Time$millisToPosix(
							$elm$core$Basics$round(
								$author$project$Chart$Item$getX(dot)));
						var withPadding = function (i) {
							return A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'padding', '2px 0')
									]),
								_List_fromArray(
									[i]));
						};
						var rows = _Utils_ap(
							$author$project$Chart$Item$getTooltip(dot),
							A2(
								$elm$core$List$concatMap,
								$author$project$Chart$Item$getTooltip,
								A2($elm$core$List$concatMap, $author$project$Chart$Item$getMembers, model.c0)));
						var header = A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'padding', '5px 0 5px 0'),
									A2($elm$html$Html$Attributes$style, 'color', 'rgb(120, 120, 120)')
								]),
							_List_fromArray(
								[
									$elm$html$Html$text(
									A2($author$project$Charts$Dashboard1$formatFullTime, $elm$time$Time$utc, xValue))
								]));
						var body = A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'padding-bottom', '5px')
								]),
							A2($elm$core$List$map, withPadding, rows));
						return _List_fromArray(
							[
								A4(
								$author$project$Chart$tooltip,
								dot,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$onLeftOrRight,
										$author$project$Chart$Attributes$offset(8),
										$author$project$Chart$Attributes$center
									]),
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'font-size', '14px')
									]),
								_List_fromArray(
									[header, body]))
							]);
					}))
			]));
};
var $author$project$Charts$Dashboard2$OnHover = $elm$core$Basics$identity;
var $author$project$Charts$Dashboard2$Datum = F2(
	function (x, y) {
		return {b: x, a: y};
	});
var $author$project$Charts$Dashboard2$barData = _List_fromArray(
	[
		A2($author$project$Charts$Dashboard2$Datum, 1612440000000, 56),
		A2($author$project$Charts$Dashboard2$Datum, 1612440300000, 32),
		A2($author$project$Charts$Dashboard2$Datum, 1612440600000, 0),
		A2($author$project$Charts$Dashboard2$Datum, 1612440900000, 7),
		A2($author$project$Charts$Dashboard2$Datum, 1612441200000, 48),
		A2($author$project$Charts$Dashboard2$Datum, 1612441500000, 24),
		A2($author$project$Charts$Dashboard2$Datum, 1612441800000, 0),
		A2($author$project$Charts$Dashboard2$Datum, 1612442100000, 88)
	]);
var $author$project$Charts$Dashboard2$lineData = _List_fromArray(
	[
		A2($author$project$Charts$Dashboard2$Datum, 1612440000000, 90),
		A2($author$project$Charts$Dashboard2$Datum, 1612440300000, 80),
		A2($author$project$Charts$Dashboard2$Datum, 1612440600000, 97),
		A2($author$project$Charts$Dashboard2$Datum, 1612440900000, 65),
		A2($author$project$Charts$Dashboard2$Datum, 1612441200000, 72),
		A2($author$project$Charts$Dashboard2$Datum, 1612441500000, 56),
		A2($author$project$Charts$Dashboard2$Datum, 1612441800000, 82),
		A2($author$project$Charts$Dashboard2$Datum, 1612442100000, 94),
		A2($author$project$Charts$Dashboard2$Datum, 1612442400000, 76)
	]);
var $author$project$Charts$Dashboard2$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(135),
				$author$project$Chart$Attributes$width(225),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearest($author$project$Chart$Item$dots)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$amongst,
						model.c$,
						function (_v0) {
							return _List_fromArray(
								[
									$author$project$Chart$Attributes$circle,
									$author$project$Chart$Attributes$color($author$project$Chart$Attributes$pink),
									$author$project$Chart$Attributes$size(15)
								]);
						},
						A2(
							$author$project$Chart$named,
							'Combinations',
							A3(
								$author$project$Chart$interpolated,
								function ($) {
									return $.a;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$monotone,
										$author$project$Chart$Attributes$color('#555'),
										$author$project$Chart$Attributes$dashed(
										_List_fromArray(
											[5, 5])),
										$author$project$Chart$Attributes$width(3),
										$author$project$Chart$Attributes$opacity(0.1)
									]),
								_List_Nil)))
					]),
				$author$project$Charts$Dashboard2$lineData),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$x1(
						function ($) {
							return $.b;
						}),
						$author$project$Chart$Attributes$roundTop(0.2),
						$author$project$Chart$Attributes$margin(0.05)
					]),
				_List_fromArray(
					[
						A2(
						$author$project$Chart$bar,
						function ($) {
							return $.a;
						},
						_List_fromArray(
							[
								$author$project$Chart$Attributes$color($author$project$Chart$Attributes$pink),
								$author$project$Chart$Attributes$opacity(0.8)
							]))
					]),
				$author$project$Charts$Dashboard2$barData),
				$author$project$Chart$eachBar(
				F2(
					function (p, bar) {
						var value = $author$project$Chart$Item$getY(bar);
						var color = (value < 10) ? '#6f6f6f' : 'white';
						var bottom = A2($author$project$Chart$Item$getBottom, p, bar);
						return (!value) ? _List_Nil : _List_fromArray(
							[
								A3(
								$author$project$Chart$label,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$color(color),
										$author$project$Chart$Attributes$moveUp(6),
										$author$project$Chart$Attributes$fontSize(14)
									]),
								_List_fromArray(
									[
										$elm$svg$Svg$text(
										$elm$core$String$fromFloat(value))
									]),
								bottom)
							]);
					})),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, dot) {
						return _List_fromArray(
							[
								A3(
								$author$project$Chart$label,
								_List_fromArray(
									[
										$author$project$Chart$Attributes$fontSize(14),
										$author$project$Chart$Attributes$moveUp(10)
									]),
								_List_fromArray(
									[
										$elm$svg$Svg$text(
										$elm$core$String$fromFloat(
											$author$project$Chart$Item$getY(dot)))
									]),
								A2($author$project$Chart$Item$getTop, p, dot))
							]);
					}))
			]));
};
var $author$project$Charts$Dashboard3$OnHover = $elm$core$Basics$identity;
var $author$project$Charts$Dashboard3$Datum = F2(
	function (x, y) {
		return {b: x, a: y};
	});
var $author$project$Charts$Dashboard3$lineData = _List_fromArray(
	[
		A2(
		$author$project$Charts$Dashboard3$Datum,
		1612137600000,
		$elm$core$Maybe$Just(80)),
		A2(
		$author$project$Charts$Dashboard3$Datum,
		1614556800000,
		$elm$core$Maybe$Just(97)),
		A2(
		$author$project$Charts$Dashboard3$Datum,
		1617235200000,
		$elm$core$Maybe$Just(65)),
		A2($author$project$Charts$Dashboard3$Datum, 1617235200001, $elm$core$Maybe$Nothing),
		A2(
		$author$project$Charts$Dashboard3$Datum,
		1619827200000,
		$elm$core$Maybe$Just(72)),
		A2(
		$author$project$Charts$Dashboard3$Datum,
		1622505600000,
		$elm$core$Maybe$Just(56)),
		A2(
		$author$project$Charts$Dashboard3$Datum,
		1625097600000,
		$elm$core$Maybe$Just(82)),
		A2(
		$author$project$Charts$Dashboard3$Datum,
		1627776000000,
		$elm$core$Maybe$Just(94)),
		A2(
		$author$project$Charts$Dashboard3$Datum,
		1630454400000,
		$elm$core$Maybe$Just(76)),
		A2(
		$author$project$Charts$Dashboard3$Datum,
		1633046400000,
		$elm$core$Maybe$Just(83))
	]);
var $author$project$Chart$Attributes$uppercase = function (config) {
	return _Utils_update(
		config,
		{w: true});
};
var $author$project$Charts$Dashboard3$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(135),
				$author$project$Chart$Attributes$width(225),
				$author$project$Chart$Attributes$margin(
				{a4: 18, c2: 0, c5: 0, di: 0}),
				$author$project$Chart$Attributes$padding(
				{a4: 0, c2: 8, c5: 0, di: 10}),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearestX($author$project$Chart$Item$dots)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$xLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$times($elm$time$Time$utc),
						$author$project$Chart$Attributes$uppercase,
						$author$project$Chart$Attributes$fontSize(9),
						$author$project$Chart$Attributes$amount(10)
					])),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, dot) {
						return _List_fromArray(
							[
								$author$project$Chart$line(
								_List_fromArray(
									[
										$author$project$Chart$Attributes$x1(
										$author$project$Chart$Item$getX(dot)),
										$author$project$Chart$Attributes$width(2),
										$author$project$Chart$Attributes$dashed(
										_List_fromArray(
											[5, 5]))
									]))
							]);
					})),
				A3(
				$author$project$Chart$series,
				function ($) {
					return $.b;
				},
				_List_fromArray(
					[
						A3(
						$author$project$Chart$amongst,
						model.c$,
						function (_v0) {
							return _List_fromArray(
								[
									$author$project$Chart$Attributes$size(14)
								]);
						},
						A3(
							$author$project$Chart$interpolatedMaybe,
							function ($) {
								return $.a;
							},
							_List_fromArray(
								[
									$author$project$Chart$Attributes$linear,
									$author$project$Chart$Attributes$color($author$project$Chart$Attributes$blue),
									$author$project$Chart$Attributes$width(1.5),
									$author$project$Chart$Attributes$opacity(0.4),
									$author$project$Chart$Attributes$gradient(
									_List_fromArray(
										[$author$project$Chart$Attributes$blue, 'white']))
								]),
							_List_fromArray(
								[
									$author$project$Chart$Attributes$diamond,
									$author$project$Chart$Attributes$color('white'),
									$author$project$Chart$Attributes$borderWidth(1.5),
									$author$project$Chart$Attributes$size(8)
								])))
					]),
				$author$project$Charts$Dashboard3$lineData)
			]));
};
var $author$project$Charts$Dashboard4$OnHover = $elm$core$Basics$identity;
var $author$project$Charts$Dashboard4$Datum = F2(
	function (score, name) {
		return {dO: name, dT: score};
	});
var $author$project$Charts$Dashboard4$data = _List_fromArray(
	[
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(23),
		'Alexander'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(48),
		'Anne'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(98),
		'Alice'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(85),
		'Brian'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(32),
		'Bobby'),
		A2($author$project$Charts$Dashboard4$Datum, $elm$core$Maybe$Nothing, 'Byron'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(72),
		'Cirkeline'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(56),
		'Diana'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(64),
		'Felicia'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(45),
		'Felipa'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(28),
		'Georgina'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(45),
		'Helena'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(56),
		'Irina'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(52),
		'Iris'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(68),
		'Jack'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(72),
		'Kristine'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(87),
		'Linea'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(92),
		'Mina'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(100),
		'Prudence'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(65),
		'Pauline'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(59),
		'Preston'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(47),
		'Regina'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(86),
		'Ruzena'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(37),
		'Regitze'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(59),
		'Selena'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(62),
		'Sylvia'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(76),
		'Tristen'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(79),
		'Ursula'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(65),
		'Virginia'),
		A2(
		$author$project$Charts$Dashboard4$Datum,
		$elm$core$Maybe$Just(35),
		'Winston')
	]);
var $author$project$Chart$Attributes$highlightWidth = function (v) {
	return function (config) {
		return _Utils_update(
			config,
			{hG: v});
	};
};
var $author$project$Chart$Attributes$onTop = function (config) {
	return _Utils_update(
		config,
		{
			hp: $elm$core$Maybe$Just(0)
		});
};
var $author$project$Charts$Dashboard4$colors = $elm$core$Dict$fromList(
	A2(
		$elm$core$List$indexedMap,
		$elm$core$Tuple$pair,
		$elm$core$List$reverse(
			_List_fromArray(
				['#00E58A', '#00E1CC', '#00AFDD', '#006BD9', '#0029D5', '#1600D2', '#5300CE', '#8F00CA', '#C600C5', '#C20086']))));
var $author$project$Charts$Dashboard4$toColor = function (score) {
	var key = $elm$core$Basics$floor(
		A2($elm$core$Maybe$withDefault, 0, score) / 10);
	return A2(
		$elm$core$Maybe$withDefault,
		'#00E58A',
		A2($elm$core$Dict$get, key, $author$project$Charts$Dashboard4$colors));
};
var $author$project$Charts$Dashboard4$view = function (model) {
	return A2(
		$author$project$Chart$chart,
		_List_fromArray(
			[
				$author$project$Chart$Attributes$height(140),
				$author$project$Chart$Attributes$width(490),
				$author$project$Chart$Attributes$margin(
				{a4: 0, c2: 0, c5: 20, di: 0}),
				A2(
				$author$project$Chart$Events$onMouseMove,
				$elm$core$Basics$identity,
				$author$project$Chart$Events$getNearestX($author$project$Chart$Item$bars)),
				$author$project$Chart$Events$onMouseLeave(_List_Nil)
			]),
		_List_fromArray(
			[
				$author$project$Chart$grid(_List_Nil),
				$author$project$Chart$yLabels(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$pinned(
						function ($) {
							return $.J;
						}),
						$author$project$Chart$Attributes$amount(1),
						$author$project$Chart$Attributes$flip,
						$author$project$Chart$Attributes$fontSize(10)
					])),
				$author$project$Chart$line(
				_List_fromArray(
					[
						$author$project$Chart$Attributes$y1(50),
						$author$project$Chart$Attributes$dashed(
						_List_fromArray(
							[5, 5]))
					])),
				A3(
				$author$project$Chart$bars,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$roundTop(1),
						$author$project$Chart$Attributes$roundBottom(1),
						$author$project$Chart$Attributes$margin(0.2),
						$author$project$Chart$Attributes$noGrid
					]),
				_List_fromArray(
					[
						A3(
						$author$project$Chart$amongst,
						model.c$,
						function (_v0) {
							return _List_fromArray(
								[
									$author$project$Chart$Attributes$highlight(0.2),
									$author$project$Chart$Attributes$highlightWidth(5)
								]);
						},
						A2(
							$author$project$Chart$variation,
							F2(
								function (i, d) {
									return _List_fromArray(
										[
											$author$project$Chart$Attributes$color(
											$author$project$Charts$Dashboard4$toColor(d.dT))
										]);
								}),
							A2(
								$author$project$Chart$barMaybe,
								function ($) {
									return $.dT;
								},
								_List_fromArray(
									[
										$author$project$Chart$Attributes$opacity(0.5)
									]))))
					]),
				$author$project$Charts$Dashboard4$data),
				A4(
				$author$project$Chart$labelAt,
				function ($) {
					return $.J;
				},
				$author$project$Chart$Attributes$middle,
				_List_fromArray(
					[
						$author$project$Chart$Attributes$rotate(90),
						$author$project$Chart$Attributes$moveRight(18)
					]),
				_List_fromArray(
					[
						$elm$svg$Svg$text('score')
					])),
				A2(
				$author$project$Chart$each,
				model.c$,
				F2(
					function (p, bar) {
						var datum = $author$project$Chart$Item$getData(bar);
						var scoreText = function () {
							var _v1 = datum.dT;
							if (!_v1.$) {
								var score = _v1.a;
								return $elm$core$String$fromFloat(score) + '/100';
							} else {
								return 'Absent';
							}
						}();
						return _List_fromArray(
							[
								A4(
								$author$project$Chart$tooltip,
								bar,
								_List_fromArray(
									[$author$project$Chart$Attributes$onTop]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$Attributes$style,
										'color',
										$author$project$Chart$Item$getColor(bar))
									]),
								_List_fromArray(
									[
										$elm$html$Html$text(datum.dO),
										$elm$html$Html$text(': '),
										$elm$html$Html$text(scoreText)
									]))
							]);
					}))
			]));
};
var $author$project$Page$Home$viewLanding = function (model) {
	var viewChart = F2(
		function (func, chart) {
			return A2(
				$mdgriffith$elm_ui$Element$el,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
					]),
				$mdgriffith$elm_ui$Element$html(
					A2($elm$html$Html$map, func, chart)));
		});
	var chart4 = A2(
		viewChart,
		$author$project$Page$Home$Dashboard4Msg,
		$author$project$Charts$Dashboard4$view(model.bd));
	var chart3 = A2(
		viewChart,
		$author$project$Page$Home$Dashboard3Msg,
		$author$project$Charts$Dashboard3$view(model.bc));
	var chart2 = A2(
		viewChart,
		$author$project$Page$Home$Dashboard2Msg,
		$author$project$Charts$Dashboard2$view(model.bb));
	var chart1 = A2(
		viewChart,
		$author$project$Page$Home$Dashboard1Msg,
		$author$project$Charts$Dashboard1$view(model.ba));
	var _v0 = $author$project$Ui$Layout$screen(model.a$);
	switch (_v0) {
		case 2:
			return A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$spacing(20)
					]),
				_List_fromArray(
					[
						chart1,
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$spacing(20)
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
										$mdgriffith$elm_ui$Element$spacing(20)
									]),
								_List_fromArray(
									[chart2, chart3])),
								chart4
							]))
					]));
		case 1:
			return A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$spacing(20)
					]),
				_List_fromArray(
					[
						chart1,
						A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$spacing(20)
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
										$mdgriffith$elm_ui$Element$spacing(20)
									]),
								_List_fromArray(
									[chart2, chart3])),
								chart4
							]))
					]));
		default:
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$spacing(20)
					]),
				_List_fromArray(
					[
						chart4,
						A2(
						$mdgriffith$elm_ui$Element$row,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$spacing(20)
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
										$mdgriffith$elm_ui$Element$spacing(20)
									]),
								_List_fromArray(
									[chart2, chart3]))
							]))
					]));
	}
};
var $author$project$Page$Home$view = function (model) {
	return {
		dr: A2(
			$author$project$Ui$Layout$view,
			model.a$,
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$map,
					$author$project$Page$Home$MenuMsg,
					A2($author$project$Ui$Menu$small, model.a$, model.c4)),
					$author$project$Page$Home$viewLanding(model),
					A2(
					$author$project$Ui$Layout$title,
					model.a$,
					{
						ai: 30,
						iP: _List_fromArray(
							[
								$mdgriffith$elm_ui$Element$text('Compose your chart with delight.')
							]),
						i5: 'elm-charts'
					}),
					function () {
					var _v0 = $author$project$Ui$Layout$screen(model.a$);
					switch (_v0) {
						case 2:
							return A2(
								$mdgriffith$elm_ui$Element$column,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
										$mdgriffith$elm_ui$Element$spacing(80),
										A2($mdgriffith$elm_ui$Element$paddingXY, 0, 40)
									]),
								A2(
									$elm$core$List$map,
									$author$project$Page$Home$viewFeature(model.a$),
									$author$project$Page$Home$features(model)));
						case 1:
							return A2(
								$mdgriffith$elm_ui$Element$column,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
										$mdgriffith$elm_ui$Element$spacing(70),
										A2($mdgriffith$elm_ui$Element$paddingXY, 0, 40)
									]),
								A2(
									$elm$core$List$map,
									$author$project$Page$Home$viewFeature(model.a$),
									$author$project$Page$Home$features(model)));
						default:
							return A2(
								$mdgriffith$elm_ui$Element$column,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
										$mdgriffith$elm_ui$Element$spacing(60),
										A2($mdgriffith$elm_ui$Element$paddingXY, 0, 40)
									]),
								A2(
									$elm$core$List$map,
									$author$project$Page$Home$viewFeature(model.a$),
									$author$project$Page$Home$features(model)));
					}
				}()
				])),
		i5: 'elm-charts'
	};
};
var $author$project$Main$view = function (model) {
	var viewPage = F2(
		function (toMsg, _v1) {
			var title = _v1.i5;
			var body = _v1.dr;
			return {
				dr: A2(
					$elm$core$List$map,
					$elm$html$Html$map(toMsg),
					body),
				i5: title
			};
		});
	var _v0 = model.aH;
	switch (_v0.$) {
		case 1:
			return {
				dr: _List_fromArray(
					[
						$elm$html$Html$text('Not found!')
					]),
				i5: 'Not found'
			};
		case 0:
			return {
				dr: _List_fromArray(
					[
						$elm$html$Html$text('')
					]),
				i5: 'Redirecting...'
			};
		case 2:
			var subModel = _v0.a;
			return A2(
				viewPage,
				$author$project$Main$Page_Home_Msg,
				$author$project$Page$Home$view(subModel));
		case 3:
			var subModel = _v0.a;
			return A2(
				viewPage,
				$author$project$Main$Page_Administration_Msg,
				$author$project$Page$Administration$view(subModel));
		case 4:
			var subModel = _v0.a;
			return A2(
				viewPage,
				$author$project$Main$Page_Documentation_Msg,
				$author$project$Page$Documentation$view(subModel));
		case 5:
			var subModel = _v0.a;
			return A2(
				viewPage,
				$author$project$Main$Page_Section_Msg,
				$author$project$Page$Section$view(subModel));
		case 6:
			var subModel = _v0.a;
			return A2(
				viewPage,
				$author$project$Main$Page_Example_Msg,
				$author$project$Page$Example$view(subModel));
		default:
			var subModel = _v0.a;
			return A2(
				viewPage,
				$author$project$Main$Page_GettingStarted_Msg,
				$author$project$Page$GettingStarted$view(subModel));
	}
};
var $author$project$Main$main = $elm$browser$Browser$application(
	{hO: $author$project$Main$init, ic: $author$project$Main$ChangedUrl, id: $author$project$Main$ClickedLink, iO: $author$project$Main$subscriptions, jp: $author$project$Main$update, js: $author$project$Main$view});
_Platform_export({'Main':{'init':$author$project$Main$main($elm$json$Json$Decode$value)(0)}});}(this));